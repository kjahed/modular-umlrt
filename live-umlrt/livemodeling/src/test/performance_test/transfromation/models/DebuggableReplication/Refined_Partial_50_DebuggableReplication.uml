<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_b2E1wEscEemqW9r6qRRt8w" source="dummy"/>
    <eAnnotations xmi:id="_HGbmwEv0EemKFvrCS693Vg" source="dummy"/>
    <eAnnotations xmi:id="_TYdEIEwXEemEEuQQDSssLQ" source="dummy"/>
    <eAnnotations xmi:id="_Sm5v8ExaEem7jeZgek5DNw" source="dummy"/>
    <eAnnotations xmi:id="_TYCf4EyEEemYvqgj9_hgYA" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_26hd4Er4Eem5FfKYTsIbnA" name="dbgPortForENV" visibility="protected" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_26hd4Ur4Eem5FfKYTsIbnA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_26hd4kr4Eem5FfKYTsIbnA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_syuhkErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syvvsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange__8">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_syvIoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_syyL8ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syzaEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint__9">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_syyzAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy2dYErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy3rgErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint__10">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy3EcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy5gsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy6u0ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints__11">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy6HwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy7V4ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy788UrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode__12">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sy788ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy9LEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy9yIUrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg__13">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy9yIErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2SL4ErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2Sy8UrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange__101">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s2Sy8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2UBEErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2UBEkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint__102">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2UBEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2VPMErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2V2QErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint__103">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2VPMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2XEYErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2YSgErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints__104">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2XEYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2ZgoErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2aHsErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode__105">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s2ZgoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2auwErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2auwkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg__106">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2auwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4r_oErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4smsUrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange__170">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4smsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4tNwErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4t00UrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint__171">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4t00ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ub4ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vC8ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint__172">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4ub4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4vqAErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vqAkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints__173">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4vqAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4wREErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4wREkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode__174">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4wREUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4w4IErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4xfMErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg__175">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4w4IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_289t4Er4Eem5FfKYTsIbnA" name="Trans__Debug__Path__configLoaded1690" source="_syROkErDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3Ruc8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_28_jEEr4Eem5FfKYTsIbnA" name="Trans__Init1691" source="_npsCMAgwEea_md0mpENoqg" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3SKh0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_29ddIEr4Eem5FfKYTsIbnA" name="1692" source="_syROkErDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3Rw5MEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_29i8sEr4Eem5FfKYTsIbnA" name="From__New__State__1689__1693" source="_28zV0Er4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3SDNEEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1689&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__1689&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_29lY8Er4Eem5FfKYTsIbnA" name="PME_Trig1694" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_29n1MEr4Eem5FfKYTsIbnA" name="PME_Trig1695" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_29stsEr4Eem5FfKYTsIbnA" name="PME_Trig1696" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_29t70Er4Eem5FfKYTsIbnA" name="PME_Trig1697" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_29vJ8Er4Eem5FfKYTsIbnA" name="PME_Trig1698" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2913oEr4Eem5FfKYTsIbnA" name="PME_Trig1699" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_293s0Er4Eem5FfKYTsIbnA" name="PME_Trig1700" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_29468Er4Eem5FfKYTsIbnA" name="PME_Trig1701" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_299MYEr4Eem5FfKYTsIbnA" name="PME_Trig1702" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2-Bd0Er4Eem5FfKYTsIbnA" name="PME_Trig1703" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2-Cr8Er4Eem5FfKYTsIbnA" name="PME_Trig1704" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_2-FIMEr4Eem5FfKYTsIbnA" name="PME_Trig1705" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2-KnwEr4Eem5FfKYTsIbnA" name="PME_Trig1706" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2-L14Er4Eem5FfKYTsIbnA" name="PME_Trig1707" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_2-Mc8Er4Eem5FfKYTsIbnA" name="PME_Trig1708" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_2-PgQEr4Eem5FfKYTsIbnA" name="PME_Trig1709" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2-U_0Er4Eem5FfKYTsIbnA" name="PME_Trig1710" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_2-WN8Er4Eem5FfKYTsIbnA" name="PME_Trig1711" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2-YqMEr4Eem5FfKYTsIbnA" name="PME_Trig1712" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
            </transition>
            <transition xmi:id="_2-ew0Er4Eem5FfKYTsIbnA" name="To__New__State__1689__1713" guard="_3TORwUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_28zV0Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TORwUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2156">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TORwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2156">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__New__State__1689__1713&quot;,&quot;New__State__1689&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2-gmAEr4Eem5FfKYTsIbnA" name="Trans__ex1714" source="_s5a_cUrDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3TJZQEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2-h0IEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__QueryConfig__1716" guard="_3TUYYUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_2-gmAUr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TUYYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2158">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TUYYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2158">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2-legEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__QueryConfig__1718" source="_2-jCQEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3SOzQEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2_8JYEr4Eem5FfKYTsIbnA" name="Trans__ex1748" source="_s33gQErDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3S1QMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2__MsUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Init__ReadConfig__1__1750" guard="_3TKnYUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_2_8wcEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TKnYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2151">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TKnYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2151">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3AEsQEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Init__ReadConfig__1__1752" source="_3ABo8Er4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3S7W0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3Co4EUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__RetryConfig__1824" guard="_3TR8IUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3CoRAEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TR8IUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2157">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TR8IEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2157">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3CqGMEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__RetryConfig__1826" source="_3CpfIEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3ShuMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3GePMEr4Eem5FfKYTsIbnA" name="Trans__ex1918" source="_syX8QErDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3R4N8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3Ge2QUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__configLoaded__1920" guard="_3TLOcUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3GePMUr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TLOcUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2152">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TLOcEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2152">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configLoaded__1920&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3Glj8Ur4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__configLoaded__1922" source="_3GigoEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3R6qMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3ILfYUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__server2Failure__1953" guard="_3TMckUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3IK4UEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TMckUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2154">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TMckEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2154">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__1953&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3IMtgUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__server2Failure__1955" source="_3IMGcEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3SrfMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3K41IEr4Eem5FfKYTsIbnA" name="Trans__ex2007" source="_sznSYUrDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3Ri2wEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3K5cMUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__MasterAnnouncment__2009" guard="_3TNDoUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3K41IUr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TNDoUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2155">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TNDoEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2155">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3K6qUUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__MasterAnnouncment__2011" source="_3K6DQEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3TA2YEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3NmK4Er4Eem5FfKYTsIbnA" name="Trans__ex2062" source="_s2K3IUrDEem2BZRQc2M93A" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3RlTAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3N9XQEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Server1Failure__2064" guard="_3TU_cUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3Nmx8Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TU_cUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2159">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TU_cEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2159">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3OBBoEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Server1Failure__2066" source="_3N-lYEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3Ra68Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_3QFeMEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__configOK__2119" guard="_3TL1gUr4Eem5FfKYTsIbnA" source="_28wSgEr4Eem5FfKYTsIbnA" target="_3QCa4Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_3TL1gUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2153">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_3TL1gEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2153">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__2119&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_3QIhgUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__configOK__2121" source="_3QH6cEr4Eem5FfKYTsIbnA" target="_28wSgEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3SYkQEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__1750&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__1920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__2119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__1953&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__2009&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;New__State__1689&quot;,&quot;To__New__State__1689__1713&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__1824&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__1716&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__2064&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_syROkErDEem2BZRQc2M93A" name="Debug__Path__configLoaded" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_syTDwUrDEem2BZRQc2M93A" name="Debug__C__configLoaded">
              <connectionPoint xmi:id="_syX8QErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_3GePMUr4Eem5FfKYTsIbnA" name="From__Parent__1919" kind="entryPoint"/>
              <connectionPoint xmi:id="_3GigoEr4Eem5FfKYTsIbnA" name="To__Parent__1921" kind="exitPoint"/>
              <region xmi:id="_syTq0ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_3GqccEr4Eem5FfKYTsIbnA" name="Trans__ex1925" source="_syX8QErDEem2BZRQc2M93A" target="_3GmLAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3H-EAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__1949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__1947&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3GrqkEr4Eem5FfKYTsIbnA" name="Trans__Init__State__19241926" source="_3GnZIEr4Eem5FfKYTsIbnA" target="_3GmLAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3IEKoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1924&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__1949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1924&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__1947&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1924&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3Gv8AEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__configLoaded__1927" source="_szJYUErDEem2BZRQc2M93A" target="_3GmLAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3IAgQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__1949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__1947&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3GxKIEr4Eem5FfKYTsIbnA" name="PME_Trig1928" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3GzmYEr4Eem5FfKYTsIbnA" name="PME_Trig1929" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3G7iMEr4Eem5FfKYTsIbnA" name="PME_Trig1930" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3G-lgEr4Eem5FfKYTsIbnA" name="PME_Trig1931" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3HEsIEr4Eem5FfKYTsIbnA" name="PME_Trig1932" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3HGhUEr4Eem5FfKYTsIbnA" name="PME_Trig1933" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3HN2EEr4Eem5FfKYTsIbnA" name="PME_Trig1934" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3HPrQEr4Eem5FfKYTsIbnA" name="PME_Trig1935" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3HRgcEr4Eem5FfKYTsIbnA" name="PME_Trig1936" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3HXAAEr4Eem5FfKYTsIbnA" name="PME_Trig1937" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3HZcQEr4Eem5FfKYTsIbnA" name="PME_Trig1938" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3HbRcEr4Eem5FfKYTsIbnA" name="PME_Trig1939" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3HgJ8Er4Eem5FfKYTsIbnA" name="PME_Trig1940" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Hj0UEr4Eem5FfKYTsIbnA" name="PME_Trig1941" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3HmQkEr4Eem5FfKYTsIbnA" name="PME_Trig1942" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3HqiAEr4Eem5FfKYTsIbnA" name="PME_Trig1943" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3HtlUEr4Eem5FfKYTsIbnA" name="PME_Trig1944" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3HvagEr4Eem5FfKYTsIbnA" name="PME_Trig1945" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Hzr8Er4Eem5FfKYTsIbnA" name="PME_Trig1946" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3H3WUEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__configLoaded__1947" guard="_3IIcEUr4Eem5FfKYTsIbnA" source="_3GmLAEr4Eem5FfKYTsIbnA" target="_szJYUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3IIcEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1951">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3IIcEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1951">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configLoaded__1947&quot;,&quot;Debug__B__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3H4kcEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1948" source="_3GePMUr4Eem5FfKYTsIbnA" target="_3GmLAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3ICVcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__1949&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ac__configLoaded&quot;,&quot;To__Debug__B__Ac__configLoaded__1947&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3H5LgEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1949" guard="_3IF_0Ur4Eem5FfKYTsIbnA" source="_3GmLAEr4Eem5FfKYTsIbnA" target="_3GigoEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3IF_0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1950">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3IF_0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1950">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1949&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_szJYUErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szJ_YErDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szU-gUrDEem2BZRQc2M93A" name="Debug__B__Ac__configLoaded__15">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3GmLAEr4Eem5FfKYTsIbnA" name="DecesionPoint__1923" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3GnZIEr4Eem5FfKYTsIbnA" name="Init__State__1924"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_szmrUUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sznSYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_3K41IUr4Eem5FfKYTsIbnA" name="From__Parent__2008" kind="entryPoint"/>
              <connectionPoint xmi:id="_3K6DQEr4Eem5FfKYTsIbnA" name="To__Parent__2010" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment" source="_szmrUUrDEem2BZRQc2M93A" target="_sz-ewErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0VEEErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment__40">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__init__trans__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_3LDNMEr4Eem5FfKYTsIbnA" name="Trans__ex2014" source="_sznSYUrDEem2BZRQc2M93A" target="_3K7RYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3NUeEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2056&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2058&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3LDNMUr4Eem5FfKYTsIbnA" name="Trans__Init__State__20132015" source="_3LBYAEr4Eem5FfKYTsIbnA" target="_3K7RYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3NbLwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2013&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2013&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2056&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2013&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2058&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2013&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3LFpcEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__MasterAnnouncment__2016" source="_sz_s4ErDEem2BZRQc2M93A" target="_3K7RYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3NSB0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2056&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2058&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3LJ64Er4Eem5FfKYTsIbnA" name="PME_Trig2017" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3LM-MEr4Eem5FfKYTsIbnA" name="PME_Trig2018" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3LOzYEr4Eem5FfKYTsIbnA" name="PME_Trig2019" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3LQBgEr4Eem5FfKYTsIbnA" name="PME_Trig2020" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3LWvMEr4Eem5FfKYTsIbnA" name="PME_Trig2021" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3LX9UEr4Eem5FfKYTsIbnA" name="PME_Trig2022" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3LZygEr4Eem5FfKYTsIbnA" name="PME_Trig2023" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Ldc4Er4Eem5FfKYTsIbnA" name="PME_Trig2024" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3LhHQEr4Eem5FfKYTsIbnA" name="PME_Trig2025" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3LiVYEr4Eem5FfKYTsIbnA" name="PME_Trig2026" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Ll_wEr4Eem5FfKYTsIbnA" name="PME_Trig2027" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3LsGYEr4Eem5FfKYTsIbnA" name="PME_Trig2028" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3Lt7kEr4Eem5FfKYTsIbnA" name="PME_Trig2029" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3LyNAEr4Eem5FfKYTsIbnA" name="PME_Trig2030" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3L1QUEr4Eem5FfKYTsIbnA" name="PME_Trig2031" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3L3FgEr4Eem5FfKYTsIbnA" name="PME_Trig2032" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3L6v4Er4Eem5FfKYTsIbnA" name="PME_Trig2033" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3L_BUEr4Eem5FfKYTsIbnA" name="PME_Trig2034" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3MA2gEr4Eem5FfKYTsIbnA" name="PME_Trig2035" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3MCrsEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__Running__2036" source="_sz-ewErDEem2BZRQc2M93A" target="_3K7RYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3NOXcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2056&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2058&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3MFH8Er4Eem5FfKYTsIbnA" name="PME_Trig2037" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3MKngEr4Eem5FfKYTsIbnA" name="PME_Trig2038" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3ML1oEr4Eem5FfKYTsIbnA" name="PME_Trig2039" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3MO48Er4Eem5FfKYTsIbnA" name="PME_Trig2040" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3MU_kEr4Eem5FfKYTsIbnA" name="PME_Trig2041" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3MWNsEr4Eem5FfKYTsIbnA" name="PME_Trig2042" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3MZ4EEr4Eem5FfKYTsIbnA" name="PME_Trig2043" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3MeJgEr4Eem5FfKYTsIbnA" name="PME_Trig2044" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3MfXoEr4Eem5FfKYTsIbnA" name="PME_Trig2045" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Mhz4Er4Eem5FfKYTsIbnA" name="PME_Trig2046" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3MnTcEr4Eem5FfKYTsIbnA" name="PME_Trig2047" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3MpIoEr4Eem5FfKYTsIbnA" name="PME_Trig2048" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3Mq90Er4Eem5FfKYTsIbnA" name="PME_Trig2049" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3MwdYEr4Eem5FfKYTsIbnA" name="PME_Trig2050" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3M0HwEr4Eem5FfKYTsIbnA" name="PME_Trig2051" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3M3LEEr4Eem5FfKYTsIbnA" name="PME_Trig2052" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3M8qoEr4Eem5FfKYTsIbnA" name="PME_Trig2053" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3M-f0Er4Eem5FfKYTsIbnA" name="PME_Trig2054" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3NF0kEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__MasterAnnouncment__2055" guard="_3Ne2IUr4Eem5FfKYTsIbnA" source="_3K7RYEr4Eem5FfKYTsIbnA" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3Ne2IUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2059">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Ne2IEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2059">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3NHCsEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__Running__2056" guard="_3NhSYUr4Eem5FfKYTsIbnA" source="_3K7RYEr4Eem5FfKYTsIbnA" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3NhSYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2060">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3NhSYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2060">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__2056&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3NI34Er4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__2057" source="_3K41IUr4Eem5FfKYTsIbnA" target="_3K7RYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3NdoAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__2055&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__2056&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__2058&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3NI34Ur4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__2058" guard="_3Nlj0Ur4Eem5FfKYTsIbnA" source="_3K7RYEr4Eem5FfKYTsIbnA" target="_3K6DQEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3Nlj0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion2061">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Nlj0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion2061">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2058&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3K7RYEr4Eem5FfKYTsIbnA" name="DecesionPoint__2012" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3LBYAEr4Eem5FfKYTsIbnA" name="Init__State__2013"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_s0gqQUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_3IK4UEr4Eem5FfKYTsIbnA" name="From__Parent__1952" kind="entryPoint"/>
              <connectionPoint xmi:id="_3IMGcEr4Eem5FfKYTsIbnA" name="To__Parent__1954" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_3IV3cEr4Eem5FfKYTsIbnA" name="Trans__Init__State__19571958" source="_3IPw0Er4Eem5FfKYTsIbnA" target="_3INUkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3KvEIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1957&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1957&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1957&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2003&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1957&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3IV3cUr4Eem5FfKYTsIbnA" name="Trans__en1959" source="_s0gqQUrDEem2BZRQc2M93A" target="_3INUkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3KnvYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2003&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3IXsoEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__server2Failure__1960" source="_s02BcErDEem2BZRQc2M93A" target="_3INUkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3KtO8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2003&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3IY6wEr4Eem5FfKYTsIbnA" name="PME_Trig1961" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3IgPgEr4Eem5FfKYTsIbnA" name="PME_Trig1962" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3IiEsEr4Eem5FfKYTsIbnA" name="PME_Trig1963" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3IlIAEr4Eem5FfKYTsIbnA" name="PME_Trig1964" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3IqnkEr4Eem5FfKYTsIbnA" name="PME_Trig1965" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3IscwEr4Eem5FfKYTsIbnA" name="PME_Trig1966" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3Ix8UEr4Eem5FfKYTsIbnA" name="PME_Trig1967" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3I1msEr4Eem5FfKYTsIbnA" name="PME_Trig1968" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3I200Er4Eem5FfKYTsIbnA" name="PME_Trig1969" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3I-JkEr4Eem5FfKYTsIbnA" name="PME_Trig1970" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3I_XsEr4Eem5FfKYTsIbnA" name="PME_Trig1971" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3JBz8Er4Eem5FfKYTsIbnA" name="PME_Trig1972" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3JIhoEr4Eem5FfKYTsIbnA" name="PME_Trig1973" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3JKW0Er4Eem5FfKYTsIbnA" name="PME_Trig1974" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3JNaIEr4Eem5FfKYTsIbnA" name="PME_Trig1975" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3JSSoEr4Eem5FfKYTsIbnA" name="PME_Trig1976" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3JUH0Er4Eem5FfKYTsIbnA" name="PME_Trig1977" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3JVV8Er4Eem5FfKYTsIbnA" name="PME_Trig1978" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3JaOcEr4Eem5FfKYTsIbnA" name="PME_Trig1979" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3JdRwEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Running__1980" source="_s05EwErDEem2BZRQc2M93A" target="_3INUkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3KkFAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2003&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3Jef4Er4Eem5FfKYTsIbnA" name="PME_Trig1981" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3JhjMEr4Eem5FfKYTsIbnA" name="PME_Trig1982" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3JmbsEr4Eem5FfKYTsIbnA" name="PME_Trig1983" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3JoQ4Er4Eem5FfKYTsIbnA" name="PME_Trig1984" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3JqGEEr4Eem5FfKYTsIbnA" name="PME_Trig1985" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3JtwcEr4Eem5FfKYTsIbnA" name="PME_Trig1986" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3JyB4Er4Eem5FfKYTsIbnA" name="PME_Trig1987" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3JzQAEr4Eem5FfKYTsIbnA" name="PME_Trig1988" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3J3hcEr4Eem5FfKYTsIbnA" name="PME_Trig1989" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3J7y4Er4Eem5FfKYTsIbnA" name="PME_Trig1990" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3J9oEEr4Eem5FfKYTsIbnA" name="PME_Trig1991" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3KCgkEr4Eem5FfKYTsIbnA" name="PME_Trig1992" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3KGK8Er4Eem5FfKYTsIbnA" name="PME_Trig1993" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3KIAIEr4Eem5FfKYTsIbnA" name="PME_Trig1994" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3KMRkEr4Eem5FfKYTsIbnA" name="PME_Trig1995" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3KP78Er4Eem5FfKYTsIbnA" name="PME_Trig1996" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3KRxIEr4Eem5FfKYTsIbnA" name="PME_Trig1997" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3KWCkEr4Eem5FfKYTsIbnA" name="PME_Trig1998" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3KaUAEr4Eem5FfKYTsIbnA" name="PME_Trig1999" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3KbiIEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__server2Failure__2000" guard="_3Kw5UUr4Eem5FfKYTsIbnA" source="_3INUkEr4Eem5FfKYTsIbnA" target="_s02BcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3Kw5UUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2004">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Kw5UEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2004">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__server2Failure__2000&quot;,&quot;Debug__B__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3KcJMEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Running__2001" guard="_3KyHcUr4Eem5FfKYTsIbnA" source="_3INUkEr4Eem5FfKYTsIbnA" target="_s05EwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3KyHcUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2005">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3KyHcEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2005">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__2001&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3Kd-YEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__2002" source="_3IK4UEr4Eem5FfKYTsIbnA" target="_3INUkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3KwSQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__2000&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2001&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__2003&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3KelcEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__2003" guard="_3KzVkUr4Eem5FfKYTsIbnA" source="_3INUkEr4Eem5FfKYTsIbnA" target="_3IMGcEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3KzVkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2006">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3KzVkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2006">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2003&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s02BcErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s02BcUrDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1C1wErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure__61">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s05EwErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s05EwUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1JjcErDEem2BZRQc2M93A" name="Debug__A__En__Running__63">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3INUkEr4Eem5FfKYTsIbnA" name="DecesionPoint__1956" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3IPw0Er4Eem5FfKYTsIbnA" name="Init__State__1957"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_s1apMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_3QCa4Er4Eem5FfKYTsIbnA" name="From__Parent__2118" kind="entryPoint"/>
              <connectionPoint xmi:id="_3QH6cEr4Eem5FfKYTsIbnA" name="To__Parent__2120" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_3QK9wEr4Eem5FfKYTsIbnA" name="Trans__en2124" source="_s1apMUrDEem2BZRQc2M93A" target="_3QJIkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3ROtsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2146&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3QK9wUr4Eem5FfKYTsIbnA" name="Trans__Init__State__21232125" source="_3QJvoEr4Eem5FfKYTsIbnA" target="_3QJIkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3RP70Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2123&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2146&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2123&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2123&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3QP2QEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__configOK__2126" source="_s1wAYErDEem2BZRQc2M93A" target="_3QJIkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3RIAAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2146&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3QSSgEr4Eem5FfKYTsIbnA" name="PME_Trig2127" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3QUuwEr4Eem5FfKYTsIbnA" name="PME_Trig2128" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3QVV0Er4Eem5FfKYTsIbnA" name="PME_Trig2129" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3QXyEEr4Eem5FfKYTsIbnA" name="PME_Trig2130" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3QdRoEr4Eem5FfKYTsIbnA" name="PME_Trig2131" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3QefwEr4Eem5FfKYTsIbnA" name="PME_Trig2132" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3QixMEr4Eem5FfKYTsIbnA" name="PME_Trig2133" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3QnCoEr4Eem5FfKYTsIbnA" name="PME_Trig2134" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3QoQwEr4Eem5FfKYTsIbnA" name="PME_Trig2135" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Qpe4Er4Eem5FfKYTsIbnA" name="PME_Trig2136" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3QtwUEr4Eem5FfKYTsIbnA" name="PME_Trig2137" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3QxasEr4Eem5FfKYTsIbnA" name="PME_Trig2138" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3QyBwEr4Eem5FfKYTsIbnA" name="PME_Trig2139" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3QzP4Er4Eem5FfKYTsIbnA" name="PME_Trig2140" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3Q1FEEr4Eem5FfKYTsIbnA" name="PME_Trig2141" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3Q6koEr4Eem5FfKYTsIbnA" name="PME_Trig2142" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Q7ywEr4Eem5FfKYTsIbnA" name="PME_Trig2143" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3Q8Z0Er4Eem5FfKYTsIbnA" name="PME_Trig2144" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Q9n8Er4Eem5FfKYTsIbnA" name="PME_Trig2145" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3RB5YEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__configOK__2146" guard="_3RRJ8Ur4Eem5FfKYTsIbnA" source="_3QJIkEr4Eem5FfKYTsIbnA" target="_s1wAYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3RRJ8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion2149">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3RRJ8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion2149">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__configOK__2146&quot;,&quot;Debug__A__En__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3RFjwEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__2147" source="_3QCa4Er4Eem5FfKYTsIbnA" target="_3QJIkEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3RQi4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__2146&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__2148&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3RGK0Er4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__2148" guard="_3RRxAUr4Eem5FfKYTsIbnA" source="_3QJIkEr4Eem5FfKYTsIbnA" target="_3QH6cEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3RRxAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2150">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3RRxAEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2150">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2148&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1wAYErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1wncErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s18NoUrDEem2BZRQc2M93A" name="Debug__A__En__configOK__87">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3QJIkEr4Eem5FfKYTsIbnA" name="DecesionPoint__2122" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3QJvoEr4Eem5FfKYTsIbnA" name="Init__State__2123"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s2JB8ErDEem2BZRQc2M93A" name="Debug__C__Server1Failure">
              <connectionPoint xmi:id="_s2KQEErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s2K3IUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_3Nmx8Er4Eem5FfKYTsIbnA" name="From__Parent__2063" kind="entryPoint"/>
              <connectionPoint xmi:id="_3N-lYEr4Eem5FfKYTsIbnA" name="To__Parent__2065" kind="exitPoint"/>
              <region xmi:id="_s2JB8UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s2oKIErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure" source="_s2j4sErDEem2BZRQc2M93A" target="_s2K3IUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2_9kErDEem2BZRQc2M93A" name="Debug__end__trans__Server1Failure__118">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__end__trans__Server1Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s2oKIUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_3OEsAEr4Eem5FfKYTsIbnA" name="Trans__ex2069" source="_s2K3IUrDEem2BZRQc2M93A" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3PtqwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3OEsAUr4Eem5FfKYTsIbnA" name="Trans__en2070" source="_s2KQEErDEem2BZRQc2M93A" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3P3bwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3OFTEEr4Eem5FfKYTsIbnA" name="Trans__Init__State__20682071" source="_3ODd4Ur4Eem5FfKYTsIbnA" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3P-wgEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2068&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2068&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2068&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2068&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3OF6IEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__Server1Failure__2072" source="_s2gOUErDEem2BZRQc2M93A" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3PrOgEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3OHvUEr4Eem5FfKYTsIbnA" name="PME_Trig2073" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3OMAwEr4Eem5FfKYTsIbnA" name="PME_Trig2074" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3ONO4Er4Eem5FfKYTsIbnA" name="PME_Trig2075" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3OOdAEr4Eem5FfKYTsIbnA" name="PME_Trig2076" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3OPEEEr4Eem5FfKYTsIbnA" name="PME_Trig2077" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3OQSMEr4Eem5FfKYTsIbnA" name="PME_Trig2078" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3OSucEr4Eem5FfKYTsIbnA" name="PME_Trig2079" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3OWY0Er4Eem5FfKYTsIbnA" name="PME_Trig2080" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3OXm8Er4Eem5FfKYTsIbnA" name="PME_Trig2081" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3OYOAEr4Eem5FfKYTsIbnA" name="PME_Trig2082" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3OZcIEr4Eem5FfKYTsIbnA" name="PME_Trig2083" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3OaDMEr4Eem5FfKYTsIbnA" name="PME_Trig2084" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3ObRUEr4Eem5FfKYTsIbnA" name="PME_Trig2085" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Oh_AEr4Eem5FfKYTsIbnA" name="PME_Trig2086" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3OjNIEr4Eem5FfKYTsIbnA" name="PME_Trig2087" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3OkbQEr4Eem5FfKYTsIbnA" name="PME_Trig2088" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3OlCUEr4Eem5FfKYTsIbnA" name="PME_Trig2089" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3OossEr4Eem5FfKYTsIbnA" name="PME_Trig2090" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Os-IEr4Eem5FfKYTsIbnA" name="PME_Trig2091" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3OuMQEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Running__2092" source="_s2j4sErDEem2BZRQc2M93A" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3P0YcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3OuzUEr4Eem5FfKYTsIbnA" name="PME_Trig2093" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3OwBcEr4Eem5FfKYTsIbnA" name="PME_Trig2094" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3O2IEEr4Eem5FfKYTsIbnA" name="PME_Trig2095" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3O3WMEr4Eem5FfKYTsIbnA" name="PME_Trig2096" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3O4kUEr4Eem5FfKYTsIbnA" name="PME_Trig2097" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3O5LYEr4Eem5FfKYTsIbnA" name="PME_Trig2098" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3O81wEr4Eem5FfKYTsIbnA" name="PME_Trig2099" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3PBuQEr4Eem5FfKYTsIbnA" name="PME_Trig2100" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3PC8YEr4Eem5FfKYTsIbnA" name="PME_Trig2101" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3PExkEr4Eem5FfKYTsIbnA" name="PME_Trig2102" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3PMGUEr4Eem5FfKYTsIbnA" name="PME_Trig2103" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3PNUcEr4Eem5FfKYTsIbnA" name="PME_Trig2104" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3PQ-0Er4Eem5FfKYTsIbnA" name="PME_Trig2105" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3PWeYEr4Eem5FfKYTsIbnA" name="PME_Trig2106" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3PXsgEr4Eem5FfKYTsIbnA" name="PME_Trig2107" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Pav0Er4Eem5FfKYTsIbnA" name="PME_Trig2108" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3PeaMEr4Eem5FfKYTsIbnA" name="PME_Trig2109" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Pg2cEr4Eem5FfKYTsIbnA" name="PME_Trig2110" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3PiEkEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__Server1Failure__2111" guard="_3P-wgkr4Eem5FfKYTsIbnA" source="_3OC20Er4Eem5FfKYTsIbnA" target="_s2gOUErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3P-wgkr4Eem5FfKYTsIbnA" name="PME_checkDecesion2115">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3P-wgUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2115">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,&quot;Debug__B__Ac__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3PiEkUr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Running__2112" guard="_3P_XkUr4Eem5FfKYTsIbnA" source="_3OC20Er4Eem5FfKYTsIbnA" target="_s2j4sErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3P_XkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2116">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3P_XkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2116">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__2112&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3Pm9EEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__2113" source="_3Nmx8Er4Eem5FfKYTsIbnA" target="_3OC20Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3P1mkEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ac__Server1Failure&quot;,&quot;To__Debug__B__Ac__Server1Failure__2111&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__2112&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__2114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3PoyQEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__2114" guard="_3P_-oUr4Eem5FfKYTsIbnA" source="_3OC20Er4Eem5FfKYTsIbnA" target="_3N-lYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3P_-oUr4Eem5FfKYTsIbnA" name="PME_checkDecesion2117">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3P_-oEr4Eem5FfKYTsIbnA" name="PME_checkDecesion2117">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__2114&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s2gOUErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2gOUUrDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Server1Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2tCoErDEem2BZRQc2M93A" name="Debug__B__Ac__Server1Failure__108">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ac__Server1Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2j4sErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2j4sUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2zJQErDEem2BZRQc2M93A" name="Debug__A__En__Running__110">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3OC20Er4Eem5FfKYTsIbnA" name="DecesionPoint__2067" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3ODd4Ur4Eem5FfKYTsIbnA" name="Init__State__2068"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s33gQErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2_8wcEr4Eem5FfKYTsIbnA" name="From__Parent__1749" kind="entryPoint"/>
              <connectionPoint xmi:id="_3ABo8Er4Eem5FfKYTsIbnA" name="To__Parent__1751" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4MQYErDEem2BZRQc2M93A" name="Debug__Ac__Init__ReadConfig__1" source="_s4ImAErDEem2BZRQc2M93A" target="_s4J0IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4MQYkrDEem2BZRQc2M93A" name="ENVInit" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4MQYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4M3cErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s4J0IErDEem2BZRQc2M93A" target="_s4LCQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4NegErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4M3cUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4OFkErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1" source="_s4LCQErDEem2BZRQc2M93A" target="_s33gQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4d9MErDEem2BZRQc2M93A" name="Debug__end__trans__Init__ReadConfig__1__162">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__end__trans__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4OFkUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_3APrYEr4Eem5FfKYTsIbnA" name="Trans__Init__State__17541755" source="_3AI9sEr4Eem5FfKYTsIbnA" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CUvAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1754&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1754&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1754&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1754&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1754&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3APrYUr4Eem5FfKYTsIbnA" name="Trans__ex1756" source="_s33gQErDEem2BZRQc2M93A" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CXyUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3ATVwEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__Init__ReadConfig__1__1757" source="_s4J0IErDEem2BZRQc2M93A" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CfuIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3AVyAEr4Eem5FfKYTsIbnA" name="PME_Trig1758" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3AZcYEr4Eem5FfKYTsIbnA" name="PME_Trig1759" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3AaDcEr4Eem5FfKYTsIbnA" name="PME_Trig1760" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3AbRkEr4Eem5FfKYTsIbnA" name="PME_Trig1761" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3AcfsEr4Eem5FfKYTsIbnA" name="PME_Trig1762" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3AimUEr4Eem5FfKYTsIbnA" name="PME_Trig1763" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3Aj0cEr4Eem5FfKYTsIbnA" name="PME_Trig1764" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3AlCkEr4Eem5FfKYTsIbnA" name="PME_Trig1765" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3AmQsEr4Eem5FfKYTsIbnA" name="PME_Trig1766" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3AoF4Er4Eem5FfKYTsIbnA" name="PME_Trig1767" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3AsXUEr4Eem5FfKYTsIbnA" name="PME_Trig1768" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3AtlcEr4Eem5FfKYTsIbnA" name="PME_Trig1769" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3AuzkEr4Eem5FfKYTsIbnA" name="PME_Trig1770" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3AvaoEr4Eem5FfKYTsIbnA" name="PME_Trig1771" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3Ax24Er4Eem5FfKYTsIbnA" name="PME_Trig1772" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3A2vYEr4Eem5FfKYTsIbnA" name="PME_Trig1773" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3A3WcEr4Eem5FfKYTsIbnA" name="PME_Trig1774" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3A4kkEr4Eem5FfKYTsIbnA" name="PME_Trig1775" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3A5ysEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__Init__ReadConfig__1__1776" source="_s4ImAErDEem2BZRQc2M93A" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CdR4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3A7n4Er4Eem5FfKYTsIbnA" name="PME_Trig1777" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3A-rMEr4Eem5FfKYTsIbnA" name="PME_Trig1778" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BBugEr4Eem5FfKYTsIbnA" name="PME_Trig1779" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BCVkEr4Eem5FfKYTsIbnA" name="PME_Trig1780" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3BDjsEr4Eem5FfKYTsIbnA" name="PME_Trig1781" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3BEx0Er4Eem5FfKYTsIbnA" name="PME_Trig1782" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3BJDQEr4Eem5FfKYTsIbnA" name="PME_Trig1783" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BLfgEr4Eem5FfKYTsIbnA" name="PME_Trig1784" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BMtoEr4Eem5FfKYTsIbnA" name="PME_Trig1785" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3BNUsEr4Eem5FfKYTsIbnA" name="PME_Trig1786" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3BOi0Er4Eem5FfKYTsIbnA" name="PME_Trig1787" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3BQ_EEr4Eem5FfKYTsIbnA" name="PME_Trig1788" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3BV3kEr4Eem5FfKYTsIbnA" name="PME_Trig1789" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BWeoEr4Eem5FfKYTsIbnA" name="PME_Trig1790" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3BXswEr4Eem5FfKYTsIbnA" name="PME_Trig1791" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BZh8Er4Eem5FfKYTsIbnA" name="PME_Trig1792" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3BfokEr4Eem5FfKYTsIbnA" name="PME_Trig1793" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3BgPoEr4Eem5FfKYTsIbnA" name="PME_Trig1794" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3BhdwEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Init__ReadConfig__1__1795" source="_s4LCQErDEem2BZRQc2M93A" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CegAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3BiE0Er4Eem5FfKYTsIbnA" name="PME_Trig1796" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3BjS8Er4Eem5FfKYTsIbnA" name="PME_Trig1797" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Bm9UEr4Eem5FfKYTsIbnA" name="PME_Trig1798" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3BqnsEr4Eem5FfKYTsIbnA" name="PME_Trig1799" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3BrOwEr4Eem5FfKYTsIbnA" name="PME_Trig1800" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Bsc4Er4Eem5FfKYTsIbnA" name="PME_Trig1801" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3BuSEEr4Eem5FfKYTsIbnA" name="PME_Trig1802" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3ByjgEr4Eem5FfKYTsIbnA" name="PME_Trig1803" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3B0YsEr4Eem5FfKYTsIbnA" name="PME_Trig1804" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3B0_wEr4Eem5FfKYTsIbnA" name="PME_Trig1805" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3B2N4Er4Eem5FfKYTsIbnA" name="PME_Trig1806" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3B4DEEr4Eem5FfKYTsIbnA" name="PME_Trig1807" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3B9ioEr4Eem5FfKYTsIbnA" name="PME_Trig1808" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3CAl8Er4Eem5FfKYTsIbnA" name="PME_Trig1809" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3CBNAEr4Eem5FfKYTsIbnA" name="PME_Trig1810" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3CGFgEr4Eem5FfKYTsIbnA" name="PME_Trig1811" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3CIhwEr4Eem5FfKYTsIbnA" name="PME_Trig1812" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3CJv4Er4Eem5FfKYTsIbnA" name="PME_Trig1813" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3CLlEEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__Init__ReadConfig__1__1814" guard="_3CnC4Ur4Eem5FfKYTsIbnA" source="_3AFTUEr4Eem5FfKYTsIbnA" target="_s4J0IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3CnC4Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1821">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3CnC4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1821">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3CLlEUr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__Init__ReadConfig__1__1815" guard="_3Cl0wUr4Eem5FfKYTsIbnA" source="_3AFTUEr4Eem5FfKYTsIbnA" target="_s4ImAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3Cl0wUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1820">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Cl0wEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1820">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3CMMIEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Init__ReadConfig__1__1816" guard="_3Cj_kUr4Eem5FfKYTsIbnA" source="_3AFTUEr4Eem5FfKYTsIbnA" target="_s4LCQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3Cj_kUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1819">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Cj_kEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1819">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3CRrsEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1817" source="_2_8wcEr4Eem5FfKYTsIbnA" target="_3AFTUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3CiKYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__En__Init__ReadConfig__1&quot;,&quot;To__Debug__A__En__Init__ReadConfig__1__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__1815&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__1814&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__1818&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3CSSwEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1818" guard="_3Cnp8Ur4Eem5FfKYTsIbnA" source="_3AFTUEr4Eem5FfKYTsIbnA" target="_3ABo8Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3Cnp8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1822">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Cnp8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1822">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1818&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4ImAErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4ImAUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4P6wUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1__154">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4J0IErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4J0IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4S-EErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1__155">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4LCQErDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4LCQUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4WocUrDEem2BZRQc2M93A" name="Debug__A__En__Init__ReadConfig__1__156">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__En__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3AFTUEr4Eem5FfKYTsIbnA" name="DecesionPoint__1753" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3AI9sEr4Eem5FfKYTsIbnA" name="Init__State__1754"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s4iOoUrDEem2BZRQc2M93A" name="Debug__C__RetryConfig">
              <connectionPoint xmi:id="_3CoRAEr4Eem5FfKYTsIbnA" name="From__Parent__1823" kind="entryPoint"/>
              <connectionPoint xmi:id="_3CpfIEr4Eem5FfKYTsIbnA" name="To__Parent__1825" kind="exitPoint"/>
              <region xmi:id="_s4iOokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4-6kUrDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure" source="_s40igUrDEem2BZRQc2M93A" target="_s41woErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5PZQErDEem2BZRQc2M93A" name="Debug__Ex__ConfigFailure__183">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4-6kkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s4_hoErDEem2BZRQc2M93A" name="Debug__AC__RetryConfig" source="_s41woErDEem2BZRQc2M93A" target="_s46CEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5AIsErDEem2BZRQc2M93A" name="retry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: retrying configuation, The transtion Failure -> readConfig was taken \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__AC__RetryConfig&quot;,(char *)&quot;Debug__B__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4_hoUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s5AvwErDEem2BZRQc2M93A" name="Debug__En__ReadConfig" source="_s46CEErDEem2BZRQc2M93A" target="_s49scErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5BW0ErDEem2BZRQc2M93A" name="ReadConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Reading the configuration \n&quot;;
    configTimer.informIn(UMLRTTimespec(3,0));
    systemConfig.loadConfig();
    std::cout&lt;&lt;&quot;ENV: Reading the configuration was done\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__En__ReadConfig&quot;,(char *)&quot;Debug__A__Ac__RetryConfig&quot;,(char *)&quot;Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5AvwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_3CzQIEr4Eem5FfKYTsIbnA" name="Trans__Init__State__18281829" source="_3Cxa8Er4Eem5FfKYTsIbnA" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GPlsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1828&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1828&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1828&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1828&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1828&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1828&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3C26gEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__RetryConfig__1830" source="_s46CEErDEem2BZRQc2M93A" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GUeMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3C6k4Er4Eem5FfKYTsIbnA" name="PME_Trig1831" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3C8aEEr4Eem5FfKYTsIbnA" name="PME_Trig1832" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3C9BIEr4Eem5FfKYTsIbnA" name="PME_Trig1833" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3C-PQEr4Eem5FfKYTsIbnA" name="PME_Trig1834" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3DE88Er4Eem5FfKYTsIbnA" name="PME_Trig1835" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3DGLEEr4Eem5FfKYTsIbnA" name="PME_Trig1836" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3DHZMEr4Eem5FfKYTsIbnA" name="PME_Trig1837" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3DInUEr4Eem5FfKYTsIbnA" name="PME_Trig1838" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3DMRsEr4Eem5FfKYTsIbnA" name="PME_Trig1839" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3DQjIEr4Eem5FfKYTsIbnA" name="PME_Trig1840" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3DRKMEr4Eem5FfKYTsIbnA" name="PME_Trig1841" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3DSYUEr4Eem5FfKYTsIbnA" name="PME_Trig1842" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3DWCsEr4Eem5FfKYTsIbnA" name="PME_Trig1843" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3DaUIEr4Eem5FfKYTsIbnA" name="PME_Trig1844" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3DbiQEr4Eem5FfKYTsIbnA" name="PME_Trig1845" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3DcJUEr4Eem5FfKYTsIbnA" name="PME_Trig1846" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3DelkEr4Eem5FfKYTsIbnA" name="PME_Trig1847" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Dho4Er4Eem5FfKYTsIbnA" name="PME_Trig1848" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3DksMEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__ReadConfig__1849" source="_s49scErDEem2BZRQc2M93A" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GHC0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ReadConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3DksMUr4Eem5FfKYTsIbnA" name="PME_Trig1850" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Dl6UEr4Eem5FfKYTsIbnA" name="PME_Trig1851" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3DnIcEr4Eem5FfKYTsIbnA" name="PME_Trig1852" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Do9oEr4Eem5FfKYTsIbnA" name="PME_Trig1853" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3DqLwEr4Eem5FfKYTsIbnA" name="PME_Trig1854" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3DvEQEr4Eem5FfKYTsIbnA" name="PME_Trig1855" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3DwSYEr4Eem5FfKYTsIbnA" name="PME_Trig1856" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Dw5cEr4Eem5FfKYTsIbnA" name="PME_Trig1857" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3D1K4Er4Eem5FfKYTsIbnA" name="PME_Trig1858" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3D41QEr4Eem5FfKYTsIbnA" name="PME_Trig1859" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3D5cUEr4Eem5FfKYTsIbnA" name="PME_Trig1860" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3D6qcEr4Eem5FfKYTsIbnA" name="PME_Trig1861" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3D9twEr4Eem5FfKYTsIbnA" name="PME_Trig1862" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EB_MEr4Eem5FfKYTsIbnA" name="PME_Trig1863" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3EDNUEr4Eem5FfKYTsIbnA" name="PME_Trig1864" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_3EEbcEr4Eem5FfKYTsIbnA" name="PME_Trig1865" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EFCgEr4Eem5FfKYTsIbnA" name="PME_Trig1866" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3EGQoEr4Eem5FfKYTsIbnA" name="PME_Trig1867" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3EMXQEr4Eem5FfKYTsIbnA" name="PME_Trig1868" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3ENlYEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__RetryConfig__1869" source="_s41woErDEem2BZRQc2M93A" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GZ9wEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3EOMcEr4Eem5FfKYTsIbnA" name="PME_Trig1870" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3EPakEr4Eem5FfKYTsIbnA" name="PME_Trig1871" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3ETsAEr4Eem5FfKYTsIbnA" name="PME_Trig1872" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EX9cEr4Eem5FfKYTsIbnA" name="PME_Trig1873" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3EZyoEr4Eem5FfKYTsIbnA" name="PME_Trig1874" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3Ec18Er4Eem5FfKYTsIbnA" name="PME_Trig1875" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3EggUEr4Eem5FfKYTsIbnA" name="PME_Trig1876" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EiVgEr4Eem5FfKYTsIbnA" name="PME_Trig1877" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EkKsEr4Eem5FfKYTsIbnA" name="PME_Trig1878" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3EnOAEr4Eem5FfKYTsIbnA" name="PME_Trig1879" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3ErfcEr4Eem5FfKYTsIbnA" name="PME_Trig1880" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3EsGgEr4Eem5FfKYTsIbnA" name="PME_Trig1881" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3Et7sEr4Eem5FfKYTsIbnA" name="PME_Trig1882" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3EvJ0Er4Eem5FfKYTsIbnA" name="PME_Trig1883" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3E2ekEr4Eem5FfKYTsIbnA" name="PME_Trig1884" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3E3ssEr4Eem5FfKYTsIbnA" name="PME_Trig1885" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3E460Er4Eem5FfKYTsIbnA" name="PME_Trig1886" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3E_BcEr4Eem5FfKYTsIbnA" name="PME_Trig1887" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3FA2oEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__ConfigFailure__1888" source="_s40igUrDEem2BZRQc2M93A" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GJfEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_3FCEwEr4Eem5FfKYTsIbnA" name="PME_Trig1889" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3FEhAEr4Eem5FfKYTsIbnA" name="PME_Trig1890" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3FKnoEr4Eem5FfKYTsIbnA" name="PME_Trig1891" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3FL1wEr4Eem5FfKYTsIbnA" name="PME_Trig1892" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3FND4Er4Eem5FfKYTsIbnA" name="PME_Trig1893" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3FSjcEr4Eem5FfKYTsIbnA" name="PME_Trig1894" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3FUYoEr4Eem5FfKYTsIbnA" name="PME_Trig1895" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3FVmwEr4Eem5FfKYTsIbnA" name="PME_Trig1896" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3FWN0Er4Eem5FfKYTsIbnA" name="PME_Trig1897" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3FZRIEr4Eem5FfKYTsIbnA" name="PME_Trig1898" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3FewsEr4Eem5FfKYTsIbnA" name="PME_Trig1899" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_3Ff-0Er4Eem5FfKYTsIbnA" name="PME_Trig1900" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_3FjpMEr4Eem5FfKYTsIbnA" name="PME_Trig1901" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3FpIwEr4Eem5FfKYTsIbnA" name="PME_Trig1902" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_3Fq98Er4Eem5FfKYTsIbnA" name="PME_Trig1903" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_3Fv2cEr4Eem5FfKYTsIbnA" name="PME_Trig1904" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_3Fzg0Er4Eem5FfKYTsIbnA" name="PME_Trig1905" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_3F1WAEr4Eem5FfKYTsIbnA" name="PME_Trig1906" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_3F9R0Er4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__RetryConfig__1907" guard="_3GcaA0r4Eem5FfKYTsIbnA" source="_3CrUUEr4Eem5FfKYTsIbnA" target="_s46CEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3GcaA0r4Eem5FfKYTsIbnA" name="PME_checkDecesion1916">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3GcaAkr4Eem5FfKYTsIbnA" name="PME_checkDecesion1916">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,&quot;Debug__A__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3F9R0Ur4Eem5FfKYTsIbnA" name="To__Debug__A__En__ReadConfig__1908" guard="_3GbL4Ur4Eem5FfKYTsIbnA" source="_3CrUUEr4Eem5FfKYTsIbnA" target="_s49scErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3GbL4Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1913">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3GbL4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1913">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ReadConfig__1908&quot;,&quot;Debug__A__En__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3F9R0kr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__RetryConfig__1909" guard="_3GdBEUr4Eem5FfKYTsIbnA" source="_3CrUUEr4Eem5FfKYTsIbnA" target="_s41woErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3GdBEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1917">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3GdBEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1917">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,&quot;Debug__B__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3F944Er4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__ConfigFailure__1910" guard="_3GbL40r4Eem5FfKYTsIbnA" source="_3CrUUEr4Eem5FfKYTsIbnA" target="_s40igUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_3GbL40r4Eem5FfKYTsIbnA" name="PME_checkDecesion1914">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3GbL4kr4Eem5FfKYTsIbnA" name="PME_checkDecesion1914">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_3F_HAEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1911" source="_3CoRAEr4Eem5FfKYTsIbnA" target="_3CrUUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3GSB8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__En__ReadConfig&quot;,&quot;To__Debug__A__En__ReadConfig__1908&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__1910&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__1912&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__1907&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ac__RetryConfig&quot;,&quot;To__Debug__B__Ac__RetryConfig__1909&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_3F_uEEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1912" guard="_3GcaAUr4Eem5FfKYTsIbnA" source="_3CrUUEr4Eem5FfKYTsIbnA" target="_3CpfIEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_3GcaAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1915">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_3GcaAEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1915">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1912&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s40igUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s40igkrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5DzEUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure__176">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s41woErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s41woUrDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5G2YErDEem2BZRQc2M93A" name="Debug__B__Ac__RetryConfig__177">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s46CEErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s46CEUrDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5J5sErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig__178">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s49scErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s49scUrDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5Lu4ErDEem2BZRQc2M93A" name="Debug__A__En__ReadConfig__179">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__En__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3CrUUEr4Eem5FfKYTsIbnA" name="DecesionPoint__1827" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_3Cxa8Er4Eem5FfKYTsIbnA" name="Init__State__1828"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5aYYErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s5a_cUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2-gmAUr4Eem5FfKYTsIbnA" name="From__Parent__1715" kind="entryPoint"/>
              <connectionPoint xmi:id="_2-jCQEr4Eem5FfKYTsIbnA" name="To__Parent__1717" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s5w9sUrDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig" source="_s5t6YErDEem2BZRQc2M93A" target="_s5a_cUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6EfsErDEem2BZRQc2M93A" name="Debug__end__trans__QueryConfig__212">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__end__trans__QueryConfig&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5w9skrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2-rlIEr4Eem5FfKYTsIbnA" name="Trans__en1721" source="_s5aYYErDEem2BZRQc2M93A" target="_2-oh0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2_wjMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1743&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1745&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2-szQEr4Eem5FfKYTsIbnA" name="Trans__ex1722" source="_s5a_cUrDEem2BZRQc2M93A" target="_2-oh0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2_yYYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1743&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1745&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2-uBYEr4Eem5FfKYTsIbnA" name="Trans__Init__State__17201723" source="_2-pv8Er4Eem5FfKYTsIbnA" target="_2-oh0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2_1bsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1720&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1743&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1720&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1745&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1720&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2-1WIEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Running__1724" source="_s5t6YErDEem2BZRQc2M93A" target="_2-oh0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2_oAUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1743&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1745&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2-3yYEr4Eem5FfKYTsIbnA" name="PME_Trig1725" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2-9R8Er4Eem5FfKYTsIbnA" name="PME_Trig1726" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2-_HIEr4Eem5FfKYTsIbnA" name="PME_Trig1727" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2_A8UEr4Eem5FfKYTsIbnA" name="PME_Trig1728" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2_HC8Er4Eem5FfKYTsIbnA" name="PME_Trig1729" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2_IREEr4Eem5FfKYTsIbnA" name="PME_Trig1730" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2_JfMEr4Eem5FfKYTsIbnA" name="PME_Trig1731" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2_LUYEr4Eem5FfKYTsIbnA" name="PME_Trig1732" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2_NJkEr4Eem5FfKYTsIbnA" name="PME_Trig1733" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2_SCEEr4Eem5FfKYTsIbnA" name="PME_Trig1734" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2_TQMEr4Eem5FfKYTsIbnA" name="PME_Trig1735" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2_UeUEr4Eem5FfKYTsIbnA" name="PME_Trig1736" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2_XhoEr4Eem5FfKYTsIbnA" name="PME_Trig1737" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2_bzEEr4Eem5FfKYTsIbnA" name="PME_Trig1738" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2_caIEr4Eem5FfKYTsIbnA" name="PME_Trig1739" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2_doQEr4Eem5FfKYTsIbnA" name="PME_Trig1740" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_2_e2YEr4Eem5FfKYTsIbnA" name="PME_Trig1741" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2_ju4Er4Eem5FfKYTsIbnA" name="PME_Trig1742" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_26hd4Er4Eem5FfKYTsIbnA"/>
                </transition>
                <transition xmi:id="_2_mLIEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Running__1743" guard="_2_3Q4Er4Eem5FfKYTsIbnA" source="_2-oh0Er4Eem5FfKYTsIbnA" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2_3Q4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1746">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2_2p0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1746">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__1743&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2_myMEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1744" source="_2-gmAUr4Eem5FfKYTsIbnA" target="_2-oh0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2_p1gEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__1743&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__1745&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2_myMUr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1745" guard="_2_67QUr4Eem5FfKYTsIbnA" source="_2-oh0Er4Eem5FfKYTsIbnA" target="_2-jCQEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2_67QUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1747">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2_67QEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1747">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1745&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2-oh0Er4Eem5FfKYTsIbnA" name="DecesionPoint__1719" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2-pv8Er4Eem5FfKYTsIbnA" name="Init__State__1720"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_28wSgEr4Eem5FfKYTsIbnA" name="DecesionPoint__1688" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_28zV0Er4Eem5FfKYTsIbnA" name="New__State__1689"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_27d5EUr4Eem5FfKYTsIbnA" name="loadHeap" specification="_27d5EEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_27fuQUr4Eem5FfKYTsIbnA" name="unLoadHeap" specification="_27fuQEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_277MEEr4Eem5FfKYTsIbnA" name="sendMessage" specification="_276lAEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_279oUUr4Eem5FfKYTsIbnA" name="sendInternalMessage" specification="_279oUEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_28ksUUr4Eem5FfKYTsIbnA" name="initForPMD" specification="_28ksUEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_27d5EEr4Eem5FfKYTsIbnA" name="loadHeap" visibility="private" method="_27d5EUr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_27fuQEr4Eem5FfKYTsIbnA" name="unLoadHeap" visibility="private" method="_27fuQUr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_276lAEr4Eem5FfKYTsIbnA" name="sendMessage" visibility="private" method="_277MEEr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_277zIEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_279BQEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_279oUEr4Eem5FfKYTsIbnA" name="sendInternalMessage" visibility="private" method="_279oUUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_27-PYEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_28AroEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_28ksUEr4Eem5FfKYTsIbnA" name="initForPMD" visibility="private" method="_28ksUUr4Eem5FfKYTsIbnA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_0nPzsEr4Eem5FfKYTsIbnA" name="dbgPortForServer" visibility="protected" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0nPzsUr4Eem5FfKYTsIbnA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_0nQawEr4Eem5FfKYTsIbnA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_l1V8wAlOEea_md0mpENoqg" name="ServerFaliure" source="_s7c_wErDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xgwrEApLEeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    if (AnnouncementTimerId.isValid())
    MasterAnnounceTimer.cancelTimer(AnnouncementTimerId);
    if (TimerId.isValid())
    Timer.cancelTimer(TimerId);
    int r=random()%30+5;
    Timer.informEvery(UMLRTTimespec(r,0),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Failure,  will recover after &quot; &lt;&lt; r &lt;&lt; &quot; seconds\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ServerFaliure&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_i_dO4Ap5EeaGqPUk-4V4qQ" name="ActiveMode" source="_s_-6cErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAX8AErDEem2BZRQc2M93A" name="ActiveMode__400">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ActiveMode&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7h4QErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S" guard="_s7ifUUrDEem2BZRQc2M93A" source="_s7c_wErDEem2BZRQc2M93A" target="_s7eN4UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s7ifUUrDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s7ifUErDEem2BZRQc2M93A" name="Debug__GuardServerFaliure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7jGYErDEem2BZRQc2M93A" name="Debug__ServerFaliure__S__243">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__S&quot;,(char *)&quot;Debug__Path__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7k7kErDEem2BZRQc2M93A" name="Debug__ServerFaliure__E" source="_s7e08UrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7k7kUrDEem2BZRQc2M93A" name="Debug__ServerFaliure__E__244">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServerFaliure__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9SLwErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E" source="_s9MsMUrDEem2BZRQc2M93A" target="_hgSoEAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9SLwUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__E__293">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__purgeotherMessage__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Failure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-EO4ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-E18ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange__322">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s-EO4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-FdAErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-FdAkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint__323">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-FdAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-GrIErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-GrIkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint__324">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-GrIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-HSMErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-H5QErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints__325">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-HSMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-IgUErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-IgUkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode__326">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s-IgUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-JHYErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-KVgErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg__327">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-JHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JuckrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBOQkErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBO3oUrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange__428">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tBO3oErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBPesErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBPeskrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint__429">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBPesUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQFwErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBQFwkrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint__430">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQFwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQs0ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBRT4ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints__431">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQs0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBRT4UrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBR68ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode__432">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tBRT4krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBSiAErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBTwIErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg__433">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBSiAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCol0ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpM4UrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange__475">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tCpM4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCpz8ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpz8krDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint__476">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCpz8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCqbAErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCqbAkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint__477">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCqbAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrCEErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCrpIErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints__478">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCrCEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrpIUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCsQMUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode__479">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tCsQMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCs3QErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCteUkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg__480">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCs3QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCs3QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDCOcErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E" source="_tC8u4UrDEem2BZRQc2M93A" target="_jLPjcAlNEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDCOcUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__E__487">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBy&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDEDoErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDEqsErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange__489">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tDEDoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDFRwErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDF40ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint__490">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDFRwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDGf4ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHG8ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint__491">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDGf4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDHuAErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHuAkrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints__492">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDHuAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDIVEErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDI8IUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode__493">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tDI8IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDJjMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDKxUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg__494">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDJjMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDJjMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEIaoErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEJBsUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange__526">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEJBsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEJowErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEKP0ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint__527">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEJowUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEKP0UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEK24ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint__528">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEKP0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEK24UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tELd8ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints__529">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEK24krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tELd8UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEMFAUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode__530">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tEMFAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEMsEErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEN6MErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg__531">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEMsEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tEMsEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFOm0ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFPN4ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange__564">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tFOm0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFP08ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFP08krDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint__565">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFP08UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFQcAErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRDEErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint__566">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFQcAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRDEUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRqIUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints__567">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFRqIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRqIkrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFSRMErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode__568">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tFRqI0rDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFSRMUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFS4Q0rDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg__569">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFSRMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHbmQErDEem2BZRQc2M93A" name="Debug__KeepAlive__S" guard="_tHcNUUrDEem2BZRQc2M93A" source="_tHWGsErDEem2BZRQc2M93A" target="_tHX74UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tHcNUUrDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tHcNUErDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHc0YErDEem2BZRQc2M93A" name="Debug__KeepAlive__S__634">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__S&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHfQoErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHf3sUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange__637">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tHf3sErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhF0ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHhF0krDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint__638">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHhF0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhs4ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHiT8UrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint__639">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHiT8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHi7AErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHjiEErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints__640">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHi7AUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHjiEUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHkJIErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode__641">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tHjiEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHkwMErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHl-UUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg__642">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHkwMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHkwMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHlXQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHl-UErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_0yFxwEr4Eem5FfKYTsIbnA" name="Trans__Init__State__23" source="_0xcRgEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JaKAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_0yKqQEr4Eem5FfKYTsIbnA" name="Trans__BeMaster4" source="_kLngAAp5EeaGqPUk-4V4qQ" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Ft80Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;BeMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;BeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_0yNtkEr4Eem5FfKYTsIbnA" name="Trans__Debug__Path__ServiceRequest5" source="_tF4HEErDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2J4rIEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_00JnQEr4Eem5FfKYTsIbnA" name="6" source="_s7c_wErDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2KOpYEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_00K1YEr4Eem5FfKYTsIbnA" name="7" source="_s_-6cErDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Iye8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_00QU8Er4Eem5FfKYTsIbnA" name="8" source="_tF4HEErDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2K1tYEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_00SKIEr4Eem5FfKYTsIbnA" name="9" source="_tHWGsErDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2HZX0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_00bUEEr4Eem5FfKYTsIbnA" name="From__Failure__10" source="_hgSoEAlOEea_md0mpENoqg" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2IQ6gEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_00jP4Er4Eem5FfKYTsIbnA" name="PME_Trig11" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_00nhUEr4Eem5FfKYTsIbnA" name="PME_Trig12" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_00uPAEr4Eem5FfKYTsIbnA" name="PME_Trig13" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_00ygcEr4Eem5FfKYTsIbnA" name="PME_Trig14" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_007DUEr4Eem5FfKYTsIbnA" name="PME_Trig15" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_009fkEr4Eem5FfKYTsIbnA" name="PME_Trig16" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_01C_IEr4Eem5FfKYTsIbnA" name="PME_Trig17" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_01HQkEr4Eem5FfKYTsIbnA" name="PME_Trig18" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_01PzcEr4Eem5FfKYTsIbnA" name="PME_Trig19" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_01V6EEr4Eem5FfKYTsIbnA" name="PME_Trig20" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_01bZoEr4Eem5FfKYTsIbnA" name="PME_Trig21" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_01j8gEr4Eem5FfKYTsIbnA" name="PME_Trig22" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_01o1AEr4Eem5FfKYTsIbnA" name="PME_Trig23" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_01u7oEr4Eem5FfKYTsIbnA" name="PME_Trig24" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_01xX4Er4Eem5FfKYTsIbnA" name="PME_Trig25" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_015TsEr4Eem5FfKYTsIbnA" name="PME_Trig26" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_019lIEr4Eem5FfKYTsIbnA" name="PME_Trig27" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_02DrwEr4Eem5FfKYTsIbnA" name="PME_Trig28" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_02H9MEr4Eem5FfKYTsIbnA" name="PME_Trig29" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_02SVQEr4Eem5FfKYTsIbnA" name="PME_Trig30" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_02X00Er4Eem5FfKYTsIbnA" name="PME_Trig31" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_02dUYEr4Eem5FfKYTsIbnA" name="From__StandBy__32" source="_jLPjcAlNEea_md0mpENoqg" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2GweoEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBy&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_02jbAEr4Eem5FfKYTsIbnA" name="PME_Trig33" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_02rW0Er4Eem5FfKYTsIbnA" name="PME_Trig34" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_02wPUEr4Eem5FfKYTsIbnA" name="PME_Trig35" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_021u4Er4Eem5FfKYTsIbnA" name="PME_Trig36" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_023kEEr4Eem5FfKYTsIbnA" name="PME_Trig37" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_02_f4Er4Eem5FfKYTsIbnA" name="PME_Trig38" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_03B8IEr4Eem5FfKYTsIbnA" name="PME_Trig39" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_03JQ4Er4Eem5FfKYTsIbnA" name="PME_Trig40" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_03MUMEr4Eem5FfKYTsIbnA" name="PME_Trig41" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_03To8Er4Eem5FfKYTsIbnA" name="PME_Trig42" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_03aWoEr4Eem5FfKYTsIbnA" name="PME_Trig43" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_03fPIEr4Eem5FfKYTsIbnA" name="PME_Trig44" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_03hrYEr4Eem5FfKYTsIbnA" name="PME_Trig45" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_03pnMEr4Eem5FfKYTsIbnA" name="PME_Trig46" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_03z_QEr4Eem5FfKYTsIbnA" name="PME_Trig47" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_0377EEr4Eem5FfKYTsIbnA" name="PME_Trig48" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_03-XUEr4Eem5FfKYTsIbnA" name="PME_Trig49" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_04GTIEr4Eem5FfKYTsIbnA" name="PME_Trig50" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_04IIUEr4Eem5FfKYTsIbnA" name="PME_Trig51" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_04QEIEr4Eem5FfKYTsIbnA" name="PME_Trig52" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_04TugEr4Eem5FfKYTsIbnA" name="PME_Trig53" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_04k0QEr4Eem5FfKYTsIbnA" name="To__Failure__54" guard="_2LTncUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_hgSoEAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_2LTncUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1056">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LTncEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1056">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Failure__54&quot;,&quot;Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_04mCYEr4Eem5FfKYTsIbnA" name="To__StandBy__55" guard="_2LJPYUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_jLPjcAlNEea_md0mpENoqg">
              <ownedRule xmi:id="_2LJPYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1051">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LJPYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1051">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBy__55&quot;,&quot;StandBy&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_042hEEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Recover__57" guard="_2K-3UUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_04xBgEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2K-3UUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1043">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K-3UEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1043">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__57&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_046ygEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Recover__59" source="_045kYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2GMd8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_07ygUEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__PassiveMode__91" guard="_2LLroUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_07xSMEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LLroUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1053">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LLroEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1053">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__PassiveMode__91&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_073_4Er4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__PassiveMode__93" source="_07zHYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2KDDMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_0-z_IUr4Eem5FfKYTsIbnA" name="To__Substates__Backup__125" guard="_2K_eYUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_0-yxAEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2K_eYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1044">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K_eYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1044">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__125&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_0-768Er4Eem5FfKYTsIbnA" name="From__Substates__Backup__127" source="_0-3pgEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2GXdEEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1ldIYEr4Eem5FfKYTsIbnA" name="Trans__ex469" source="_tF7xcUrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2G5okEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1lgywUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ServiceRequest__471" guard="_2LM5wUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1leWgEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LM5wUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1054">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LM5wEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1054">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1lin8Ur4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ServiceRequest__473" source="_1lhZ0Er4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2HPm0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1nrV8Er4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__KeepAlive__506" guard="_2LGzIUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1nl2YEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LGzIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1047">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LGzIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1047">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAlive__506&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1nuZQEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__KeepAlive__508" source="_1nr9AEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Hp2gEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1qicsUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__563" guard="_2LSZUUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1qh1oEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LSZUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1055">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LSZUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1055">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1qk48Er4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__565" source="_1qjDwEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2GlfgEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1td04Er4Eem5FfKYTsIbnA" name="Trans__ex619" source="_tC8u4UrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2FcQAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1tfqEUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Init__StandBy__3__621" guard="_2LGzI0r4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1teb8Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LGzI0r4Eem5FfKYTsIbnA" name="PME_checkDecesion1048">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LGzIkr4Eem5FfKYTsIbnA" name="PME_checkDecesion1048">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1tlJoEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Init__StandBy__3__623" source="_1titYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2HJgMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1wVisEr4Eem5FfKYTsIbnA" name="Trans__ex677" source="_s99hMUrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JAhYEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1wbpUEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__initTimer__679" guard="_2LHaMUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1wWJwEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LHaMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1049">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LHaMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1049">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__initTimer__679&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1wesoEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__initTimer__681" source="_1wcQYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JtsAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1zaE0Er4Eem5FfKYTsIbnA" name="Trans__ex736" source="_s7e08UrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Kmc0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1zdvMEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ServerFaliure__738" guard="_2LJ2cUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1zb6AEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LJ2cUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1052">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LJ2cEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1052">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1zgygUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ServerFaliure__740" source="_1zfkYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JlwMEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_12w60Er4Eem5FfKYTsIbnA" name="Trans__ex796" source="_tBIJ8UrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2F5jAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_12z-IEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__BeingMaster__798" guard="_2LE98Er4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_12xh4Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LE98Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1045">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LEW4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1045">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeingMaster__798&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_122aYUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__BeingMaster__800" source="_121MQEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JH2IEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_14upsEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__StandBy__CheckConfig__6__832" guard="_2LGMEUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_14tbkEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LGMEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1046">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LGMEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1046">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_14we4kr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__StandBy__CheckConfig__6__834" source="_14we4Er4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2JPK4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_18Gt0Er4Eem5FfKYTsIbnA" name="Trans__ex889" source="_tFIgMUrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2KfvIEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_18K_QEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__BeSlave__891" guard="_2LIoUUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_18Gt0Ur4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LIoUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1050">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LIoUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1050">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeSlave__891&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_18NbgEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__BeSlave__893" source="_18MNYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Hv9IEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1-BZYEr4Eem5FfKYTsIbnA" name="Trans__ex925" source="_s9MsMUrDEem2BZRQc2M93A" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2IpVAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_1-G48Er4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__purgeotherMessage__927" guard="_2LWDsUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_1-CAcEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2LWDsUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1057">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2LWDsEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1057">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_1-J8QUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__purgeotherMessage__929" source="_1-IuIEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2IfkAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2BVzIUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__MasterAnnounce__985" guard="_2K9pMUr4Eem5FfKYTsIbnA" source="_0xR5cEr4Eem5FfKYTsIbnA" target="_2BUlAEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2K9pMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1042">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2K9pMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1042">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2BbSsUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__MasterAnnounce__987" source="_2BYPYEr4Eem5FfKYTsIbnA" target="_0xR5cEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2IBC4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__985&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__125&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__798&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__832&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__506&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__621&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__891&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;StandBy&quot;,&quot;To__StandBy__55&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__738&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__91&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__471&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__563&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Failure&quot;,&quot;To__Failure__54&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__927&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_jLPjcAlNEea_md0mpENoqg" name="StandBy">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0ErDEem2BZRQc2M93A" name="StandBy__679">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJgC0UrDEem2BZRQc2M93A" name="StandBy__680">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_hgSoEAlOEea_md0mpENoqg" name="Failure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_GNo-cAp7EeaGqPUk-4V4qQ" name="SetTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Failure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //------

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJrB8ErDEem2BZRQc2M93A" name="Failure__685">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_kLngAAp5EeaGqPUk-4V4qQ" name="BeMaster" kind="junction"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_0-yxAEr4Eem5FfKYTsIbnA" name="From__Parent__124" kind="entryPoint"/>
              <connectionPoint xmi:id="_0-3pgEr4Eem5FfKYTsIbnA" name="To__Parent__126" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_s68pcErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s69QgUrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__varChange__223">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s69QgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s693kErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s693kkrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__setBreakPoint__224">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s693kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6-eoErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6_FsErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__remBreakPoint__225">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6-eoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s6_swErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7AT0ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__viewBreakPoints__226">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s6_swUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7A64ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7Bh8ErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgSetExecMode__227">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s7A64UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7Bh8UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg" source="_s60GkUrDEem2BZRQc2M93A" target="_s60GkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7DXIErDEem2BZRQc2M93A" name="Debug__ReplyConfig__dbg__dbgDeferMsg__228">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s7CJAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CJAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s7CwEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8dsYErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8eTcErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange__270">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s8dsYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8eTcUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8e6gUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint__271">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8e6gErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8fhkErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gIoErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint__272">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8fhkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8gvsErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gvskrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints__273">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8gvsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8hWwErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8h90ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode__274">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s8hWwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8ik4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8jzAErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg__275">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8ik4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik40rDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8jL8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-r58UrDEem2BZRQc2M93A" name="Debug__NokeepAlive" source="_ZaK1gAlOEea_md0mpENoqg" target="_s-oPkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-shAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__339">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_LmWNIeNDEeaTpaLNj-zYpw" name="KeepAliveTimer" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tByRQErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBy4UErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E__448">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIO3gErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E" source="_tIKmEUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIO3gUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__E__659">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_0_c4UEr4Eem5FfKYTsIbnA" name="Trans__Debug__Path__backtoslave1130" source="_tDikwErDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1j_IwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_0_dfYEr4Eem5FfKYTsIbnA" name="Trans__Debug__Path__NokeepAlive131" source="_s-oPkErDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1lJmYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_0_gisEr4Eem5FfKYTsIbnA" name="Trans__Init__State__129132" source="_0_HhIEr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1j1XwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__129&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__129&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_0_iX4Er4Eem5FfKYTsIbnA" name="Trans__Pseudo2133" source="_887yAKozEeiNHY6qjNhZ4w" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1k_OUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1ANtUEr4Eem5FfKYTsIbnA" name="134" source="_tDikwErDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1kNLMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1AOUYEr4Eem5FfKYTsIbnA" name="135" source="_s-oPkErDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1kffEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1ATM4Er4Eem5FfKYTsIbnA" name="From__RunAsSlave__136" source="_ZaK1gAlOEea_md0mpENoqg" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1jrmwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1AYscEr4Eem5FfKYTsIbnA" name="PME_Trig137" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1AezEEr4Eem5FfKYTsIbnA" name="PME_Trig138" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1AjrkEr4Eem5FfKYTsIbnA" name="PME_Trig139" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1As1gEr4Eem5FfKYTsIbnA" name="PME_Trig140" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1A0KQEr4Eem5FfKYTsIbnA" name="PME_Trig141" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1A30oEr4Eem5FfKYTsIbnA" name="PME_Trig142" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1A_wcEr4Eem5FfKYTsIbnA" name="PME_Trig143" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1BCMsEr4Eem5FfKYTsIbnA" name="PME_Trig144" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1BKvkEr4Eem5FfKYTsIbnA" name="PME_Trig145" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1BQPIEr4Eem5FfKYTsIbnA" name="PME_Trig146" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1BaAIEr4Eem5FfKYTsIbnA" name="PME_Trig147" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1BffsEr4Eem5FfKYTsIbnA" name="PME_Trig148" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1Bk_QEr4Eem5FfKYTsIbnA" name="PME_Trig149" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1Bqe0Er4Eem5FfKYTsIbnA" name="PME_Trig150" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1BzBsEr4Eem5FfKYTsIbnA" name="PME_Trig151" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1B2FAEr4Eem5FfKYTsIbnA" name="PME_Trig152" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1B-n4Er4Eem5FfKYTsIbnA" name="PME_Trig153" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1CGjsEr4Eem5FfKYTsIbnA" name="PME_Trig154" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1CQ7wEr4Eem5FfKYTsIbnA" name="PME_Trig155" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1CTYAEr4Eem5FfKYTsIbnA" name="PME_Trig156" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1Cch8Er4Eem5FfKYTsIbnA" name="To__RunAsSlave__157" guard="_1lXo0Ur4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_ZaK1gAlOEea_md0mpENoqg">
                  <ownedRule xmi:id="_1lXo0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion467">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lXo0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion467">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__RunAsSlave__157&quot;,&quot;RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1CmS8Er4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__backtoslave1__159" guard="_1lMpsUr4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1CjPoEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lMpsUr4Eem5FfKYTsIbnA" name="PME_checkDecesion462">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lMpsEr4Eem5FfKYTsIbnA" name="PME_checkDecesion462">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__159&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1CoIIEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__backtoslave1__161" source="_1Cm6AEr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1jeLYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1GPc0Er4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ReplyConfig__193" guard="_1lT-cUr4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1GIvIEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lT-cUr4Eem5FfKYTsIbnA" name="PME_checkDecesion465">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lT-cEr4Eem5FfKYTsIbnA" name="PME_checkDecesion465">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1GRSAEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ReplyConfig__195" source="_1GQD4Er4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1jI0MEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1JlrwEr4Eem5FfKYTsIbnA" name="Trans__ex226" source="_tIKmEUrDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1kYKUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1Jm54Ur4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__228" guard="_1lY28Ur4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1JmS0Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lY28Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion468">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lY28Er4Eem5FfKYTsIbnA" name="PME_checkDecesion468">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1JovEEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__230" source="_1Jng8Er4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1jVogEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1NFEoEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__NokeepAlive__263" guard="_1lN30Ur4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1NAMIEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lN30Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion463">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lN30Er4Eem5FfKYTsIbnA" name="PME_checkDecesion463">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1NGSwEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__NokeepAlive__265" source="_1NFEoUr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1k8yEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1Sr9YEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__BackToSlave__321" guard="_1lXBwUr4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1SqvQEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lXBwUr4Eem5FfKYTsIbnA" name="PME_checkDecesion466">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lXBwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion466">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BackToSlave__321&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1Sw14Er4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__BackToSlave__323" source="_1Sr9YUr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1kvWsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1gvngEr4Eem5FfKYTsIbnA" name="Trans__ex401" source="_tBtYwUrDEem2BZRQc2M93A" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1jO60Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1gw1oUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__KeepAliveMsg__403" guard="_1lMCoUr4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_1gwOkEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lMCoUr4Eem5FfKYTsIbnA" name="PME_checkDecesion461">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lMCoEr4Eem5FfKYTsIbnA" name="PME_checkDecesion461">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1g28QEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__KeepAliveMsg__405" source="_1gyDwEr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1j63UEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1jARUEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__459" source="_0-yxAEr4Eem5FfKYTsIbnA" target="_0-9JEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1kk-oEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__403&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__159&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__263&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__460&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Substates__Debug__C__ReplyConfig__193&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__321&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__157&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__228&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1jARUUr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__460" guard="_1lPF8Ur4Eem5FfKYTsIbnA" source="_0-9JEEr4Eem5FfKYTsIbnA" target="_0-3pgEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1lPF8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion464">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1lPF8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion464">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__460&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_ZaK1gAlOEea_md0mpENoqg" name="RunAsSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_JeHBoAlzEea_md0mpENoqg" name="RunAsSlaveEntry">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJmJcErDEem2BZRQc2M93A" name="RunAsSlave__683">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s60GkUrDEem2BZRQc2M93A" name="Debug__C__ReplyConfig">
                  <connectionPoint xmi:id="_1GIvIEr4Eem5FfKYTsIbnA" name="From__Parent__192" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1GQD4Er4Eem5FfKYTsIbnA" name="To__Parent__194" kind="exitPoint"/>
                  <region xmi:id="_s60GkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_1GhJoEr4Eem5FfKYTsIbnA" name="Trans__Init__State__197198" source="_1Gab8Er4Eem5FfKYTsIbnA" target="_1GR5EEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1JbTsEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__197&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__223&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__197&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__221&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__197&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1GmCIEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__TryBeMaster__199" source="_s7IPoUrDEem2BZRQc2M93A" target="_1GR5EEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1JIYwEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__223&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__221&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1Gn3UEr4Eem5FfKYTsIbnA" name="PME_Trig200" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1GsIwEr4Eem5FfKYTsIbnA" name="PME_Trig201" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1G3u8Er4Eem5FfKYTsIbnA" name="PME_Trig202" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1G7ZUEr4Eem5FfKYTsIbnA" name="PME_Trig203" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1HD8MEr4Eem5FfKYTsIbnA" name="PME_Trig204" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1HINoEr4Eem5FfKYTsIbnA" name="PME_Trig205" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1HPiYEr4Eem5FfKYTsIbnA" name="PME_Trig206" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1HYsUEr4Eem5FfKYTsIbnA" name="PME_Trig207" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1HfaAEr4Eem5FfKYTsIbnA" name="PME_Trig208" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1HjrcEr4Eem5FfKYTsIbnA" name="PME_Trig209" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1HtccEr4Eem5FfKYTsIbnA" name="PME_Trig210" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1H2mYEr4Eem5FfKYTsIbnA" name="PME_Trig211" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1H97IEr4Eem5FfKYTsIbnA" name="PME_Trig212" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1ICzoEr4Eem5FfKYTsIbnA" name="PME_Trig213" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1IMkoEr4Eem5FfKYTsIbnA" name="PME_Trig214" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1IVHgEr4Eem5FfKYTsIbnA" name="PME_Trig215" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1IdqYEr4Eem5FfKYTsIbnA" name="PME_Trig216" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1IgGoEr4Eem5FfKYTsIbnA" name="PME_Trig217" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1ImNQEr4Eem5FfKYTsIbnA" name="PME_Trig218" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1IsT4Er4Eem5FfKYTsIbnA" name="PME_Trig219" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1I02wEr4Eem5FfKYTsIbnA" name="PME_Trig220" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1I9ZoEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__TryBeMaster__221" guard="_1JeXAUr4Eem5FfKYTsIbnA" source="_1GR5EEr4Eem5FfKYTsIbnA" target="_s7IPoUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1JeXAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion225">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1JeXAEr4Eem5FfKYTsIbnA" name="PME_checkDecesion225">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__221&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1I_O0Er4Eem5FfKYTsIbnA" name="From__Parnet__Backup__222" source="_1GIvIEr4Eem5FfKYTsIbnA" target="_1GR5EEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1JSJwEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__C__ReplyConfig&quot;,&quot;To__Parent__Backup__223&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReplyConfig&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__221&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1I_14Er4Eem5FfKYTsIbnA" name="To__Parent__Backup__223" guard="_1JdI4Ur4Eem5FfKYTsIbnA" source="_1GR5EEr4Eem5FfKYTsIbnA" target="_1GQD4Er4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1JdI4Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion224">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1JdI4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion224">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__223&quot;,&quot;Debug__C__ReplyConfig&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s7IPoUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7IPokrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s7OWQErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__229">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__ReplyConfig::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1GR5EEr4Eem5FfKYTsIbnA" name="DecesionPoint__196" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1Gab8Er4Eem5FfKYTsIbnA" name="Init__State__197"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s8T7YUrDEem2BZRQc2M93A" name="Debug__C__BackToSlave">
                  <connectionPoint xmi:id="_s8VwkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1SqvQEr4Eem5FfKYTsIbnA" name="From__Parent__320" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1Sr9YUr4Eem5FfKYTsIbnA" name="To__Parent__322" kind="exitPoint"/>
                  <region xmi:id="_s8T7YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s8uyIUrDEem2BZRQc2M93A" name="Debug__AC__BackToSlave" source="_s8pSkErDEem2BZRQc2M93A" target="_s8qgsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8vZMUrDEem2BZRQc2M93A" name="MasterRecovered" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: The Master recovered itself, backing to slave mode\n&quot;;
    //if (TimerId.isValid())
    //	Timer.cancelTimer(TimerId);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__AC__BackToSlave&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8vZMErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_s8wAQErDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_s8qgsErDEem2BZRQc2M93A" target="_s8s88ErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8wnUErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__BackToSlave&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8wAQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_1S_fYEr4Eem5FfKYTsIbnA" name="Trans__en326" source="_s8VwkUrDEem2BZRQc2M93A" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1glPcEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1TDJwEr4Eem5FfKYTsIbnA" name="Trans__Init__State__325327" source="_1S1HUEr4Eem5FfKYTsIbnA" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1gRGYEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__325&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__325&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__325&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__325&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__325&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1TfOoEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__BackToSlave__328" source="_s8pSkErDEem2BZRQc2M93A" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1gS7kEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1Tt4IEr4Eem5FfKYTsIbnA" name="PME_Trig329" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1UIH0Er4Eem5FfKYTsIbnA" name="PME_Trig330" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1UsvkEr4Eem5FfKYTsIbnA" name="PME_Trig331" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1VA4oEr4Eem5FfKYTsIbnA" name="PME_Trig332" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1Vgn4Er4Eem5FfKYTsIbnA" name="PME_Trig333" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1V964Er4Eem5FfKYTsIbnA" name="PME_Trig334" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1WMkYEr4Eem5FfKYTsIbnA" name="PME_Trig335" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1WnbIEr4Eem5FfKYTsIbnA" name="PME_Trig336" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1W-AcEr4Eem5FfKYTsIbnA" name="PME_Trig337" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1XSwkEr4Eem5FfKYTsIbnA" name="PME_Trig338" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1XqkAEr4Eem5FfKYTsIbnA" name="PME_Trig339" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1YLhYEr4Eem5FfKYTsIbnA" name="PME_Trig340" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1YXHkEr4Eem5FfKYTsIbnA" name="PME_Trig341" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1YqCgEr4Eem5FfKYTsIbnA" name="PME_Trig342" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1ZE5QEr4Eem5FfKYTsIbnA" name="PME_Trig343" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1ZfI8Er4Eem5FfKYTsIbnA" name="PME_Trig344" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1Zo58Er4Eem5FfKYTsIbnA" name="PME_Trig345" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1Zyq8Er4Eem5FfKYTsIbnA" name="PME_Trig346" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1Z8b8Er4Eem5FfKYTsIbnA" name="PME_Trig347" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1aGM8Er4Eem5FfKYTsIbnA" name="PME_Trig348" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1aSaMEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__BackToSlave__349" source="_s8qgsErDEem2BZRQc2M93A" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1gcFgEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1aaWAEr4Eem5FfKYTsIbnA" name="PME_Trig350" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1amjQEr4Eem5FfKYTsIbnA" name="PME_Trig351" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1a4QEEr4Eem5FfKYTsIbnA" name="PME_Trig352" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1bDPMEr4Eem5FfKYTsIbnA" name="PME_Trig353" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1bYmYEr4Eem5FfKYTsIbnA" name="PME_Trig354" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1bsIYEr4Eem5FfKYTsIbnA" name="PME_Trig355" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1b0rQEr4Eem5FfKYTsIbnA" name="PME_Trig356" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1cG_IEr4Eem5FfKYTsIbnA" name="PME_Trig357" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1cbvQEr4Eem5FfKYTsIbnA" name="PME_Trig358" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1cs1AEr4Eem5FfKYTsIbnA" name="PME_Trig359" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1cxGcEr4Eem5FfKYTsIbnA" name="PME_Trig360" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1c63cEr4Eem5FfKYTsIbnA" name="PME_Trig361" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1dCMMEr4Eem5FfKYTsIbnA" name="PME_Trig362" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1dF2kEr4Eem5FfKYTsIbnA" name="PME_Trig363" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1dIS0Er4Eem5FfKYTsIbnA" name="PME_Trig364" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1dRcwEr4Eem5FfKYTsIbnA" name="PME_Trig365" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1dXjYEr4Eem5FfKYTsIbnA" name="PME_Trig366" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1ddqAEr4Eem5FfKYTsIbnA" name="PME_Trig367" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1djwoEr4Eem5FfKYTsIbnA" name="PME_Trig368" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1dll0Er4Eem5FfKYTsIbnA" name="PME_Trig369" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1dopIEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__RunAsSlave__370" source="_s8s88ErDEem2BZRQc2M93A" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1gPRMEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1duvwEr4Eem5FfKYTsIbnA" name="PME_Trig371" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1d02YEr4Eem5FfKYTsIbnA" name="PME_Trig372" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1d4gwEr4Eem5FfKYTsIbnA" name="PME_Trig373" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1d69AEr4Eem5FfKYTsIbnA" name="PME_Trig374" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1eIYYEr4Eem5FfKYTsIbnA" name="PME_Trig375" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1eMCwEr4Eem5FfKYTsIbnA" name="PME_Trig376" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1eN38Er4Eem5FfKYTsIbnA" name="PME_Trig377" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1eVMsEr4Eem5FfKYTsIbnA" name="PME_Trig378" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1eYQAEr4Eem5FfKYTsIbnA" name="PME_Trig379" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1egy4Er4Eem5FfKYTsIbnA" name="PME_Trig380" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1elEUEr4Eem5FfKYTsIbnA" name="PME_Trig381" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1ewqgEr4Eem5FfKYTsIbnA" name="PME_Trig382" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1e50cEr4Eem5FfKYTsIbnA" name="PME_Trig383" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1e_7EEr4Eem5FfKYTsIbnA" name="PME_Trig384" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1fBwQEr4Eem5FfKYTsIbnA" name="PME_Trig385" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1fOkkEr4Eem5FfKYTsIbnA" name="PME_Trig386" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1fUEIEr4Eem5FfKYTsIbnA" name="PME_Trig387" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1fu64Er4Eem5FfKYTsIbnA" name="PME_Trig388" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1f1okEr4Eem5FfKYTsIbnA" name="PME_Trig389" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1f4E0Er4Eem5FfKYTsIbnA" name="PME_Trig390" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1f7vMEr4Eem5FfKYTsIbnA" name="PME_Trig391" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1f9kYEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__BackToSlave__392" guard="_1gmdkUr4Eem5FfKYTsIbnA" source="_1SzSIEr4Eem5FfKYTsIbnA" target="_s8pSkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1gmdkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion397">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1gmdkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion397">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BackToSlave__392&quot;,&quot;Debug__B__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1f-LcEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__BackToSlave__393" guard="_1gtLQUr4Eem5FfKYTsIbnA" source="_1SzSIEr4Eem5FfKYTsIbnA" target="_s8qgsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1gtLQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion400">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1gtLQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion400">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BackToSlave__393&quot;,&quot;Debug__A__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1gAAoEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__RunAsSlave__394" guard="_1gnEoUr4Eem5FfKYTsIbnA" source="_1SzSIEr4Eem5FfKYTsIbnA" target="_s8s88ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1gnEoUr4Eem5FfKYTsIbnA" name="PME_checkDecesion398">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1gnEoEr4Eem5FfKYTsIbnA" name="PME_checkDecesion398">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__394&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1gFgMEr4Eem5FfKYTsIbnA" name="From__Parnet__Backup__395" source="_1SqvQEr4Eem5FfKYTsIbnA" target="_1SzSIEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1gK_wEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__394&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__396&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__A__Ac__BackToSlave&quot;,&quot;To__Debug__A__Ac__BackToSlave__393&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1gGHQEr4Eem5FfKYTsIbnA" name="To__Parent__Backup__396" guard="_1go50Ur4Eem5FfKYTsIbnA" source="_1SzSIEr4Eem5FfKYTsIbnA" target="_1Sr9YUr4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1go50Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion399">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1go50Er4Eem5FfKYTsIbnA" name="PME_checkDecesion399">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__396&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s8pSkErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8pSkUrDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s81f0ErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave__277">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8qgsErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8rHwErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s85KMErDEem2BZRQc2M93A" name="Debug__A__Ac__BackToSlave__278">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8s88ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8s88UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s86_YErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__279">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1SzSIEr4Eem5FfKYTsIbnA" name="DecesionPoint__324" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1S1HUEr4Eem5FfKYTsIbnA" name="Init__State__325"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s-oPkErDEem2BZRQc2M93A" name="Debug__Path__NokeepAlive" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_1NAMIEr4Eem5FfKYTsIbnA" name="From__Parent__262" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1NFEoUr4Eem5FfKYTsIbnA" name="To__Parent__264" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_1NPcsEr4Eem5FfKYTsIbnA" name="Trans__Init__State__267268" source="_1NIH8Er4Eem5FfKYTsIbnA" target="_1NGSwUr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1SLnEEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__267&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__267&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__316&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__267&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__313&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__267&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1NTHEEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__TryBeMaster__269" source="_s-8_sErDEem2BZRQc2M93A" target="_1NGSwUr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1SOqYEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__316&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__313&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1NWxcEr4Eem5FfKYTsIbnA" name="PME_Trig270" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1NdfIEr4Eem5FfKYTsIbnA" name="PME_Trig271" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1NmpEEr4Eem5FfKYTsIbnA" name="PME_Trig272" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1Nuk4Er4Eem5FfKYTsIbnA" name="PME_Trig273" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1NzdYEr4Eem5FfKYTsIbnA" name="PME_Trig274" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1N5kAEr4Eem5FfKYTsIbnA" name="PME_Trig275" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1OCG4Er4Eem5FfKYTsIbnA" name="PME_Trig276" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1OGYUEr4Eem5FfKYTsIbnA" name="PME_Trig277" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1OO7MEr4Eem5FfKYTsIbnA" name="PME_Trig278" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1OYFIEr4Eem5FfKYTsIbnA" name="PME_Trig279" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1Oey0Er4Eem5FfKYTsIbnA" name="PME_Trig280" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1OidMEr4Eem5FfKYTsIbnA" name="PME_Trig281" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1OnVsEr4Eem5FfKYTsIbnA" name="PME_Trig282" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1OwfoEr4Eem5FfKYTsIbnA" name="PME_Trig283" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1O3NUEr4Eem5FfKYTsIbnA" name="PME_Trig284" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1O_wMEr4Eem5FfKYTsIbnA" name="PME_Trig285" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1PCzgEr4Eem5FfKYTsIbnA" name="PME_Trig286" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1PLWYEr4Eem5FfKYTsIbnA" name="PME_Trig287" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1PT5QEr4Eem5FfKYTsIbnA" name="PME_Trig288" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1PZY0Er4Eem5FfKYTsIbnA" name="PME_Trig289" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1PgtkEr4Eem5FfKYTsIbnA" name="PME_Trig290" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1PqekEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__RunAsSlave__291" source="_s-5VUErDEem2BZRQc2M93A" target="_1NGSwUr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1STi4Er4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__316&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__313&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1Pv-IEr4Eem5FfKYTsIbnA" name="PME_Trig292" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1P02oEr4Eem5FfKYTsIbnA" name="PME_Trig293" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1P_OsEr4Eem5FfKYTsIbnA" name="PME_Trig294" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1QHxkEr4Eem5FfKYTsIbnA" name="PME_Trig295" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1QPGUEr4Eem5FfKYTsIbnA" name="PME_Trig296" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1QUl4Er4Eem5FfKYTsIbnA" name="PME_Trig297" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1QchsEr4Eem5FfKYTsIbnA" name="PME_Trig298" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1QgMEEr4Eem5FfKYTsIbnA" name="PME_Trig299" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1QoH4Er4Eem5FfKYTsIbnA" name="PME_Trig300" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1QtAYEr4Eem5FfKYTsIbnA" name="PME_Trig301" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1Qu1kEr4Eem5FfKYTsIbnA" name="PME_Trig302" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1Q7p4Er4Eem5FfKYTsIbnA" name="PME_Trig303" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1Q-GIEr4Eem5FfKYTsIbnA" name="PME_Trig304" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1RCXkEr4Eem5FfKYTsIbnA" name="PME_Trig305" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1RPL4Er4Eem5FfKYTsIbnA" name="PME_Trig306" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1RTdUEr4Eem5FfKYTsIbnA" name="PME_Trig307" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1RaLAEr4Eem5FfKYTsIbnA" name="PME_Trig308" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1RiG0Er4Eem5FfKYTsIbnA" name="PME_Trig309" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1RlKIEr4Eem5FfKYTsIbnA" name="PME_Trig310" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1RtF8Er4Eem5FfKYTsIbnA" name="PME_Trig311" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1RxXYEr4Eem5FfKYTsIbnA" name="PME_Trig312" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1R56QEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__TryBeMaster__313" guard="_1So6EUr4Eem5FfKYTsIbnA" source="_1NGSwUr4Eem5FfKYTsIbnA" target="_s-8_sErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1So6EUr4Eem5FfKYTsIbnA" name="PME_checkDecesion319">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1So6EEr4Eem5FfKYTsIbnA" name="PME_checkDecesion319">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__TryBeMaster__313&quot;,&quot;Debug__A__En__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1R7IYEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__RunAsSlave__314" guard="_1Sg-QUr4Eem5FfKYTsIbnA" source="_1NGSwUr4Eem5FfKYTsIbnA" target="_s-5VUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1Sg-QUr4Eem5FfKYTsIbnA" name="PME_checkDecesion317">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1Sg-QEr4Eem5FfKYTsIbnA" name="PME_checkDecesion317">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__314&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1SBPAEr4Eem5FfKYTsIbnA" name="From__Parnet__Backup__315" source="_1NAMIEr4Eem5FfKYTsIbnA" target="_1NGSwUr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1SfwIEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__314&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__316&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__313&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1SB2EEr4Eem5FfKYTsIbnA" name="To__Parent__Backup__316" guard="_1SkooEr4Eem5FfKYTsIbnA" source="_1NGSwUr4Eem5FfKYTsIbnA" target="_1NFEoUr4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1SkooEr4Eem5FfKYTsIbnA" name="PME_checkDecesion318">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1SkBkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion318">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__316&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-5VUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-5VUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_CfQErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__350">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-8_sErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-9mwErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_J0AErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster__353">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1NGSwUr4Eem5FfKYTsIbnA" name="DecesionPoint__266" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1NIH8Er4Eem5FfKYTsIbnA" name="Init__State__267"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBtYwUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_1gwOkEr4Eem5FfKYTsIbnA" name="From__Parent__402" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1gyDwEr4Eem5FfKYTsIbnA" name="To__Parent__404" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tCCv8UrDEem2BZRQc2M93A" name="Debug__En__RunAsSlave" source="_tB-egErDEem2BZRQc2M93A" target="_tCATsErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCDXAErDEem2BZRQc2M93A" name="RunAsSlaveEntry" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__En__RunAsSlave&quot;,(char *)&quot;Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCCv8krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tCD-EErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg" source="_tCATsErDEem2BZRQc2M93A" target="_tBtYwUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCZVQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAliveMsg__467">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__end__trans__KeepAliveMsg&quot;,(char *)&quot;Debug__A__En__RunAsSlave&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_tCD-EUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_1hDJgEr4Eem5FfKYTsIbnA" name="Trans__ex408" source="_tBtYwUrDEem2BZRQc2M93A" target="_1g4xcEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1i8m8Er4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__455&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1hDwkEr4Eem5FfKYTsIbnA" name="Trans__Init__State__407409" source="_1g-4EEr4Eem5FfKYTsIbnA" target="_1g4xcEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1iy18Er4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__407&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__455&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__407&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__407&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__407&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1hFlwEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__KeepAliveMsg__410" source="_tB-egErDEem2BZRQc2M93A" target="_1g4xcEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1i1SMEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__455&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1hGM0Er4Eem5FfKYTsIbnA" name="PME_Trig411" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1hICAEr4Eem5FfKYTsIbnA" name="PME_Trig412" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1hNhkEr4Eem5FfKYTsIbnA" name="PME_Trig413" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1hOvsEr4Eem5FfKYTsIbnA" name="PME_Trig414" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1hP90Er4Eem5FfKYTsIbnA" name="PME_Trig415" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1hU2UEr4Eem5FfKYTsIbnA" name="PME_Trig416" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1hXSkEr4Eem5FfKYTsIbnA" name="PME_Trig417" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1hYgsEr4Eem5FfKYTsIbnA" name="PME_Trig418" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1henUEr4Eem5FfKYTsIbnA" name="PME_Trig419" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1hgcgEr4Eem5FfKYTsIbnA" name="PME_Trig420" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1hiRsEr4Eem5FfKYTsIbnA" name="PME_Trig421" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1hlVAEr4Eem5FfKYTsIbnA" name="PME_Trig422" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1ho_YEr4Eem5FfKYTsIbnA" name="PME_Trig423" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1hrboEr4Eem5FfKYTsIbnA" name="PME_Trig424" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1htQ0Er4Eem5FfKYTsIbnA" name="PME_Trig425" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1hue8Er4Eem5FfKYTsIbnA" name="PME_Trig426" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1h2awEr4Eem5FfKYTsIbnA" name="PME_Trig427" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1h6FIEr4Eem5FfKYTsIbnA" name="PME_Trig428" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1h7TQEr4Eem5FfKYTsIbnA" name="PME_Trig429" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1h8hYEr4Eem5FfKYTsIbnA" name="PME_Trig430" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1h9vgEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__RunAsSlave__431" source="_tCATsErDEem2BZRQc2M93A" target="_1g4xcEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1i2gUEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__455&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsSlave&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1h-9oEr4Eem5FfKYTsIbnA" name="PME_Trig432" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iALwEr4Eem5FfKYTsIbnA" name="PME_Trig433" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1iBZ4Er4Eem5FfKYTsIbnA" name="PME_Trig434" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iCoAEr4Eem5FfKYTsIbnA" name="PME_Trig435" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1iD2IEr4Eem5FfKYTsIbnA" name="PME_Trig436" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iGSYEr4Eem5FfKYTsIbnA" name="PME_Trig437" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1iKj0Er4Eem5FfKYTsIbnA" name="PME_Trig438" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1iLx8Er4Eem5FfKYTsIbnA" name="PME_Trig439" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iNAEEr4Eem5FfKYTsIbnA" name="PME_Trig440" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1iQDYEr4Eem5FfKYTsIbnA" name="PME_Trig441" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iUU0Er4Eem5FfKYTsIbnA" name="PME_Trig442" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1iVi8Er4Eem5FfKYTsIbnA" name="PME_Trig443" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1iWxEEr4Eem5FfKYTsIbnA" name="PME_Trig444" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1ibpkEr4Eem5FfKYTsIbnA" name="PME_Trig445" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1ieF0Er4Eem5FfKYTsIbnA" name="PME_Trig446" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1ies4Er4Eem5FfKYTsIbnA" name="PME_Trig447" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1if7AEr4Eem5FfKYTsIbnA" name="PME_Trig448" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1ihJIEr4Eem5FfKYTsIbnA" name="PME_Trig449" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1iiXQEr4Eem5FfKYTsIbnA" name="PME_Trig450" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1ilakEr4Eem5FfKYTsIbnA" name="PME_Trig451" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1ipsAEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__KeepAliveMsg__452" guard="_1i_DMUr4Eem5FfKYTsIbnA" source="_1g4xcEr4Eem5FfKYTsIbnA" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1i_DMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion458">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1i_DMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion458">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1ipsAUr4Eem5FfKYTsIbnA" name="To__Debug__A__En__RunAsSlave__453" guard="_1i-cIUr4Eem5FfKYTsIbnA" source="_1g4xcEr4Eem5FfKYTsIbnA" target="_tCATsErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1i-cIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion457">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1i-cIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion457">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsSlave__453&quot;,&quot;Debug__A__En__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1iq6IEr4Eem5FfKYTsIbnA" name="From__Parnet__Backup__454" source="_1gwOkEr4Eem5FfKYTsIbnA" target="_1g4xcEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1i0EEEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__455&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__En__RunAsSlave&quot;,&quot;To__Debug__A__En__RunAsSlave__453&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__452&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1irhMEr4Eem5FfKYTsIbnA" name="To__Parent__Backup__455" guard="_1i91EUr4Eem5FfKYTsIbnA" source="_1g4xcEr4Eem5FfKYTsIbnA" target="_1gyDwEr4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1i91EUr4Eem5FfKYTsIbnA" name="PME_checkDecesion456">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1i91EEr4Eem5FfKYTsIbnA" name="PME_checkDecesion456">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__455&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tCATsErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCATsUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCOWIErDEem2BZRQc2M93A" name="Debug__A__En__RunAsSlave__459">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__En__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1g4xcEr4Eem5FfKYTsIbnA" name="DecesionPoint__406" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1g-4EEr4Eem5FfKYTsIbnA" name="Init__State__407"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tDikwErDEem2BZRQc2M93A" name="Debug__Path__backtoslave1" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_1CjPoEr4Eem5FfKYTsIbnA" name="From__Parent__158" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1Cm6AEr4Eem5FfKYTsIbnA" name="To__Parent__160" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_1C6cAEr4Eem5FfKYTsIbnA" name="Trans__Init__State__163164" source="_1Cx5IEr4Eem5FfKYTsIbnA" target="_1CsZkEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1FxiwEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__163&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__189&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__163&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__163&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1C84QEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__backtoslave1__165" source="_tD378UrDEem2BZRQc2M93A" target="_1CsZkEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1F0mEEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__189&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1DBJsEr4Eem5FfKYTsIbnA" name="PME_Trig166" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1DGpQEr4Eem5FfKYTsIbnA" name="PME_Trig167" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1DQaQEr4Eem5FfKYTsIbnA" name="PME_Trig168" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1DaLQEr4Eem5FfKYTsIbnA" name="PME_Trig169" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1DkjUEr4Eem5FfKYTsIbnA" name="PME_Trig170" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1DuUUEr4Eem5FfKYTsIbnA" name="PME_Trig171" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1D1pEEr4Eem5FfKYTsIbnA" name="PME_Trig172" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1D5TcEr4Eem5FfKYTsIbnA" name="PME_Trig173" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1ECdYEr4Eem5FfKYTsIbnA" name="PME_Trig174" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1ELAQEr4Eem5FfKYTsIbnA" name="PME_Trig175" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1EPRsEr4Eem5FfKYTsIbnA" name="PME_Trig176" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1Ea34Er4Eem5FfKYTsIbnA" name="PME_Trig177" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1EhlkEr4Eem5FfKYTsIbnA" name="PME_Trig178" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1EnFIEr4Eem5FfKYTsIbnA" name="PME_Trig179" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1EwPEEr4Eem5FfKYTsIbnA" name="PME_Trig180" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1E2VsEr4Eem5FfKYTsIbnA" name="PME_Trig181" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1E-RgEr4Eem5FfKYTsIbnA" name="PME_Trig182" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1FB74Er4Eem5FfKYTsIbnA" name="PME_Trig183" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1FKewEr4Eem5FfKYTsIbnA" name="PME_Trig184" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1FSakEr4Eem5FfKYTsIbnA" name="PME_Trig185" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1FVd4Er4Eem5FfKYTsIbnA" name="PME_Trig186" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1Ff18Er4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__backtoslave1__187" guard="_1GFr0Ur4Eem5FfKYTsIbnA" source="_1CsZkEr4Eem5FfKYTsIbnA" target="_tD378UrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1GFr0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion191">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1GFr0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion191">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave1__187&quot;,&quot;Debug__B__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1FnxwEr4Eem5FfKYTsIbnA" name="From__Parnet__Backup__188" source="_1CjPoEr4Eem5FfKYTsIbnA" target="_1CsZkEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1F9wAEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__189&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__187&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1FoY0Er4Eem5FfKYTsIbnA" name="To__Parent__Backup__189" guard="_1F--IUr4Eem5FfKYTsIbnA" source="_1CsZkEr4Eem5FfKYTsIbnA" target="_1Cm6AEr4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1F--IUr4Eem5FfKYTsIbnA" name="PME_checkDecesion190">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1F--IEr4Eem5FfKYTsIbnA" name="PME_checkDecesion190">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__189&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD378UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD378krDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1CsZkEr4Eem5FfKYTsIbnA" name="DecesionPoint__162" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1Cx5IEr4Eem5FfKYTsIbnA" name="Init__State__163"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_tIKmEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_1JmS0Er4Eem5FfKYTsIbnA" name="From__Parent__227" kind="entryPoint"/>
                  <connectionPoint xmi:id="_1Jng8Er4Eem5FfKYTsIbnA" name="To__Parent__229" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_1J2KcEr4Eem5FfKYTsIbnA" name="Trans__Init__State__232233" source="_1JxR8Er4Eem5FfKYTsIbnA" target="_1JqkQEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1Mz-4Er4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__232&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__257&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__232&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__232&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1J500Er4Eem5FfKYTsIbnA" name="Trans__ex234" source="_tIKmEUrDEem2BZRQc2M93A" target="_1JqkQEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1MoYsEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__257&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1J8REEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__Initial1__RunAsSlave__7__235" source="_tIbEwUrDEem2BZRQc2M93A" target="_1JqkQEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1MjgMEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__257&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_1KDl0Er4Eem5FfKYTsIbnA" name="PME_Trig236" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1KHQMEr4Eem5FfKYTsIbnA" name="PME_Trig237" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1KQaIEr4Eem5FfKYTsIbnA" name="PME_Trig238" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1KZkEEr4Eem5FfKYTsIbnA" name="PME_Trig239" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1Kg40Er4Eem5FfKYTsIbnA" name="PME_Trig240" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1KlKQEr4Eem5FfKYTsIbnA" name="PME_Trig241" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_1KttIEr4Eem5FfKYTsIbnA" name="PME_Trig242" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1Kx-kEr4Eem5FfKYTsIbnA" name="PME_Trig243" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1LABAEr4Eem5FfKYTsIbnA" name="PME_Trig244" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_1LDEUEr4Eem5FfKYTsIbnA" name="PME_Trig245" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1LLnMEr4Eem5FfKYTsIbnA" name="PME_Trig246" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_1LOqgEr4Eem5FfKYTsIbnA" name="PME_Trig247" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                      <trigger xmi:id="_1LWmUEr4Eem5FfKYTsIbnA" name="PME_Trig248" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1LZCkEr4Eem5FfKYTsIbnA" name="PME_Trig249" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_1Lg-YEr4Eem5FfKYTsIbnA" name="PME_Trig250" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1LphQEr4Eem5FfKYTsIbnA" name="PME_Trig251" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_1Lr9gEr4Eem5FfKYTsIbnA" name="PME_Trig252" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_1L1HcEr4Eem5FfKYTsIbnA" name="PME_Trig253" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_1L-RYEr4Eem5FfKYTsIbnA" name="PME_Trig254" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_1MBUsEr4Eem5FfKYTsIbnA" name="PME_Trig255" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_1MJQgEr4Eem5FfKYTsIbnA" name="PME_Trig256" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_1MTBgEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__Initial1__RunAsSlave__7__257" guard="_1M4QUUr4Eem5FfKYTsIbnA" source="_1JqkQEr4Eem5FfKYTsIbnA" target="_tIbEwUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_1M4QUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion260">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1M4QUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion260">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__257&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_1MU2sEr4Eem5FfKYTsIbnA" name="From__Parnet__Backup__258" source="_1JmS0Er4Eem5FfKYTsIbnA" target="_1JqkQEr4Eem5FfKYTsIbnA">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1MbkYEr4Eem5FfKYTsIbnA">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__257&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__259&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_1MVdwEr4Eem5FfKYTsIbnA" name="To__Parent__Backup__259" guard="_1M9I0Ur4Eem5FfKYTsIbnA" source="_1JqkQEr4Eem5FfKYTsIbnA" target="_1Jng8Er4Eem5FfKYTsIbnA">
                      <ownedRule xmi:id="_1M9I0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion261">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_1M9I0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion261">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__259&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbEwUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbEwkrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIhLYUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7__667">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1JqkQEr4Eem5FfKYTsIbnA" name="DecesionPoint__231" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_1JxR8Er4Eem5FfKYTsIbnA" name="Init__State__232"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_0-9JEEr4Eem5FfKYTsIbnA" name="DecesionPoint__128" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_0_HhIEr4Eem5FfKYTsIbnA" name="Init__State__129"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s7c_wErDEem2BZRQc2M93A" name="Debug__Path__ServerFaliure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7eN4UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_1zb6AEr4Eem5FfKYTsIbnA" name="From__Parent__737" kind="entryPoint"/>
              <connectionPoint xmi:id="_1zfkYEr4Eem5FfKYTsIbnA" name="To__Parent__739" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s732gErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure" source="_s7eN4UrDEem2BZRQc2M93A" target="_s7y-AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8I8QErDEem2BZRQc2M93A" name="Debug__init__trans__ServerFaliure__257">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__init__trans__ServerFaliure&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1zrKkEr4Eem5FfKYTsIbnA" name="Trans__Init__State__742743" source="_1zngMEr4Eem5FfKYTsIbnA" target="_1ziAoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_12YgUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__742&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__742&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__742&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__742&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1zrxoEr4Eem5FfKYTsIbnA" name="Trans__ex744" source="_s7e08UrDEem2BZRQc2M93A" target="_1ziAoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_12i4YEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1zs_wEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__RunAsMaster__745" source="_s7y-AErDEem2BZRQc2M93A" target="_1ziAoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_12f1EEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1zyfUEr4Eem5FfKYTsIbnA" name="PME_Trig746" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1z1ioEr4Eem5FfKYTsIbnA" name="PME_Trig747" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1z7pQEr4Eem5FfKYTsIbnA" name="PME_Trig748" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10C-AEr4Eem5FfKYTsIbnA" name="PME_Trig749" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_10EzMEr4Eem5FfKYTsIbnA" name="PME_Trig750" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10GBUEr4Eem5FfKYTsIbnA" name="PME_Trig751" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_10NWEEr4Eem5FfKYTsIbnA" name="PME_Trig752" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_10N9IEr4Eem5FfKYTsIbnA" name="PME_Trig753" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10PLQEr4Eem5FfKYTsIbnA" name="PME_Trig754" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_10QZYEr4Eem5FfKYTsIbnA" name="PME_Trig755" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10TcsEr4Eem5FfKYTsIbnA" name="PME_Trig756" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_10Y8QEr4Eem5FfKYTsIbnA" name="PME_Trig757" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_10cmoEr4Eem5FfKYTsIbnA" name="PME_Trig758" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10eb0Er4Eem5FfKYTsIbnA" name="PME_Trig759" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_10kicEr4Eem5FfKYTsIbnA" name="PME_Trig760" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_10oM0Er4Eem5FfKYTsIbnA" name="PME_Trig761" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_10tFUEr4Eem5FfKYTsIbnA" name="PME_Trig762" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_10u6gEr4Eem5FfKYTsIbnA" name="PME_Trig763" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_10x90Er4Eem5FfKYTsIbnA" name="PME_Trig764" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_10zzAEr4Eem5FfKYTsIbnA" name="PME_Trig765" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1055oEr4Eem5FfKYTsIbnA" name="PME_Trig766" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_10888Er4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__ServerFaliure__767" source="_s71aQErDEem2BZRQc2M93A" target="_1ziAoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_12nw4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_11B1cEr4Eem5FfKYTsIbnA" name="PME_Trig768" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_11GG4Er4Eem5FfKYTsIbnA" name="PME_Trig769" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_11JKMEr4Eem5FfKYTsIbnA" name="PME_Trig770" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_11NboEr4Eem5FfKYTsIbnA" name="PME_Trig771" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_11P34Er4Eem5FfKYTsIbnA" name="PME_Trig772" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_11SUIEr4Eem5FfKYTsIbnA" name="PME_Trig773" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_11XzsEr4Eem5FfKYTsIbnA" name="PME_Trig774" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_11a3AEr4Eem5FfKYTsIbnA" name="PME_Trig775" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_11csMEr4Eem5FfKYTsIbnA" name="PME_Trig776" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_11hksEr4Eem5FfKYTsIbnA" name="PME_Trig777" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_11lPEEr4Eem5FfKYTsIbnA" name="PME_Trig778" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_11quoEr4Eem5FfKYTsIbnA" name="PME_Trig779" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_11tx8Er4Eem5FfKYTsIbnA" name="PME_Trig780" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_110foEr4Eem5FfKYTsIbnA" name="PME_Trig781" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_113i8Er4Eem5FfKYTsIbnA" name="PME_Trig782" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_115YIEr4Eem5FfKYTsIbnA" name="PME_Trig783" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_119CgEr4Eem5FfKYTsIbnA" name="PME_Trig784" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_12As4Er4Eem5FfKYTsIbnA" name="PME_Trig785" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_12DwMEr4Eem5FfKYTsIbnA" name="PME_Trig786" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_12GMcEr4Eem5FfKYTsIbnA" name="PME_Trig787" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_12LE8Er4Eem5FfKYTsIbnA" name="PME_Trig788" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_12Tn0Er4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__RunAsMaster__789" guard="_12q0MUr4Eem5FfKYTsIbnA" source="_1ziAoEr4Eem5FfKYTsIbnA" target="_s7y-AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_12q0MUr4Eem5FfKYTsIbnA" name="PME_checkDecesion794">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_12q0MEr4Eem5FfKYTsIbnA" name="PME_checkDecesion794">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_12UO4Er4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__ServerFaliure__790" guard="_12sCUEr4Eem5FfKYTsIbnA" source="_1ziAoEr4Eem5FfKYTsIbnA" target="_s71aQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_12sCUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion795">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_12rbQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion795">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_12WrIEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__791" source="_1zb6AEr4Eem5FfKYTsIbnA" target="_1ziAoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_12ZucEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__792&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__789&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__790&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_12XSMEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__792" guard="_12o_AUr4Eem5FfKYTsIbnA" source="_1ziAoEr4Eem5FfKYTsIbnA" target="_1zfkYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_12o_AUr4Eem5FfKYTsIbnA" name="PME_checkDecesion793">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_12o_AEr4Eem5FfKYTsIbnA" name="PME_checkDecesion793">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__792&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s7y-AErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s7y-AUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s79WEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__252">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s71aQErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s71aQUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8DcsErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure__254">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1ziAoEr4Eem5FfKYTsIbnA" name="DecesionPoint__741" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1zngMEr4Eem5FfKYTsIbnA" name="Init__State__742"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_s9MsMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_1-CAcEr4Eem5FfKYTsIbnA" name="From__Parent__926" kind="entryPoint"/>
              <connectionPoint xmi:id="_1-IuIEr4Eem5FfKYTsIbnA" name="To__Parent__928" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s9iDYErDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_s9dx8ErDEem2BZRQc2M93A" target="_s9fAEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9x7AErDEem2BZRQc2M93A" name="Debug__Ex__Failure__308">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9iDYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_1-TtQEr4Eem5FfKYTsIbnA" name="Trans__ex932" source="_s9MsMUrDEem2BZRQc2M93A" target="_1-LKYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2BBqEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__980&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__978&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1-UUUEr4Eem5FfKYTsIbnA" name="Trans__Init__State__931933" source="_1-M_kEr4Eem5FfKYTsIbnA" target="_1-LKYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2BMCIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__931&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__931&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__980&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__931&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__978&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__931&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1-aa8Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__purgeotherMessage__934" source="_s9fAEErDEem2BZRQc2M93A" target="_1-LKYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2A5HMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__980&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__978&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1-bCAEr4Eem5FfKYTsIbnA" name="PME_Trig935" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1-eFUEr4Eem5FfKYTsIbnA" name="PME_Trig936" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1-ghkEr4Eem5FfKYTsIbnA" name="PME_Trig937" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1-laEEr4Eem5FfKYTsIbnA" name="PME_Trig938" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1-q5oEr4Eem5FfKYTsIbnA" name="PME_Trig939" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1-vyIEr4Eem5FfKYTsIbnA" name="PME_Trig940" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1-yOYEr4Eem5FfKYTsIbnA" name="PME_Trig941" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1-zcgEr4Eem5FfKYTsIbnA" name="PME_Trig942" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1-48EEr4Eem5FfKYTsIbnA" name="PME_Trig943" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1-6KMEr4Eem5FfKYTsIbnA" name="PME_Trig944" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1-9NgEr4Eem5FfKYTsIbnA" name="PME_Trig945" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1-_CsEr4Eem5FfKYTsIbnA" name="PME_Trig946" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1_FwYEr4Eem5FfKYTsIbnA" name="PME_Trig947" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_IMoEr4Eem5FfKYTsIbnA" name="PME_Trig948" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1_OTQEr4Eem5FfKYTsIbnA" name="PME_Trig949" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1_QvgEr4Eem5FfKYTsIbnA" name="PME_Trig950" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1_SksEr4Eem5FfKYTsIbnA" name="PME_Trig951" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1_WPEEr4Eem5FfKYTsIbnA" name="PME_Trig952" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1_buoEr4Eem5FfKYTsIbnA" name="PME_Trig953" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_c8wEr4Eem5FfKYTsIbnA" name="PME_Trig954" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1_eK4Er4Eem5FfKYTsIbnA" name="PME_Trig955" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1_k4kEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__Failure__956" source="_s9dx8ErDEem2BZRQc2M93A" target="_1-LKYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2A-mwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__980&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__978&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1_mGsEr4Eem5FfKYTsIbnA" name="PME_Trig957" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_rmQEr4Eem5FfKYTsIbnA" name="PME_Trig958" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1_s0YEr4Eem5FfKYTsIbnA" name="PME_Trig959" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_v3sEr4Eem5FfKYTsIbnA" name="PME_Trig960" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1_1XQEr4Eem5FfKYTsIbnA" name="PME_Trig961" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_3McEr4Eem5FfKYTsIbnA" name="PME_Trig962" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1_5osEr4Eem5FfKYTsIbnA" name="PME_Trig963" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1_7d4Er4Eem5FfKYTsIbnA" name="PME_Trig964" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1_8sAEr4Eem5FfKYTsIbnA" name="PME_Trig965" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_2AEn0Er4Eem5FfKYTsIbnA" name="PME_Trig966" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2AKHYEr4Eem5FfKYTsIbnA" name="PME_Trig967" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2ANxwEr4Eem5FfKYTsIbnA" name="PME_Trig968" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2AO_4Er4Eem5FfKYTsIbnA" name="PME_Trig969" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2AWUoEr4Eem5FfKYTsIbnA" name="PME_Trig970" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2AZX8Er4Eem5FfKYTsIbnA" name="PME_Trig971" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2Ae3gEr4Eem5FfKYTsIbnA" name="PME_Trig972" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2AgssEr4Eem5FfKYTsIbnA" name="PME_Trig973" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2AoogEr4Eem5FfKYTsIbnA" name="PME_Trig974" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2AqdsEr4Eem5FfKYTsIbnA" name="PME_Trig975" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_2As58Er4Eem5FfKYTsIbnA" name="PME_Trig976" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_2AznoEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__purgeotherMessage__977" guard="_2BMpMUr4Eem5FfKYTsIbnA" source="_1-LKYEr4Eem5FfKYTsIbnA" target="_s9fAEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2BMpMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion981">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2BMpMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion981">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2A0OsEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__Failure__978" guard="_2BQTkUr4Eem5FfKYTsIbnA" source="_1-LKYEr4Eem5FfKYTsIbnA" target="_s9dx8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2BQTkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion983">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2BQTkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion983">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__978&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2A2q8Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__979" source="_1-CAcEr4Eem5FfKYTsIbnA" target="_1-LKYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2BHJoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__977&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__980&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__978&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2A2q8Ur4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__980" guard="_2BN3UUr4Eem5FfKYTsIbnA" source="_1-LKYEr4Eem5FfKYTsIbnA" target="_1-IuIEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2BN3UUr4Eem5FfKYTsIbnA" name="PME_checkDecesion982">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2BN3UEr4Eem5FfKYTsIbnA" name="PME_checkDecesion982">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__980&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9dx8ErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9dx8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9ltwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__301">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9fAEErDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9fAEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9oxEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage__302">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1-LKYEr4Eem5FfKYTsIbnA" name="DecesionPoint__930" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1-M_kEr4Eem5FfKYTsIbnA" name="Init__State__931"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s97sAUrDEem2BZRQc2M93A" name="Debug__C__initTimer">
              <connectionPoint xmi:id="_s99hMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_1wWJwEr4Eem5FfKYTsIbnA" name="From__Parent__678" kind="entryPoint"/>
              <connectionPoint xmi:id="_1wcQYEr4Eem5FfKYTsIbnA" name="To__Parent__680" kind="exitPoint"/>
              <region xmi:id="_s98TEErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s-RqQUrDEem2BZRQc2M93A" name="Debug__Ac__initTimer" source="_s-N_4ErDEem2BZRQc2M93A" target="_s-POAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-SRUErDEem2BZRQc2M93A" name="InitTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__Ac__initTimer&quot;,(char *)&quot;Debug__B__Ac__initTimer&quot;,(char *)&quot;Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-RqQkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_1wpEsEr4Eem5FfKYTsIbnA" name="Trans__Init__State__683684" source="_1wkMMEr4Eem5FfKYTsIbnA" target="_1wfTsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1zCRYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__683&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__683&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__732&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__683&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__730&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__683&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1wprwEr4Eem5FfKYTsIbnA" name="Trans__ex685" source="_s99hMUrDEem2BZRQc2M93A" target="_1wfTsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1zSwEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__732&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__730&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1wvyYEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__initTimer__686" source="_s-N_4ErDEem2BZRQc2M93A" target="_1wfTsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1zLbUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__732&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__730&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1w0q4Er4Eem5FfKYTsIbnA" name="PME_Trig687" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1w4VQEr4Eem5FfKYTsIbnA" name="PME_Trig688" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1w5jYEr4Eem5FfKYTsIbnA" name="PME_Trig689" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1w7_oEr4Eem5FfKYTsIbnA" name="PME_Trig690" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1w900Er4Eem5FfKYTsIbnA" name="PME_Trig691" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1w_C8Er4Eem5FfKYTsIbnA" name="PME_Trig692" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1xG-wEr4Eem5FfKYTsIbnA" name="PME_Trig693" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1xIM4Er4Eem5FfKYTsIbnA" name="PME_Trig694" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xIz8Er4Eem5FfKYTsIbnA" name="PME_Trig695" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1xKCEEr4Eem5FfKYTsIbnA" name="PME_Trig696" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xMeUEr4Eem5FfKYTsIbnA" name="PME_Trig697" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1xQvwEr4Eem5FfKYTsIbnA" name="PME_Trig698" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1xR94Er4Eem5FfKYTsIbnA" name="PME_Trig699" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xTMAEr4Eem5FfKYTsIbnA" name="PME_Trig700" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1xTzEEr4Eem5FfKYTsIbnA" name="PME_Trig701" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1xWPUEr4Eem5FfKYTsIbnA" name="PME_Trig702" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1xZ5sEr4Eem5FfKYTsIbnA" name="PME_Trig703" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1xcV8Er4Eem5FfKYTsIbnA" name="PME_Trig704" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xk40Er4Eem5FfKYTsIbnA" name="PME_Trig705" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1xnVEEr4Eem5FfKYTsIbnA" name="PME_Trig706" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1xs0oEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__initTimer__707" source="_s-POAErDEem2BZRQc2M93A" target="_1wfTsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1zHw8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__732&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__730&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1xtbsEr4Eem5FfKYTsIbnA" name="PME_Trig708" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xv38Er4Eem5FfKYTsIbnA" name="PME_Trig709" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1xxGEEr4Eem5FfKYTsIbnA" name="PME_Trig710" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1xxtIEr4Eem5FfKYTsIbnA" name="PME_Trig711" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1xy7QEr4Eem5FfKYTsIbnA" name="PME_Trig712" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1x5B4Er4Eem5FfKYTsIbnA" name="PME_Trig713" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1x9TUEr4Eem5FfKYTsIbnA" name="PME_Trig714" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1yEBAEr4Eem5FfKYTsIbnA" name="PME_Trig715" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1yGdQEr4Eem5FfKYTsIbnA" name="PME_Trig716" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1yMj4Er4Eem5FfKYTsIbnA" name="PME_Trig717" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1yQOQEr4Eem5FfKYTsIbnA" name="PME_Trig718" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1ySDcEr4Eem5FfKYTsIbnA" name="PME_Trig719" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1yXjAEr4Eem5FfKYTsIbnA" name="PME_Trig720" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1yZYMEr4Eem5FfKYTsIbnA" name="PME_Trig721" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1ydpoEr4Eem5FfKYTsIbnA" name="PME_Trig722" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1yiiIEr4Eem5FfKYTsIbnA" name="PME_Trig723" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1ykXUEr4Eem5FfKYTsIbnA" name="PME_Trig724" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1yp24Er4Eem5FfKYTsIbnA" name="PME_Trig725" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1ythQEr4Eem5FfKYTsIbnA" name="PME_Trig726" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1yvWcEr4Eem5FfKYTsIbnA" name="PME_Trig727" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1yzn4Er4Eem5FfKYTsIbnA" name="PME_Trig728" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1y4gYEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__initTimer__729" guard="_1zTXIUr4Eem5FfKYTsIbnA" source="_1wfTsEr4Eem5FfKYTsIbnA" target="_s-N_4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1zTXIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion733">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1zTXIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion733">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__initTimer__729&quot;,&quot;Debug__B__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1y5ugEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__initTimer__730" guard="_1zVzYUr4Eem5FfKYTsIbnA" source="_1wfTsEr4Eem5FfKYTsIbnA" target="_s-POAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1zVzYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion735">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1zVzYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion735">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__initTimer__730&quot;,&quot;Debug__A__Ac__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1y9_8Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__731" source="_1wWJwEr4Eem5FfKYTsIbnA" target="_1wfTsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1zNQgEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__B__Ac__initTimer&quot;,&quot;To__Debug__B__Ac__initTimer__729&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__732&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__Ac__initTimer&quot;,&quot;To__Debug__A__Ac__initTimer__730&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1y_OEEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__732" guard="_1zVMUUr4Eem5FfKYTsIbnA" source="_1wfTsEr4Eem5FfKYTsIbnA" target="_1wcQYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1zVMUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion734">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1zVMUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion734">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__732&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-N_4ErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-N_4UrDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-UGgErDEem2BZRQc2M93A" name="Debug__B__Ac__initTimer__328">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__B__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s-POAErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-POAUrDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;initTimer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-XJ0ErDEem2BZRQc2M93A" name="Debug__A__Ac__initTimer__329">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__Ac__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1wfTsEr4Eem5FfKYTsIbnA" name="DecesionPoint__682" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1wkMMEr4Eem5FfKYTsIbnA" name="Init__State__683"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_-6cErDEem2BZRQc2M93A" name="Debug__Path__ActiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_tAbmYUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_04xBgEr4Eem5FfKYTsIbnA" name="From__Parent__56" kind="entryPoint"/>
              <connectionPoint xmi:id="_045kYEr4Eem5FfKYTsIbnA" name="To__Parent__58" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAw9kErDEem2BZRQc2M93A" name="Debug__init__trans__Recover" source="_tAbmYUrDEem2BZRQc2M93A" target="_tAt6QErDEem2BZRQc2M93A"/>
                <transition xmi:id="_05IN4Er4Eem5FfKYTsIbnA" name="Trans__Init__State__6162" source="_05D8cEr4Eem5FfKYTsIbnA" target="_048AoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_07lsAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__61&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__85&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__61&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__87&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__61&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_05OUgEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__Failure__63" source="_tAt6QErDEem2BZRQc2M93A" target="_048AoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_07dJIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__85&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__87&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_05PioEr4Eem5FfKYTsIbnA" name="PME_Trig64" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_05XecEr4Eem5FfKYTsIbnA" name="PME_Trig65" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_05ahwEr4Eem5FfKYTsIbnA" name="PME_Trig66" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_05jEoEr4Eem5FfKYTsIbnA" name="PME_Trig67" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_05pyUEr4Eem5FfKYTsIbnA" name="PME_Trig68" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_05uDwEr4Eem5FfKYTsIbnA" name="PME_Trig69" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_051_kEr4Eem5FfKYTsIbnA" name="PME_Trig70" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_054b0Er4Eem5FfKYTsIbnA" name="PME_Trig71" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_06AXoEr4Eem5FfKYTsIbnA" name="PME_Trig72" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_06Cz4Er4Eem5FfKYTsIbnA" name="PME_Trig73" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_06LWwEr4Eem5FfKYTsIbnA" name="PME_Trig74" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_06QPQEr4Eem5FfKYTsIbnA" name="PME_Trig75" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_06WV4Er4Eem5FfKYTsIbnA" name="PME_Trig76" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_06e4wEr4Eem5FfKYTsIbnA" name="PME_Trig77" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_06h8EEr4Eem5FfKYTsIbnA" name="PME_Trig78" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_06p34Er4Eem5FfKYTsIbnA" name="PME_Trig79" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_06uJUEr4Eem5FfKYTsIbnA" name="PME_Trig80" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_061eEEr4Eem5FfKYTsIbnA" name="PME_Trig81" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_068y0Er4Eem5FfKYTsIbnA" name="PME_Trig82" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_06_2IEr4Eem5FfKYTsIbnA" name="PME_Trig83" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_07IZAEr4Eem5FfKYTsIbnA" name="PME_Trig84" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_07Ri8Er4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__Failure__85" guard="_07qkgEr4Eem5FfKYTsIbnA" source="_048AoEr4Eem5FfKYTsIbnA" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_07qkgEr4Eem5FfKYTsIbnA" name="PME_checkDecesion88">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_07p9cEr4Eem5FfKYTsIbnA" name="PME_checkDecesion88">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__85&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_07T_MEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__86" source="_04xBgEr4Eem5FfKYTsIbnA" target="_048AoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_07oIQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__85&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__87&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_07WbcEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__87" guard="_07wEEUr4Eem5FfKYTsIbnA" source="_048AoEr4Eem5FfKYTsIbnA" target="_045kYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_07wEEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion89">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_07wEEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion89">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__87&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_048AoEr4Eem5FfKYTsIbnA" name="DecesionPoint__60" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_05D8cEr4Eem5FfKYTsIbnA" name="Init__State__61"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tBFGoUrDEem2BZRQc2M93A" name="Debug__C__BeingMaster">
              <connectionPoint xmi:id="_tBIJ8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_12xh4Er4Eem5FfKYTsIbnA" name="From__Parent__797" kind="entryPoint"/>
              <connectionPoint xmi:id="_121MQEr4Eem5FfKYTsIbnA" name="To__Parent__799" kind="exitPoint"/>
              <region xmi:id="_tBFGokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tBZ2wUrDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster" source="_tBYBkErDEem2BZRQc2M93A" target="_tBIJ8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBmrEErDEem2BZRQc2M93A" name="Debug__end__trans__BeingMaster__442">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__end__trans__BeingMaster&quot;,(char *)&quot;Debug__A__En__BeingMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tBad0ErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_13AycEr4Eem5FfKYTsIbnA" name="Trans__Init__State__802803" source="_129IEEr4Eem5FfKYTsIbnA" target="_126EwEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_14eLAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__802&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__828&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__802&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__826&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__802&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_13DOsEr4Eem5FfKYTsIbnA" name="Trans__ex804" source="_tBIJ8UrDEem2BZRQc2M93A" target="_126EwEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_14mG0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__828&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__826&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_13ON0Er4Eem5FfKYTsIbnA" name="From__Debug__A__En__BeingMaster__805" source="_tBYBkErDEem2BZRQc2M93A" target="_126EwEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_14WPMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__828&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__826&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_13O04Er4Eem5FfKYTsIbnA" name="PME_Trig806" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_13QqEEr4Eem5FfKYTsIbnA" name="PME_Trig807" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_13SfQEr4Eem5FfKYTsIbnA" name="PME_Trig808" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_13bCIEr4Eem5FfKYTsIbnA" name="PME_Trig809" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_13c3UEr4Eem5FfKYTsIbnA" name="PME_Trig810" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_13f6oEr4Eem5FfKYTsIbnA" name="PME_Trig811" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_13laMEr4Eem5FfKYTsIbnA" name="PME_Trig812" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_13moUEr4Eem5FfKYTsIbnA" name="PME_Trig813" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_13pEkEr4Eem5FfKYTsIbnA" name="PME_Trig814" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_13qSsEr4Eem5FfKYTsIbnA" name="PME_Trig815" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_13vyQEr4Eem5FfKYTsIbnA" name="PME_Trig816" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_13y1kEr4Eem5FfKYTsIbnA" name="PME_Trig817" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_130DsEr4Eem5FfKYTsIbnA" name="PME_Trig818" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_135jQEr4Eem5FfKYTsIbnA" name="PME_Trig819" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_136xYEr4Eem5FfKYTsIbnA" name="PME_Trig820" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_13-bwEr4Eem5FfKYTsIbnA" name="PME_Trig821" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_14D7UEr4Eem5FfKYTsIbnA" name="PME_Trig822" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_14HlsEr4Eem5FfKYTsIbnA" name="PME_Trig823" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_14KB8Er4Eem5FfKYTsIbnA" name="PME_Trig824" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_14OTYEr4Eem5FfKYTsIbnA" name="PME_Trig825" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_14R9wEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__BeingMaster__826" guard="_14pKIUr4Eem5FfKYTsIbnA" source="_126EwEr4Eem5FfKYTsIbnA" target="_tBYBkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_14pKIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion830">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_14pKIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion830">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__BeingMaster__826&quot;,&quot;Debug__A__En__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_14Sk0Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__827" source="_12xh4Er4Eem5FfKYTsIbnA" target="_126EwEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_14iccEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__828&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__En__BeingMaster&quot;,&quot;To__Debug__A__En__BeingMaster__826&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_14TL4Er4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__828" guard="_14nU8Ur4Eem5FfKYTsIbnA" source="_126EwEr4Eem5FfKYTsIbnA" target="_121MQEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_14nU8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion829">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_14nU8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion829">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__828&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tBYBkErDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBYBkUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBhLgUrDEem2BZRQc2M93A" name="Debug__A__En__BeingMaster__436">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__En__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_126EwEr4Eem5FfKYTsIbnA" name="DecesionPoint__801" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_129IEEr4Eem5FfKYTsIbnA" name="Init__State__802"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tCdmsUrDEem2BZRQc2M93A" name="Debug__C__PassiveMode">
              <connectionPoint xmi:id="_tCe00UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_07xSMEr4Eem5FfKYTsIbnA" name="From__Parent__90" kind="entryPoint"/>
              <connectionPoint xmi:id="_07zHYEr4Eem5FfKYTsIbnA" name="To__Parent__92" kind="exitPoint"/>
              <region xmi:id="_tCdmskrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tCyW0ErDEem2BZRQc2M93A" name="Debug__init__trans__PassiveMode" source="_tCe00UrDEem2BZRQc2M93A" target="_tCwhoUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_08DmEEr4Eem5FfKYTsIbnA" name="Trans__Init__State__9596" source="_078RUEr4Eem5FfKYTsIbnA" target="_0751EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_0-U28Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__95&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__95&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__121&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__95&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_08GCUEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__PassiveMode__97" source="_tCwhoUrDEem2BZRQc2M93A" target="_0751EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_098ccEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__121&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_08H3gEr4Eem5FfKYTsIbnA" name="PME_Trig98" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_08PMQEr4Eem5FfKYTsIbnA" name="PME_Trig99" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_08RogEr4Eem5FfKYTsIbnA" name="PME_Trig100" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_08ZkUEr4Eem5FfKYTsIbnA" name="PME_Trig101" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_08fq8Er4Eem5FfKYTsIbnA" name="PME_Trig102" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_08mYoEr4Eem5FfKYTsIbnA" name="PME_Trig103" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_08tGUEr4Eem5FfKYTsIbnA" name="PME_Trig104" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_08uUcEr4Eem5FfKYTsIbnA" name="PME_Trig105" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_08zM8Er4Eem5FfKYTsIbnA" name="PME_Trig106" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_084FcEr4Eem5FfKYTsIbnA" name="PME_Trig107" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_086hsEr4Eem5FfKYTsIbnA" name="PME_Trig108" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_09B2cEr4Eem5FfKYTsIbnA" name="PME_Trig109" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_09DroEr4Eem5FfKYTsIbnA" name="PME_Trig110" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_09JyQEr4Eem5FfKYTsIbnA" name="PME_Trig111" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_09ODsEr4Eem5FfKYTsIbnA" name="PME_Trig112" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_09V_gEr4Eem5FfKYTsIbnA" name="PME_Trig113" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_09YbwEr4Eem5FfKYTsIbnA" name="PME_Trig114" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_09gXkEr4Eem5FfKYTsIbnA" name="PME_Trig115" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_09kB8Er4Eem5FfKYTsIbnA" name="PME_Trig116" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_09qvoEr4Eem5FfKYTsIbnA" name="PME_Trig117" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_09tL4Er4Eem5FfKYTsIbnA" name="PME_Trig118" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_090goEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__PassiveMode__119" guard="_0-XTMEr4Eem5FfKYTsIbnA" source="_0751EEr4Eem5FfKYTsIbnA" target="_tCwhoUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_0-XTMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion122">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_0-WFEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion122">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__PassiveMode__119&quot;,&quot;Debug__B__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_092V0Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__120" source="_07xSMEr4Eem5FfKYTsIbnA" target="_0751EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_0-LtAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__119&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__121&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_09284Er4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__121" guard="_0-dZ0Ur4Eem5FfKYTsIbnA" source="_0751EEr4Eem5FfKYTsIbnA" target="_07zHYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_0-dZ0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion123">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_0-dZ0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion123">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__121&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tCwhoUrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCwhokrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_0751EEr4Eem5FfKYTsIbnA" name="DecesionPoint__94" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_078RUEr4Eem5FfKYTsIbnA" name="Init__State__95"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tC6SoUrDEem2BZRQc2M93A" name="Debug__C__Init__StandBy__3">
              <connectionPoint xmi:id="_tC8u4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_1teb8Er4Eem5FfKYTsIbnA" name="From__Parent__620" kind="entryPoint"/>
              <connectionPoint xmi:id="_1titYEr4Eem5FfKYTsIbnA" name="To__Parent__622" kind="exitPoint"/>
              <region xmi:id="_tC6SokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tDSGEErDEem2BZRQc2M93A" name="Debug__En__StandBy" source="_tDPCwErDEem2BZRQc2M93A" target="_tDQQ4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDdFMErDEem2BZRQc2M93A" name="Debug__En__StandBy__502">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__En__StandBy&quot;,(char *)&quot;Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDSGEUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDSGEkrDEem2BZRQc2M93A" name="Debug__end__trans__Init__StandBy__3" source="_tDQQ4ErDEem2BZRQc2M93A" target="_tC8u4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDe6YErDEem2BZRQc2M93A" name="Debug__end__trans__Init__StandBy__3__504">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__end__trans__Init__StandBy__3&quot;,(char *)&quot;Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tDStIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_1ttsgEr4Eem5FfKYTsIbnA" name="Trans__Init__State__625626" source="_1toM8Er4Eem5FfKYTsIbnA" target="_1tm-0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1wBZoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__625&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__673&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__625&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__625&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__625&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1tu6oEr4Eem5FfKYTsIbnA" name="Trans__ex627" source="_tC8u4UrDEem2BZRQc2M93A" target="_1tm-0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1wIuYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__673&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1tylAEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__Init__StandBy__3__628" source="_tDPCwErDEem2BZRQc2M93A" target="_1tm-0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1v9vQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__673&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1t3dgEr4Eem5FfKYTsIbnA" name="PME_Trig629" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1t5SsEr4Eem5FfKYTsIbnA" name="PME_Trig630" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1t8WAEr4Eem5FfKYTsIbnA" name="PME_Trig631" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1t-LMEr4Eem5FfKYTsIbnA" name="PME_Trig632" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1uDqwEr4Eem5FfKYTsIbnA" name="PME_Trig633" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1uGuEEr4Eem5FfKYTsIbnA" name="PME_Trig634" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1uH8MEr4Eem5FfKYTsIbnA" name="PME_Trig635" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1uNbwEr4Eem5FfKYTsIbnA" name="PME_Trig636" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1uQfEEr4Eem5FfKYTsIbnA" name="PME_Trig637" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1uRtMEr4Eem5FfKYTsIbnA" name="PME_Trig638" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1uS7UEr4Eem5FfKYTsIbnA" name="PME_Trig639" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1uV-oEr4Eem5FfKYTsIbnA" name="PME_Trig640" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1ufvoEr4Eem5FfKYTsIbnA" name="PME_Trig641" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1uhk0Er4Eem5FfKYTsIbnA" name="PME_Trig642" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1ulPMEr4Eem5FfKYTsIbnA" name="PME_Trig643" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1upgoEr4Eem5FfKYTsIbnA" name="PME_Trig644" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1uquwEr4Eem5FfKYTsIbnA" name="PME_Trig645" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1ur84Er4Eem5FfKYTsIbnA" name="PME_Trig646" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1uzRoEr4Eem5FfKYTsIbnA" name="PME_Trig647" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1u0fwEr4Eem5FfKYTsIbnA" name="PME_Trig648" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1u1G0Er4Eem5FfKYTsIbnA" name="From__Debug__A__En__Init__StandBy__3__649" source="_tDQQ4ErDEem2BZRQc2M93A" target="_1tm-0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1wLKoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__673&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1u1t4Er4Eem5FfKYTsIbnA" name="PME_Trig650" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1u4KIEr4Eem5FfKYTsIbnA" name="PME_Trig651" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1u5_UEr4Eem5FfKYTsIbnA" name="PME_Trig652" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1u_e4Er4Eem5FfKYTsIbnA" name="PME_Trig653" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1vAtAEr4Eem5FfKYTsIbnA" name="PME_Trig654" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1vCiMEr4Eem5FfKYTsIbnA" name="PME_Trig655" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1vDwUEr4Eem5FfKYTsIbnA" name="PME_Trig656" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1vE-cEr4Eem5FfKYTsIbnA" name="PME_Trig657" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1vKeAEr4Eem5FfKYTsIbnA" name="PME_Trig658" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1vNhUEr4Eem5FfKYTsIbnA" name="PME_Trig659" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1vOIYEr4Eem5FfKYTsIbnA" name="PME_Trig660" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1vPWgEr4Eem5FfKYTsIbnA" name="PME_Trig661" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1vTA4Er4Eem5FfKYTsIbnA" name="PME_Trig662" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1vYgcEr4Eem5FfKYTsIbnA" name="PME_Trig663" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1vaVoEr4Eem5FfKYTsIbnA" name="PME_Trig664" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1viRcEr4Eem5FfKYTsIbnA" name="PME_Trig665" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1vpmMEr4Eem5FfKYTsIbnA" name="PME_Trig666" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1vtQkEr4Eem5FfKYTsIbnA" name="PME_Trig667" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1vywIEr4Eem5FfKYTsIbnA" name="PME_Trig668" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1v1zcEr4Eem5FfKYTsIbnA" name="PME_Trig669" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1v3BkEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__Init__StandBy__3__670" guard="_1wSfYUr4Eem5FfKYTsIbnA" source="_1tm-0Er4Eem5FfKYTsIbnA" target="_tDPCwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1wSfYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion676">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1wSfYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion676">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1v3BkUr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Init__StandBy__3__671" guard="_1wR4UUr4Eem5FfKYTsIbnA" source="_1tm-0Er4Eem5FfKYTsIbnA" target="_tDQQ4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1wR4UUr4Eem5FfKYTsIbnA" name="PME_checkDecesion675">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1wR4UEr4Eem5FfKYTsIbnA" name="PME_checkDecesion675">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1v4PsEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__672" source="_1teb8Er4Eem5FfKYTsIbnA" target="_1tm-0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1wQqMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__673&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__En__Init__StandBy__3&quot;,&quot;To__Debug__A__En__Init__StandBy__3__671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__A__Ac__Init__StandBy__3&quot;,&quot;To__Debug__A__Ac__Init__StandBy__3__670&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1v4PsUr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__673" guard="_1wRRQUr4Eem5FfKYTsIbnA" source="_1tm-0Er4Eem5FfKYTsIbnA" target="_1titYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1wRRQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion674">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1wRRQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion674">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__673&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tDPCwErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDPCwUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDVJYUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__StandBy__3__496">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDQQ4ErDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDQQ4UrDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDW-kUrDEem2BZRQc2M93A" name="Debug__A__En__Init__StandBy__3__497">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__A__En__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1tm-0Er4Eem5FfKYTsIbnA" name="DecesionPoint__624" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1toM8Er4Eem5FfKYTsIbnA" name="Init__State__625"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tEBF4UrDEem2BZRQc2M93A" name="Debug__C__MasterAnnounce">
              <connectionPoint xmi:id="_2BUlAEr4Eem5FfKYTsIbnA" name="From__Parent__984" kind="entryPoint"/>
              <connectionPoint xmi:id="_2BYPYEr4Eem5FfKYTsIbnA" name="To__Parent__986" kind="exitPoint"/>
              <region xmi:id="_tEBs8ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_2BlqwEr4Eem5FfKYTsIbnA" name="Trans__Init__State__989990" source="_2BgLMEr4Eem5FfKYTsIbnA" target="_2Bcg0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2E-9AEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__989&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1035&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__989&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1038&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__989&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1036&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__989&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2Bm44Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__RunAsMaster__991" source="_tEQWcUrDEem2BZRQc2M93A" target="_2Bcg0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2E2aIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1035&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1038&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1036&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2BoHAEr4Eem5FfKYTsIbnA" name="PME_Trig992" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2BqjQEr4Eem5FfKYTsIbnA" name="PME_Trig993" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2BsYcEr4Eem5FfKYTsIbnA" name="PME_Trig994" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2B1iYEr4Eem5FfKYTsIbnA" name="PME_Trig995" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2B9eMEr4Eem5FfKYTsIbnA" name="PME_Trig996" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2B_6cEr4Eem5FfKYTsIbnA" name="PME_Trig997" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2CFaAEr4Eem5FfKYTsIbnA" name="PME_Trig998" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2CH2QEr4Eem5FfKYTsIbnA" name="PME_Trig999" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2CJrcEr4Eem5FfKYTsIbnA" name="PME_Trig1000" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_2CSOUEr4Eem5FfKYTsIbnA" name="PME_Trig1001" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2CUDgEr4Eem5FfKYTsIbnA" name="PME_Trig1002" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2CZjEEr4Eem5FfKYTsIbnA" name="PME_Trig1003" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2CdNcEr4Eem5FfKYTsIbnA" name="PME_Trig1004" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2CjUEEr4Eem5FfKYTsIbnA" name="PME_Trig1005" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2CnlgEr4Eem5FfKYTsIbnA" name="PME_Trig1006" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2CuTMEr4Eem5FfKYTsIbnA" name="PME_Trig1007" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2CxWgEr4Eem5FfKYTsIbnA" name="PME_Trig1008" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2C5SUEr4Eem5FfKYTsIbnA" name="PME_Trig1009" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2C8VoEr4Eem5FfKYTsIbnA" name="PME_Trig1010" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2DB1MEr4Eem5FfKYTsIbnA" name="PME_Trig1011" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_2DDDUEr4Eem5FfKYTsIbnA" name="PME_Trig1012" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_2DGtsEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__RunAsMaster__1013" source="_tEUA0ErDEem2BZRQc2M93A" target="_2Bcg0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2E75sEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1035&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1038&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1036&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2DM0UEr4Eem5FfKYTsIbnA" name="PME_Trig1014" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2DPQkEr4Eem5FfKYTsIbnA" name="PME_Trig1015" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2DST4Er4Eem5FfKYTsIbnA" name="PME_Trig1016" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2DZBkEr4Eem5FfKYTsIbnA" name="PME_Trig1017" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2Da2wEr4Eem5FfKYTsIbnA" name="PME_Trig1018" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2DfvQEr4Eem5FfKYTsIbnA" name="PME_Trig1019" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2DjZoEr4Eem5FfKYTsIbnA" name="PME_Trig1020" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2DkAsEr4Eem5FfKYTsIbnA" name="PME_Trig1021" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2DrVcEr4Eem5FfKYTsIbnA" name="PME_Trig1022" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_2Du_0Er4Eem5FfKYTsIbnA" name="PME_Trig1023" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Dw1AEr4Eem5FfKYTsIbnA" name="PME_Trig1024" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2D4w0Er4Eem5FfKYTsIbnA" name="PME_Trig1025" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2D6mAEr4Eem5FfKYTsIbnA" name="PME_Trig1026" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2EAFkEr4Eem5FfKYTsIbnA" name="PME_Trig1027" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2EE-EEr4Eem5FfKYTsIbnA" name="PME_Trig1028" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2EKdoEr4Eem5FfKYTsIbnA" name="PME_Trig1029" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ENg8Er4Eem5FfKYTsIbnA" name="PME_Trig1030" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2EOvEEr4Eem5FfKYTsIbnA" name="PME_Trig1031" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2EiREEr4Eem5FfKYTsIbnA" name="PME_Trig1032" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2EoXsEr4Eem5FfKYTsIbnA" name="PME_Trig1033" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_2Eqz8Er4Eem5FfKYTsIbnA" name="PME_Trig1034" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_2Ew6kEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__RunAsMaster__1035" guard="_2FBZQUr4Eem5FfKYTsIbnA" source="_2Bcg0Er4Eem5FfKYTsIbnA" target="_tEQWcUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2FBZQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1039">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FBZQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1039">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1035&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2EyIsEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__RunAsMaster__1036" guard="_2FG40Ur4Eem5FfKYTsIbnA" source="_2Bcg0Er4Eem5FfKYTsIbnA" target="_tEUA0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2FG40Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1041">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FG40Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1041">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1036&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2Ez94Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__1037" source="_2BUlAEr4Eem5FfKYTsIbnA" target="_2Bcg0Er4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2FAyMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1035&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1038&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1036&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2E0k8Er4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__1038" guard="_2FCAUUr4Eem5FfKYTsIbnA" source="_2Bcg0Er4Eem5FfKYTsIbnA" target="_2BYPYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2FCAUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1040">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FCAUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1040">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1038&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tEQWcUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEQWckrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEXrMErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__532">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tEUA0ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEUA0UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEeY4ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__535">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2Bcg0Er4Eem5FfKYTsIbnA" name="DecesionPoint__988" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2BgLMEr4Eem5FfKYTsIbnA" name="Init__State__989"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_1qh1oEr4Eem5FfKYTsIbnA" name="From__Parent__562" kind="entryPoint"/>
              <connectionPoint xmi:id="_1qjDwEr4Eem5FfKYTsIbnA" name="To__Parent__564" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tE-vMUrDEem2BZRQc2M93A" name="Debug__Ac__ExitPoint1__BeMaster__4" source="_tE86AErDEem2BZRQc2M93A" target="_tE9hEErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tE-vMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_1qsNsEr4Eem5FfKYTsIbnA" name="Trans__Init__State__567568" source="_1qnVMEr4Eem5FfKYTsIbnA" target="_1qmHEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1tQZgEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__567&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__567&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__567&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__612&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__567&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1qwfIEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__ExitPoint1__BeMaster__4__569" source="_tE9hEErDEem2BZRQc2M93A" target="_1qmHEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1tTc0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__612&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1qxGMEr4Eem5FfKYTsIbnA" name="PME_Trig570" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1qyUUEr4Eem5FfKYTsIbnA" name="PME_Trig571" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1q5CAEr4Eem5FfKYTsIbnA" name="PME_Trig572" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1q_IoEr4Eem5FfKYTsIbnA" name="PME_Trig573" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1rA90Er4Eem5FfKYTsIbnA" name="PME_Trig574" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1rCL8Er4Eem5FfKYTsIbnA" name="PME_Trig575" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1rHrgEr4Eem5FfKYTsIbnA" name="PME_Trig576" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1rKHwEr4Eem5FfKYTsIbnA" name="PME_Trig577" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1rL88Er4Eem5FfKYTsIbnA" name="PME_Trig578" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1rOZMEr4Eem5FfKYTsIbnA" name="PME_Trig579" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1rPnUEr4Eem5FfKYTsIbnA" name="PME_Trig580" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1rRcgEr4Eem5FfKYTsIbnA" name="PME_Trig581" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1rT4wEr4Eem5FfKYTsIbnA" name="PME_Trig582" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1rZ_YEr4Eem5FfKYTsIbnA" name="PME_Trig583" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1rb0kEr4Eem5FfKYTsIbnA" name="PME_Trig584" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1rjJUEr4Eem5FfKYTsIbnA" name="PME_Trig585" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1rk-gEr4Eem5FfKYTsIbnA" name="PME_Trig586" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1rrFIEr4Eem5FfKYTsIbnA" name="PME_Trig587" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1ruIcEr4Eem5FfKYTsIbnA" name="PME_Trig588" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1rzoAEr4Eem5FfKYTsIbnA" name="PME_Trig589" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1r1dMEr4Eem5FfKYTsIbnA" name="PME_Trig590" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1r4ggEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__ExitPoint1__BeMaster__4__591" source="_tE86AErDEem2BZRQc2M93A" target="_1qmHEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1tUq8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__612&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1r5HkEr4Eem5FfKYTsIbnA" name="PME_Trig592" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1r-nIEr4Eem5FfKYTsIbnA" name="PME_Trig593" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1sCRgEr4Eem5FfKYTsIbnA" name="PME_Trig594" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1sDfoEr4Eem5FfKYTsIbnA" name="PME_Trig595" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1sGi8Er4Eem5FfKYTsIbnA" name="PME_Trig596" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1sSJIEr4Eem5FfKYTsIbnA" name="PME_Trig597" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1sVMcEr4Eem5FfKYTsIbnA" name="PME_Trig598" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1sWakEr4Eem5FfKYTsIbnA" name="PME_Trig599" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1sY20Er4Eem5FfKYTsIbnA" name="PME_Trig600" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1siAwEr4Eem5FfKYTsIbnA" name="PME_Trig601" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1slEEEr4Eem5FfKYTsIbnA" name="PME_Trig602" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1slrIEr4Eem5FfKYTsIbnA" name="PME_Trig603" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1sm5QEr4Eem5FfKYTsIbnA" name="PME_Trig604" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1suOAEr4Eem5FfKYTsIbnA" name="PME_Trig605" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1swqQEr4Eem5FfKYTsIbnA" name="PME_Trig606" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1sx4YEr4Eem5FfKYTsIbnA" name="PME_Trig607" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1s0UoEr4Eem5FfKYTsIbnA" name="PME_Trig608" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1s1iwEr4Eem5FfKYTsIbnA" name="PME_Trig609" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1s3X8Er4Eem5FfKYTsIbnA" name="PME_Trig610" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1tCXEEr4Eem5FfKYTsIbnA" name="PME_Trig611" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1tEzUEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__ExitPoint1__BeMaster__4__612" guard="_1tcmwUr4Eem5FfKYTsIbnA" source="_1qmHEEr4Eem5FfKYTsIbnA" target="_tE9hEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1tcmwUr4Eem5FfKYTsIbnA" name="PME_checkDecesion618">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1tcmwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion618">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__612&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1tFaYEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__ExitPoint1__BeMaster__4__613" guard="_1taKgUr4Eem5FfKYTsIbnA" source="_1qmHEEr4Eem5FfKYTsIbnA" target="_tE86AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1taKgUr4Eem5FfKYTsIbnA" name="PME_checkDecesion617">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1taKgEr4Eem5FfKYTsIbnA" name="PME_checkDecesion617">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__613&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1tGogEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__614" source="_1qh1oEr4Eem5FfKYTsIbnA" target="_1qmHEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1tKS4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__615&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__613&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__612&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1tIdsEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__615" guard="_1tYVUUr4Eem5FfKYTsIbnA" source="_1qmHEEr4Eem5FfKYTsIbnA" target="_1qjDwEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1tYVUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion616">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1tYVUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion616">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__615&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE86AErDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE86AUrDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tE9hEErDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE9hEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1qmHEEr4Eem5FfKYTsIbnA" name="DecesionPoint__566" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1qnVMEr4Eem5FfKYTsIbnA" name="Init__State__567"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tFE10UrDEem2BZRQc2M93A" name="Debug__C__BeSlave">
              <connectionPoint xmi:id="_tFIgMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_18Gt0Ur4Eem5FfKYTsIbnA" name="From__Parent__890" kind="entryPoint"/>
              <connectionPoint xmi:id="_18MNYEr4Eem5FfKYTsIbnA" name="To__Parent__892" kind="exitPoint"/>
              <region xmi:id="_tFE10krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_18WlcEr4Eem5FfKYTsIbnA" name="Trans__Init__State__895896" source="_18SUAEr4Eem5FfKYTsIbnA" target="_18PQsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_192aQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__895&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__895&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__922&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__895&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_18WlcUr4Eem5FfKYTsIbnA" name="Trans__ex897" source="_tFIgMUrDEem2BZRQc2M93A" target="_18PQsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_19zW8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__922&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_18ZowEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__BeSlave__898" source="_tFVUgUrDEem2BZRQc2M93A" target="_18PQsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_194PcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__922&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_18aP0Er4Eem5FfKYTsIbnA" name="PME_Trig899" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_18cFAEr4Eem5FfKYTsIbnA" name="PME_Trig900" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_18jZwEr4Eem5FfKYTsIbnA" name="PME_Trig901" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_18l2AEr4Eem5FfKYTsIbnA" name="PME_Trig902" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_18rVkEr4Eem5FfKYTsIbnA" name="PME_Trig903" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_18u_8Er4Eem5FfKYTsIbnA" name="PME_Trig904" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_181GkEr4Eem5FfKYTsIbnA" name="PME_Trig905" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_182UsEr4Eem5FfKYTsIbnA" name="PME_Trig906" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_188bUEr4Eem5FfKYTsIbnA" name="PME_Trig907" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_19AFsEr4Eem5FfKYTsIbnA" name="PME_Trig908" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_19HacEr4Eem5FfKYTsIbnA" name="PME_Trig909" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_19IokEr4Eem5FfKYTsIbnA" name="PME_Trig910" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_19LE0Er4Eem5FfKYTsIbnA" name="PME_Trig911" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_19NhEEr4Eem5FfKYTsIbnA" name="PME_Trig912" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_19PWQEr4Eem5FfKYTsIbnA" name="PME_Trig913" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_19U10Er4Eem5FfKYTsIbnA" name="PME_Trig914" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_19YgMEr4Eem5FfKYTsIbnA" name="PME_Trig915" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_19dYsEr4Eem5FfKYTsIbnA" name="PME_Trig916" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_19fN4Er4Eem5FfKYTsIbnA" name="PME_Trig917" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_19kGYEr4Eem5FfKYTsIbnA" name="PME_Trig918" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_19oX0Er4Eem5FfKYTsIbnA" name="PME_Trig919" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_19sCMEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__BeSlave__920" guard="_19_kMUr4Eem5FfKYTsIbnA" source="_18PQsEr4Eem5FfKYTsIbnA" target="_tFVUgUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_19_kMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion923">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_19_kMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion923">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BeSlave__920&quot;,&quot;Debug__B__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_19tQUEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__921" source="_18Gt0Ur4Eem5FfKYTsIbnA" target="_18PQsEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_19-WEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__B__Ac__BeSlave&quot;,&quot;To__Debug__B__Ac__BeSlave__920&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__922&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_19tQUUr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__922" guard="_1-AyUUr4Eem5FfKYTsIbnA" source="_18PQsEr4Eem5FfKYTsIbnA" target="_18MNYEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1-AyUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion924">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1-AyUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion924">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__922&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tFVUgUrDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFV7kErDEem2BZRQc2M93A" name="Debug__B__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_18PQsEr4Eem5FfKYTsIbnA" name="DecesionPoint__894" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_18SUAEr4Eem5FfKYTsIbnA" name="Init__State__895"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tF4HEErDEem2BZRQc2M93A" name="Debug__Path__ServiceRequest" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7xcUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_1leWgEr4Eem5FfKYTsIbnA" name="From__Parent__470" kind="entryPoint"/>
              <connectionPoint xmi:id="_1lhZ0Er4Eem5FfKYTsIbnA" name="To__Parent__472" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_1ltnEEr4Eem5FfKYTsIbnA" name="Trans__ex476" source="_tF7xcUrDEem2BZRQc2M93A" target="_1lj2EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1naQMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__502&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__500&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1luOIEr4Eem5FfKYTsIbnA" name="Trans__Init__State__475477" source="_1lrx4Er4Eem5FfKYTsIbnA" target="_1lj2EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1nWl0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__475&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__502&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__475&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__500&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__475&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1l2J8Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__ServiceRequest__478" source="_tGMQIErDEem2BZRQc2M93A" target="_1lj2EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1nUwoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__502&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__500&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1l3YEEr4Eem5FfKYTsIbnA" name="PME_Trig479" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1l_68Er4Eem5FfKYTsIbnA" name="PME_Trig480" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1mGooEr4Eem5FfKYTsIbnA" name="PME_Trig481" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1mKTAEr4Eem5FfKYTsIbnA" name="PME_Trig482" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1mNWUEr4Eem5FfKYTsIbnA" name="PME_Trig483" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1mUEAEr4Eem5FfKYTsIbnA" name="PME_Trig484" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1mVSIEr4Eem5FfKYTsIbnA" name="PME_Trig485" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1mXHUEr4Eem5FfKYTsIbnA" name="PME_Trig486" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1md1AEr4Eem5FfKYTsIbnA" name="PME_Trig487" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1mfqMEr4Eem5FfKYTsIbnA" name="PME_Trig488" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1mlw0Er4Eem5FfKYTsIbnA" name="PME_Trig489" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1moNEEr4Eem5FfKYTsIbnA" name="PME_Trig490" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1mo0IEr4Eem5FfKYTsIbnA" name="PME_Trig491" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1mqpUEr4Eem5FfKYTsIbnA" name="PME_Trig492" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1m1ocEr4Eem5FfKYTsIbnA" name="PME_Trig493" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1m3doEr4Eem5FfKYTsIbnA" name="PME_Trig494" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1m5S0Er4Eem5FfKYTsIbnA" name="PME_Trig495" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1m7vEEr4Eem5FfKYTsIbnA" name="PME_Trig496" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1m9kQEr4Eem5FfKYTsIbnA" name="PME_Trig497" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1nDD0Er4Eem5FfKYTsIbnA" name="PME_Trig498" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1nGHIEr4Eem5FfKYTsIbnA" name="PME_Trig499" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1nH8UEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__ServiceRequest__500" guard="_1nkoQUr4Eem5FfKYTsIbnA" source="_1lj2EEr4Eem5FfKYTsIbnA" target="_tGMQIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1nkoQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion504">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1nkoQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion504">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceRequest__500&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1nNb4Er4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__501" source="_1leWgEr4Eem5FfKYTsIbnA" target="_1lj2EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1ng94Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__502&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ac__ServiceRequest&quot;,&quot;To__Debug__B__Ac__ServiceRequest__500&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1nPREEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__502" guard="_1nkBMUr4Eem5FfKYTsIbnA" source="_1lj2EEr4Eem5FfKYTsIbnA" target="_1lhZ0Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1nkBMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion503">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1nkBMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion503">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__502&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGMQIErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGMQIUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceRequest&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGd88ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceRequest__599">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ac__ServiceRequest&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1lj2EEr4Eem5FfKYTsIbnA" name="DecesionPoint__474" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1lrx4Er4Eem5FfKYTsIbnA" name="Init__State__475"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_14tbkEr4Eem5FfKYTsIbnA" name="From__Parent__831" kind="entryPoint"/>
              <connectionPoint xmi:id="_14we4Er4Eem5FfKYTsIbnA" name="To__Parent__833" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_14628Er4Eem5FfKYTsIbnA" name="Trans__Init__State__836837" source="_143MkEr4Eem5FfKYTsIbnA" target="_14xtAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_174rYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__836&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__836&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__836&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__836&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_148FEEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__StandBy__CheckConfig__6__838" source="_tHFA8ErDEem2BZRQc2M93A" target="_14xtAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_177usEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_149TMEr4Eem5FfKYTsIbnA" name="PME_Trig839" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15CywEr4Eem5FfKYTsIbnA" name="PME_Trig840" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_15FPAEr4Eem5FfKYTsIbnA" name="PME_Trig841" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15KukEr4Eem5FfKYTsIbnA" name="PME_Trig842" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_15Q1MEr4Eem5FfKYTsIbnA" name="PME_Trig843" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15SqYEr4Eem5FfKYTsIbnA" name="PME_Trig844" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_15T4gEr4Eem5FfKYTsIbnA" name="PME_Trig845" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_15VGoEr4Eem5FfKYTsIbnA" name="PME_Trig846" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15YxAEr4Eem5FfKYTsIbnA" name="PME_Trig847" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_15amMEr4Eem5FfKYTsIbnA" name="PME_Trig848" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15gs0Er4Eem5FfKYTsIbnA" name="PME_Trig849" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_15jwIEr4Eem5FfKYTsIbnA" name="PME_Trig850" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_15p2wEr4Eem5FfKYTsIbnA" name="PME_Trig851" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_15sTAEr4Eem5FfKYTsIbnA" name="PME_Trig852" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_15thIEr4Eem5FfKYTsIbnA" name="PME_Trig853" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_15wkcEr4Eem5FfKYTsIbnA" name="PME_Trig854" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1535MEr4Eem5FfKYTsIbnA" name="PME_Trig855" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_159YwEr4Eem5FfKYTsIbnA" name="PME_Trig856" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_15_1AEr4Eem5FfKYTsIbnA" name="PME_Trig857" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_16CRQEr4Eem5FfKYTsIbnA" name="PME_Trig858" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_16HJwEr4Eem5FfKYTsIbnA" name="PME_Trig859" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_16JmAEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__StandBy__860" source="_tHDLwUrDEem2BZRQc2M93A" target="_14xtAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_17zy4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_16MCQEr4Eem5FfKYTsIbnA" name="PME_Trig861" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_16SI4Er4Eem5FfKYTsIbnA" name="PME_Trig862" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_16b54Er4Eem5FfKYTsIbnA" name="PME_Trig863" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_16gLUEr4Eem5FfKYTsIbnA" name="PME_Trig864" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_16qjYEr4Eem5FfKYTsIbnA" name="PME_Trig865" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_16ztUEr4Eem5FfKYTsIbnA" name="PME_Trig866" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_161igEr4Eem5FfKYTsIbnA" name="PME_Trig867" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_167pIEr4Eem5FfKYTsIbnA" name="PME_Trig868" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_16-scEr4Eem5FfKYTsIbnA" name="PME_Trig869" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_17FaIEr4Eem5FfKYTsIbnA" name="PME_Trig870" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_17H2YEr4Eem5FfKYTsIbnA" name="PME_Trig871" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_17KSoEr4Eem5FfKYTsIbnA" name="PME_Trig872" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_17QZQEr4Eem5FfKYTsIbnA" name="PME_Trig873" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_17UDoEr4Eem5FfKYTsIbnA" name="PME_Trig874" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_17XG8Er4Eem5FfKYTsIbnA" name="PME_Trig875" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_17bYYEr4Eem5FfKYTsIbnA" name="PME_Trig876" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_17d0oEr4Eem5FfKYTsIbnA" name="PME_Trig877" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_17iGEEr4Eem5FfKYTsIbnA" name="PME_Trig878" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_17mXgEr4Eem5FfKYTsIbnA" name="PME_Trig879" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_17oMsEr4Eem5FfKYTsIbnA" name="PME_Trig880" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_17tFMEr4Eem5FfKYTsIbnA" name="PME_Trig881" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_17u6YEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__StandBy__CheckConfig__6__882" guard="_18DDcUr4Eem5FfKYTsIbnA" source="_14xtAEr4Eem5FfKYTsIbnA" target="_tHFA8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_18DDcUr4Eem5FfKYTsIbnA" name="PME_checkDecesion887">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_18DDcEr4Eem5FfKYTsIbnA" name="PME_checkDecesion887">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__882&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_17wvkEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__StandBy__883" guard="_18ERkUr4Eem5FfKYTsIbnA" source="_14xtAEr4Eem5FfKYTsIbnA" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_18ERkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion888">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_18ERkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion888">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__883&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_17x9sEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__884" source="_14tbkEr4Eem5FfKYTsIbnA" target="_14xtAEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_17880Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__A__Ac__StandBy__CheckConfig__6&quot;,&quot;To__Debug__A__Ac__StandBy__CheckConfig__6__882&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__883&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_17ykwEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__885" guard="_17-K8Ur4Eem5FfKYTsIbnA" source="_14xtAEr4Eem5FfKYTsIbnA" target="_14we4Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_17-K8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion886">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_17-K8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion886">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__885&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHFA8ErDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHFA8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy__CheckConfig__6&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHOx8UrDEem2BZRQc2M93A" name="Debug__A__Ac__StandBy__CheckConfig__6__624">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__A__Ac__StandBy__CheckConfig__6&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_14xtAEr4Eem5FfKYTsIbnA" name="DecesionPoint__835" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_143MkEr4Eem5FfKYTsIbnA" name="Init__State__836"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tHWGsErDEem2BZRQc2M93A" name="Debug__Path__KeepAlive" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tHWtwUrDEem2BZRQc2M93A" name="Debug__C__KeepAlive">
              <connectionPoint xmi:id="_tHX74UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_1nl2YEr4Eem5FfKYTsIbnA" name="From__Parent__505" kind="entryPoint"/>
              <connectionPoint xmi:id="_1nr9AEr4Eem5FfKYTsIbnA" name="To__Parent__507" kind="exitPoint"/>
              <region xmi:id="_tHWtwkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHuhMErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive" source="_tHX74UrDEem2BZRQc2M93A" target="_tHqPwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tH8joErDEem2BZRQc2M93A" name="Debug__init__trans__KeepAlive__648">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__init__trans__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tHuhMUrDEem2BZRQc2M93A" name="Debug__Ex__RunAsMaster" source="_tHqPwErDEem2BZRQc2M93A" target="_tHq20ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHvIQErDEem2BZRQc2M93A" name="startTransition" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHuhMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_1n0f4Er4Eem5FfKYTsIbnA" name="Trans__Init__State__510511" source="_1nwOcEr4Eem5FfKYTsIbnA" target="_1nvAUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qSlEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__510&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__555&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__510&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__556&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__510&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__558&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__510&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1n3jMEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__KeepAlive__512" source="_tHq20ErDEem2BZRQc2M93A" target="_1nvAUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qYEoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__555&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__556&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__558&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1n5YYEr4Eem5FfKYTsIbnA" name="PME_Trig513" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1n7NkEr4Eem5FfKYTsIbnA" name="PME_Trig514" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1oB7QEr4Eem5FfKYTsIbnA" name="PME_Trig515" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1oIo8Er4Eem5FfKYTsIbnA" name="PME_Trig516" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1oJ3EEr4Eem5FfKYTsIbnA" name="PME_Trig517" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1oM6YEr4Eem5FfKYTsIbnA" name="PME_Trig518" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1oOIgEr4Eem5FfKYTsIbnA" name="PME_Trig519" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1oOvkEr4Eem5FfKYTsIbnA" name="PME_Trig520" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1oP9sEr4Eem5FfKYTsIbnA" name="PME_Trig521" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1oSZ8Er4Eem5FfKYTsIbnA" name="PME_Trig522" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1oX5gEr4Eem5FfKYTsIbnA" name="PME_Trig523" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1oZusEr4Eem5FfKYTsIbnA" name="PME_Trig524" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1obj4Er4Eem5FfKYTsIbnA" name="PME_Trig525" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1onKEEr4Eem5FfKYTsIbnA" name="PME_Trig526" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1ooYMEr4Eem5FfKYTsIbnA" name="PME_Trig527" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1orbgEr4Eem5FfKYTsIbnA" name="PME_Trig528" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1oue0Er4Eem5FfKYTsIbnA" name="PME_Trig529" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1o1MgEr4Eem5FfKYTsIbnA" name="PME_Trig530" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_1o3BsEr4Eem5FfKYTsIbnA" name="PME_Trig531" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1o6FAEr4Eem5FfKYTsIbnA" name="PME_Trig532" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1o9vYEr4Eem5FfKYTsIbnA" name="PME_Trig533" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1pAysEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__RunAsMaster__534" source="_tHqPwErDEem2BZRQc2M93A" target="_1nvAUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qQv4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__555&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__556&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__558&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_1pBZwEr4Eem5FfKYTsIbnA" name="PME_Trig535" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1pDO8Er4Eem5FfKYTsIbnA" name="PME_Trig536" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1pLx0Er4Eem5FfKYTsIbnA" name="PME_Trig537" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1pQDQEr4Eem5FfKYTsIbnA" name="PME_Trig538" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1pQqUEr4Eem5FfKYTsIbnA" name="PME_Trig539" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1pXYAEr4Eem5FfKYTsIbnA" name="PME_Trig540" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_1pZNMEr4Eem5FfKYTsIbnA" name="PME_Trig541" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1pbCYEr4Eem5FfKYTsIbnA" name="PME_Trig542" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1pdeoEr4Eem5FfKYTsIbnA" name="PME_Trig543" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_1pfT0Er4Eem5FfKYTsIbnA" name="PME_Trig544" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1phJAEr4Eem5FfKYTsIbnA" name="PME_Trig545" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_1piXIEr4Eem5FfKYTsIbnA" name="PME_Trig546" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_0nPzsEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_1ppE0Er4Eem5FfKYTsIbnA" name="PME_Trig547" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1pq6AEr4Eem5FfKYTsIbnA" name="PME_Trig548" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_1pyOwEr4Eem5FfKYTsIbnA" name="PME_Trig549" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1p3uUEr4Eem5FfKYTsIbnA" name="PME_Trig550" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_1p48cEr4Eem5FfKYTsIbnA" name="PME_Trig551" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_1p8m0Er4Eem5FfKYTsIbnA" name="PME_Trig552" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_1qCtcEr4Eem5FfKYTsIbnA" name="PME_Trig553" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_1qD7kEr4Eem5FfKYTsIbnA" name="PME_Trig554" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_1qINAEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__KeepAlive__555" guard="_1qc9IEr4Eem5FfKYTsIbnA" source="_1nvAUEr4Eem5FfKYTsIbnA" target="_tHq20ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1qc9IEr4Eem5FfKYTsIbnA" name="PME_checkDecesion559">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1qcWEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion559">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__KeepAlive__555&quot;,&quot;Debug__B__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1qI0EEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__RunAsMaster__556" guard="_1qgAcUr4Eem5FfKYTsIbnA" source="_1nvAUEr4Eem5FfKYTsIbnA" target="_tHqPwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_1qgAcUr4Eem5FfKYTsIbnA" name="PME_checkDecesion560">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1qgAcEr4Eem5FfKYTsIbnA" name="PME_checkDecesion560">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__556&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_1qNskEr4Eem5FfKYTsIbnA" name="From__Parnet__ServerStateMachine__557" source="_1nl2YEr4Eem5FfKYTsIbnA" target="_1nvAUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_1qZ50Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ac__KeepAlive&quot;,&quot;To__Debug__B__Ac__KeepAlive__555&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__556&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__558&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_1qOToEr4Eem5FfKYTsIbnA" name="To__Parent__ServerStateMachine__558" guard="_1qhOkUr4Eem5FfKYTsIbnA" source="_1nvAUEr4Eem5FfKYTsIbnA" target="_1nr9AEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_1qhOkUr4Eem5FfKYTsIbnA" name="PME_checkDecesion561">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_1qhOkEr4Eem5FfKYTsIbnA" name="PME_checkDecesion561">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__558&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHqPwErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHqPwUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHyyoErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__643">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHq20ErDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHq20UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH1O4UrDEem2BZRQc2M93A" name="Debug__B__Ac__KeepAlive__644">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__B__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1nvAUEr4Eem5FfKYTsIbnA" name="DecesionPoint__509" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_1nwOcEr4Eem5FfKYTsIbnA" name="Init__State__510"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_0xR5cEr4Eem5FfKYTsIbnA" name="DecesionPoint__1" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_0xcRgEr4Eem5FfKYTsIbnA" name="Init__State__2"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0tEH0Er4Eem5FfKYTsIbnA" name="loadHeap" specification="_0tDgwEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0tSxUUr4Eem5FfKYTsIbnA" name="unLoadHeap" specification="_0tSxUEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0vGvMEr4Eem5FfKYTsIbnA" name="sendMessage" specification="_0vE6AEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0vZDEUr4Eem5FfKYTsIbnA" name="sendInternalMessage" specification="_0vZDEEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_0w0mcUr4Eem5FfKYTsIbnA" name="initForPMD" specification="_0w0mcEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_0tDgwEr4Eem5FfKYTsIbnA" name="loadHeap" visibility="private" method="_0tEH0Er4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_0tSxUEr4Eem5FfKYTsIbnA" name="unLoadHeap" visibility="private" method="_0tSxUUr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_0vE6AEr4Eem5FfKYTsIbnA" name="sendMessage" visibility="private" method="_0vGvMEr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_0vJygEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0vS8cEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_0vZDEEr4Eem5FfKYTsIbnA" name="sendInternalMessage" visibility="private" method="_0vZDEUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_0vcGYEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_0viNAEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_0w0mcEr4Eem5FfKYTsIbnA" name="initForPMD" visibility="private" method="_0w0mcUr4Eem5FfKYTsIbnA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_2NYEAEr4Eem5FfKYTsIbnA" name="dbgPortForClient" visibility="protected" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2NYrEEr4Eem5FfKYTsIbnA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_2NYrEUr4Eem5FfKYTsIbnA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_BanqgAmuEea_md0mpENoqg" name="ServiceResult" source="_tNLo8ErDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_CC7jEAovEeaGqPUk-4V4qQ" name="getResponse">
                <language>C++</language>
                <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ServiceResult&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNRIgErDEem2BZRQc2M93A" name="Debug__ServiceResult__S" guard="_tNSWoUrDEem2BZRQc2M93A" source="_tNLo8ErDEem2BZRQc2M93A" target="_tNOFMErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tNSWoUrDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tNSWoErDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNS9sErDEem2BZRQc2M93A" name="Debug__ServiceResult__S__791">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__S&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNUL0ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E" source="_tNOsQUrDEem2BZRQc2M93A" target="_uScfwAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNUy4ErDEem2BZRQc2M93A" name="Debug__ServiceResult__E__792">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ProcessResponse&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPShwErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTI0ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange__840">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tPShwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPTv4ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTv4krDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint__841">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPTv4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPUW8ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPU-AUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint__842">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPU-AErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPVlEErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWMIUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints__843">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPWMIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPWzMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWzMkrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode__844">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tPWzMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPXaQErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPYoYUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg__845">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPXaQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYoYErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQkUIErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E" source="_tQYt8ErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQk7MErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__E__884">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ReqFlowDone__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRjyoErDEem2BZRQc2M93A" name="Debug__StarupTransition__E" source="_tRYMcErDEem2BZRQc2M93A" target="_IjppsAlhEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRkZsErDEem2BZRQc2M93A" name="Debug__StarupTransition__E__909">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Ready&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSUnoUrDEem2BZRQc2M93A" name="Debug__reqFlowInit" source="_IjppsAlhEea_md0mpENoqg" target="_tSQ9QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSUnokrDEem2BZRQc2M93A" name="Debug__reqFlowInit__931">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit&quot;,(char *)&quot;Ready&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_JtvGgAnKEeaGqPUk-4V4qQ" name="RequestTimer" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSWc0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S" guard="_tSXD4UrDEem2BZRQc2M93A" source="_tSQ9QErDEem2BZRQc2M93A" target="_tSSycUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tSXD4UrDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tSXD4ErDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSYSAErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S__933">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__S&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tScjcErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSdKgErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange__936">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tScjcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSeYoErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSe_sUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint__937">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSe_sErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSfmwErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSgN0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint__938">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSfmwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tShb8ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSiqEErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints__939">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tShb8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSiqEUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSjRIUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode__940">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tSjRIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSj4MErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSlGUErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg__941">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSj4MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_2QPKwEr4Eem5FfKYTsIbnA" name="Trans__Debug__Path__Retry1060" source="_tMY-wErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2yEsgEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2QPx0Er4Eem5FfKYTsIbnA" name="Trans__Init__State__10591061" source="_2QGA0Er4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ylC0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1059&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1059&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2QnlQEr4Eem5FfKYTsIbnA" name="1062" source="_tSQ9QErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xHqQEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2QpacEr4Eem5FfKYTsIbnA" name="1063" source="_tNLo8ErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2x7ikEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2QrPoEr4Eem5FfKYTsIbnA" name="1064" source="_tMY-wErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2y_SgEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2QsdwEr4Eem5FfKYTsIbnA" name="From__StandBY__1065" source="_Q5-S4AlKEea_md0mpENoqg" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xxxkEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_2Qtr4Er4Eem5FfKYTsIbnA" name="PME_Trig1066" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Qu6AEr4Eem5FfKYTsIbnA" name="PME_Trig1067" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2QzLcEr4Eem5FfKYTsIbnA" name="PME_Trig1068" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Q1nsEr4Eem5FfKYTsIbnA" name="PME_Trig1069" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2Q2OwEr4Eem5FfKYTsIbnA" name="PME_Trig1070" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Q210Er4Eem5FfKYTsIbnA" name="PME_Trig1071" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2Q4D8Er4Eem5FfKYTsIbnA" name="PME_Trig1072" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Q55IEr4Eem5FfKYTsIbnA" name="PME_Trig1073" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2Q6gMEr4Eem5FfKYTsIbnA" name="PME_Trig1074" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Q7uUEr4Eem5FfKYTsIbnA" name="PME_Trig1075" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2RBN4Er4Eem5FfKYTsIbnA" name="PME_Trig1076" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_2RDDEEr4Eem5FfKYTsIbnA" name="PME_Trig1077" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2RERMEr4Eem5FfKYTsIbnA" name="PME_Trig1078" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_2RFfUEr4Eem5FfKYTsIbnA" name="PME_Trig1079" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RIioEr4Eem5FfKYTsIbnA" name="PME_Trig1080" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2RKX0Er4Eem5FfKYTsIbnA" name="PME_Trig1081" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2RLl8Er4Eem5FfKYTsIbnA" name="PME_Trig1082" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2RMNAEr4Eem5FfKYTsIbnA" name="PME_Trig1083" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_2RNbIEr4Eem5FfKYTsIbnA" name="PME_Trig1084" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_2RRFgEr4Eem5FfKYTsIbnA" name="PME_Trig1085" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RUI0Er4Eem5FfKYTsIbnA" name="PME_Trig1086" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_2RUv4Er4Eem5FfKYTsIbnA" name="From__ProcessResponse__1087" source="_uScfwAmtEea_md0mpENoqg" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xbzUEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ProcessResponse&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_2RV-AEr4Eem5FfKYTsIbnA" name="PME_Trig1088" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RWlEEr4Eem5FfKYTsIbnA" name="PME_Trig1089" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2RZBUEr4Eem5FfKYTsIbnA" name="PME_Trig1090" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RZoYEr4Eem5FfKYTsIbnA" name="PME_Trig1091" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2RfvAEr4Eem5FfKYTsIbnA" name="PME_Trig1092" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RiyUEr4Eem5FfKYTsIbnA" name="PME_Trig1093" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2RkngEr4Eem5FfKYTsIbnA" name="PME_Trig1094" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RoR4Er4Eem5FfKYTsIbnA" name="PME_Trig1095" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2Ro48Er4Eem5FfKYTsIbnA" name="PME_Trig1096" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2RqHEEr4Eem5FfKYTsIbnA" name="PME_Trig1097" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2RquIEr4Eem5FfKYTsIbnA" name="PME_Trig1098" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_2RsjUEr4Eem5FfKYTsIbnA" name="PME_Trig1099" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2RtxcEr4Eem5FfKYTsIbnA" name="PME_Trig1100" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_2RuYgEr4Eem5FfKYTsIbnA" name="PME_Trig1101" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Ru_kEr4Eem5FfKYTsIbnA" name="PME_Trig1102" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2RzRAEr4Eem5FfKYTsIbnA" name="PME_Trig1103" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2R1GMEr4Eem5FfKYTsIbnA" name="PME_Trig1104" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2R3icEr4Eem5FfKYTsIbnA" name="PME_Trig1105" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_2R4JgEr4Eem5FfKYTsIbnA" name="PME_Trig1106" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_2R-QIEr4Eem5FfKYTsIbnA" name="PME_Trig1107" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2SBTcEr4Eem5FfKYTsIbnA" name="PME_Trig1108" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_2SChkEr4Eem5FfKYTsIbnA" name="From__Ready__1109" source="_IjppsAlhEea_md0mpENoqg" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xSpYEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Ready&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_2SJPQEr4Eem5FfKYTsIbnA" name="PME_Trig1110" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2SKdYEr4Eem5FfKYTsIbnA" name="PME_Trig1111" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2SM5oEr4Eem5FfKYTsIbnA" name="PME_Trig1112" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2SOu0Er4Eem5FfKYTsIbnA" name="PME_Trig1113" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2STnUEr4Eem5FfKYTsIbnA" name="PME_Trig1114" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2SWDkEr4Eem5FfKYTsIbnA" name="PME_Trig1115" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2SdYUEr4Eem5FfKYTsIbnA" name="PME_Trig1116" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2Sf0kEr4Eem5FfKYTsIbnA" name="PME_Trig1117" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2ShpwEr4Eem5FfKYTsIbnA" name="PME_Trig1118" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2SnwYEr4Eem5FfKYTsIbnA" name="PME_Trig1119" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_2SqzsEr4Eem5FfKYTsIbnA" name="PME_Trig1120" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2St3AEr4Eem5FfKYTsIbnA" name="PME_Trig1121" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_2SxhYEr4Eem5FfKYTsIbnA" name="PME_Trig1122" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2SyvgEr4Eem5FfKYTsIbnA" name="PME_Trig1123" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_2S1LwEr4Eem5FfKYTsIbnA" name="PME_Trig1124" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_2S75cEr4Eem5FfKYTsIbnA" name="PME_Trig1125" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_2S9uoEr4Eem5FfKYTsIbnA" name="PME_Trig1126" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_2TDOMEr4Eem5FfKYTsIbnA" name="PME_Trig1127" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_2TFqcEr4Eem5FfKYTsIbnA" name="PME_Trig1128" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_2TItwEr4Eem5FfKYTsIbnA" name="PME_Trig1129" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_2TM_MEr4Eem5FfKYTsIbnA" name="To__StandBY__1130" guard="_2zrPAUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_Q5-S4AlKEea_md0mpENoqg">
              <ownedRule xmi:id="_2zrPAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1599">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zrPAEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1599">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBY__1130&quot;,&quot;StandBY&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2TPbcEr4Eem5FfKYTsIbnA" name="To__ProcessResponse__1131" guard="_2zeasUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_uScfwAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_2zeasUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1590">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zeasEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1590">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ProcessResponse__1131&quot;,&quot;ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2TQpkEr4Eem5FfKYTsIbnA" name="To__Ready__1132" guard="_2zisIUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_IjppsAlhEea_md0mpENoqg">
              <ownedRule xmi:id="_2zisIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1594">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zisIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1594">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Ready__1132&quot;,&quot;Ready&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2TViEEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__Retry__1134" guard="_2zbXYUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2TTs4Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zbXYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1588">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zbXYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1588">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__1134&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2TaakUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__Retry__1136" source="_2TZMcEr4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2y5L4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2VI44Er4Eem5FfKYTsIbnA" name="Trans__ex1167" source="_tL1lIUrDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2yIW4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2VKHAUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__NoMaster__1169" guard="_2zlIYUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2VJf8Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zlIYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1595">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zlIYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1595">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__1169&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2VLVIUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__NoMaster__1171" source="_2VKuEEr4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ywpAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2Y9B4kr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__reqService__1249" guard="_2zpZ0Ur4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2Y9B4Er4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zpZ0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1596">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zpZ0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1596">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__1249&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2Y-QAUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__reqService__1251" source="_2Y9o8Er4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2yb44Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2a_pQEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__NoResponseFromServer__1283" guard="_2zheA0r4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2a6wwEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zheA0r4Eem5FfKYTsIbnA" name="PME_checkDecesion1593">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zheAkr4Eem5FfKYTsIbnA" name="PME_checkDecesion1593">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2bKBUEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__NoResponseFromServer__1285" source="_2bCskEr4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xmLYEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2i0vkEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__getMasterName__checkConfig__9__1341" guard="_2zheAUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2ixsQEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zheAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1592">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zheAEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1592">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2i6PIEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__getMasterName__checkConfig__9__1343" source="_2i3L0Er4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2zELAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2lsdYEr4Eem5FfKYTsIbnA" name="Trans__ex1374" source="_tQYt8ErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ypUQEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2l1AQEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ReqFlowDone__1376" guard="_2zg28Er4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2ltEcEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zg28Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1591">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zgP4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1591">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2l2OYUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ReqFlowDone__1378" source="_2l1nUEr4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xKtkEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2pq-cEr4Eem5FfKYTsIbnA" name="Trans__ex1433" source="_tNOsQUrDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2yProEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2psMkUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__ServiceResult__1435" guard="_2zqA4Ur4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2prlgEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zqA4Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1597">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zqA4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1597">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2py6QEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__ServiceResult__1437" source="_2puo0Er4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2zY7IEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2s21UEr4Eem5FfKYTsIbnA" name="Trans__ex1493" source="_tRYMcErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2yTWAEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2s4qgEr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__StarupTransition__1495" guard="_2zclgUr4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2s3cYEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zclgUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1589">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zclgEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1589">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2s-xIUr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__StarupTransition__1497" source="_2s7GwEr4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2zMt4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2ul6sEr4Eem5FfKYTsIbnA" name="Trans__ex1529" source="_tSUAkErDEem2BZRQc2M93A" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2zQ_UEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_2umhwkr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__reqFlowInit__1531" guard="_2zqn8Ur4Eem5FfKYTsIbnA" source="_2QDkkEr4Eem5FfKYTsIbnA" target="_2umhwEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_2zqn8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1598">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_2zqn8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1598">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_2uoW8Er4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__reqFlowInit__1533" source="_2unI0Er4Eem5FfKYTsIbnA" target="_2QDkkEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2xrD4Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__1134&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1495&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;ProcessResponse&quot;,&quot;To__ProcessResponse__1131&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__1376&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__1341&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__1283&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Ready&quot;,&quot;To__Ready__1132&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__1169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__1249&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__1435&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__1531&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1130&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_Q5-S4AlKEea_md0mpENoqg" name="StandBY">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYErDEem2BZRQc2M93A" name="StandBY__984">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYUrDEem2BZRQc2M93A" name="StandBY__985">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_IjppsAlhEea_md0mpENoqg" name="Ready">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_fmLpMAm5Eea_md0mpENoqg" name="ReadyEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU7PsErDEem2BZRQc2M93A" name="Ready__986">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_uScfwAmtEea_md0mpENoqg" name="ProcessResponse">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_u-x1UAoxEeaGqPUk-4V4qQ" name="ProcessMessage">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; : Processing Response .....\n&quot;;
    //int r=rand()%10;
    
    Timer.informIn(UMLRTTimespec(0,500),4);
    //messageID=messageID+1; 
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageProcessed,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUvpgErDEem2BZRQc2M93A" name="ProcessResponse__981">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_tL1lIUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2VJf8Er4Eem5FfKYTsIbnA" name="From__Parent__1168" kind="entryPoint"/>
              <connectionPoint xmi:id="_2VKuEEr4Eem5FfKYTsIbnA" name="To__Parent__1170" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMJHIUrDEem2BZRQc2M93A" name="Debug__Ac__NoMaster" source="_tMFcwUrDEem2BZRQc2M93A" target="_tMGq4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMUGQErDEem2BZRQc2M93A" name="Debug__Ac__NoMaster__755">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__Ac__NoMaster&quot;,(char *)&quot;Debug__B__Ac__NoMaster&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJHIkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMJuMErDEem2BZRQc2M93A" name="Debug__En__Retry" source="_tMGq4ErDEem2BZRQc2M93A" target="_tMH5AErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMJuMkrDEem2BZRQc2M93A" name="RetryConfig" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__En__Retry&quot;,(char *)&quot;Debug__A__Ac__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMJuMUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tMKVQErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster" source="_tMH5AErDEem2BZRQc2M93A" target="_tL1lIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMWigErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster__758">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__end__trans__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMKVQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2VW7UEr4Eem5FfKYTsIbnA" name="Trans__ex1174" source="_tL1lIUrDEem2BZRQc2M93A" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Y0fAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2VXiYEr4Eem5FfKYTsIbnA" name="Trans__Init__State__11731175" source="_2VTQ8Er4Eem5FfKYTsIbnA" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2YzQ4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1173&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1173&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1173&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1173&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1173&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2Ve3IEr4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__NoMaster__1176" source="_tMGq4ErDEem2BZRQc2M93A" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2YoRwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2VfeMEr4Eem5FfKYTsIbnA" name="PME_Trig1177" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Vh6cEr4Eem5FfKYTsIbnA" name="PME_Trig1178" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2VjIkEr4Eem5FfKYTsIbnA" name="PME_Trig1179" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2VooIEr4Eem5FfKYTsIbnA" name="PME_Trig1180" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2VrEYEr4Eem5FfKYTsIbnA" name="PME_Trig1181" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2VsSgEr4Eem5FfKYTsIbnA" name="PME_Trig1182" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2VuHsEr4Eem5FfKYTsIbnA" name="PME_Trig1183" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2V1ccEr4Eem5FfKYTsIbnA" name="PME_Trig1184" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2V3RoEr4Eem5FfKYTsIbnA" name="PME_Trig1185" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2V8xMEr4Eem5FfKYTsIbnA" name="PME_Trig1186" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2V9YQEr4Eem5FfKYTsIbnA" name="PME_Trig1187" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2WAbkEr4Eem5FfKYTsIbnA" name="PME_Trig1188" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2WFUEEr4Eem5FfKYTsIbnA" name="PME_Trig1189" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2WHJQEr4Eem5FfKYTsIbnA" name="PME_Trig1190" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2WI-cEr4Eem5FfKYTsIbnA" name="PME_Trig1191" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2WKzoEr4Eem5FfKYTsIbnA" name="PME_Trig1192" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2WQTMEr4Eem5FfKYTsIbnA" name="PME_Trig1193" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2WSIYEr4Eem5FfKYTsIbnA" name="PME_Trig1194" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2WVLsEr4Eem5FfKYTsIbnA" name="PME_Trig1195" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2WYPAEr4Eem5FfKYTsIbnA" name="PME_Trig1196" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2WcgcEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__NoMaster__1197" source="_tMH5AErDEem2BZRQc2M93A" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2YuYYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2WdHgEr4Eem5FfKYTsIbnA" name="PME_Trig1198" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2WiAAEr4Eem5FfKYTsIbnA" name="PME_Trig1199" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2WlqYEr4Eem5FfKYTsIbnA" name="PME_Trig1200" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2WotsEr4Eem5FfKYTsIbnA" name="PME_Trig1201" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2Wu0UEr4Eem5FfKYTsIbnA" name="PME_Trig1202" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2WwpgEr4Eem5FfKYTsIbnA" name="PME_Trig1203" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2Wzs0Er4Eem5FfKYTsIbnA" name="PME_Trig1204" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2W5MYEr4Eem5FfKYTsIbnA" name="PME_Trig1205" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2W6agEr4Eem5FfKYTsIbnA" name="PME_Trig1206" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2W9d0Er4Eem5FfKYTsIbnA" name="PME_Trig1207" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2XCWUEr4Eem5FfKYTsIbnA" name="PME_Trig1208" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2XDkcEr4Eem5FfKYTsIbnA" name="PME_Trig1209" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2XH14Er4Eem5FfKYTsIbnA" name="PME_Trig1210" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2XNVcEr4Eem5FfKYTsIbnA" name="PME_Trig1211" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2XPKoEr4Eem5FfKYTsIbnA" name="PME_Trig1212" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2XQ_0Er4Eem5FfKYTsIbnA" name="PME_Trig1213" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2XVRQEr4Eem5FfKYTsIbnA" name="PME_Trig1214" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2XY7oEr4Eem5FfKYTsIbnA" name="PME_Trig1215" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2Xb-8Er4Eem5FfKYTsIbnA" name="PME_Trig1216" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Xg3cEr4Eem5FfKYTsIbnA" name="PME_Trig1217" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2XiFkEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__NoMaster__1218" source="_tMFcwUrDEem2BZRQc2M93A" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2YhkEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2XisoEr4Eem5FfKYTsIbnA" name="PME_Trig1219" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2XlI4Er4Eem5FfKYTsIbnA" name="PME_Trig1220" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2Xm-EEr4Eem5FfKYTsIbnA" name="PME_Trig1221" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2XtEsEr4Eem5FfKYTsIbnA" name="PME_Trig1222" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2XwIAEr4Eem5FfKYTsIbnA" name="PME_Trig1223" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2XxWIEr4Eem5FfKYTsIbnA" name="PME_Trig1224" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2XzyYEr4Eem5FfKYTsIbnA" name="PME_Trig1225" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2X3cwEr4Eem5FfKYTsIbnA" name="PME_Trig1226" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2X4q4Er4Eem5FfKYTsIbnA" name="PME_Trig1227" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2X7HIEr4Eem5FfKYTsIbnA" name="PME_Trig1228" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2X__oEr4Eem5FfKYTsIbnA" name="PME_Trig1229" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2YBNwEr4Eem5FfKYTsIbnA" name="PME_Trig1230" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2YB00Er4Eem5FfKYTsIbnA" name="PME_Trig1231" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2YEREEr4Eem5FfKYTsIbnA" name="PME_Trig1232" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2YGtUEr4Eem5FfKYTsIbnA" name="PME_Trig1233" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2YNbAEr4Eem5FfKYTsIbnA" name="PME_Trig1234" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2YPQMEr4Eem5FfKYTsIbnA" name="PME_Trig1235" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2YUvwEr4Eem5FfKYTsIbnA" name="PME_Trig1236" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2YV94Er4Eem5FfKYTsIbnA" name="PME_Trig1237" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2YXzEEr4Eem5FfKYTsIbnA" name="PME_Trig1238" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2YZoQEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__NoMaster__1239" guard="_2Y27QUr4Eem5FfKYTsIbnA" source="_2VNKUEr4Eem5FfKYTsIbnA" target="_tMGq4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2Y27QUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1245">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Y27QEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1245">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoMaster__1239&quot;,&quot;Debug__A__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2YaPUEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__NoMaster__1240" guard="_2Y1GEUr4Eem5FfKYTsIbnA" source="_2VNKUEr4Eem5FfKYTsIbnA" target="_tMH5AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2Y1GEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1244">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Y1GEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1244">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__NoMaster__1240&quot;,&quot;Debug__A__En__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2Ya2YEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__NoMaster__1241" guard="_2Y7zwUr4Eem5FfKYTsIbnA" source="_2VNKUEr4Eem5FfKYTsIbnA" target="_tMFcwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2Y7zwUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1247">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Y7zwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1247">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoMaster__1241&quot;,&quot;Debug__B__Ac__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2YfH0Er4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1242" source="_2VJf8Er4Eem5FfKYTsIbnA" target="_2VNKUEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2Yr8IEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__1240&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__Ac__NoMaster&quot;,&quot;To__Debug__A__Ac__NoMaster__1239&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__1243&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__B__Ac__NoMaster&quot;,&quot;To__Debug__B__Ac__NoMaster__1241&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2Yfu4Er4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1243" guard="_2Y5XgUr4Eem5FfKYTsIbnA" source="_2VNKUEr4Eem5FfKYTsIbnA" target="_2VKuEEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2Y5XgUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1246">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Y5XgEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1246">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1243&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMFcwUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMFcwkrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMLjYUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoMaster__749">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__B__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMGq4ErDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMGq4UrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMN_oUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoMaster__750">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__Ac__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMH5AErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMIgEErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMRC8UrDEem2BZRQc2M93A" name="Debug__A__En__NoMaster__751">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2VNKUEr4Eem5FfKYTsIbnA" name="DecesionPoint__1172" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2VTQ8Er4Eem5FfKYTsIbnA" name="Init__State__1173"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tMY-wErDEem2BZRQc2M93A" name="Debug__Path__Retry" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_2TTs4Er4Eem5FfKYTsIbnA" name="From__Parent__1133" kind="entryPoint"/>
              <connectionPoint xmi:id="_2TZMcEr4Eem5FfKYTsIbnA" name="To__Parent__1135" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_2TkLkEr4Eem5FfKYTsIbnA" name="Trans__Init__State__11381139" source="_2TesAEr4Eem5FfKYTsIbnA" target="_2TbosEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2U6PYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1138&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__1162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1138&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__1164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1138&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2TnO4Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__Retry__1140" source="_tMuV8ErDEem2BZRQc2M93A" target="_2TbosEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2VAWAEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__1162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__1164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2TodAEr4Eem5FfKYTsIbnA" name="PME_Trig1141" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Tt8kEr4Eem5FfKYTsIbnA" name="PME_Trig1142" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2TwY0Er4Eem5FfKYTsIbnA" name="PME_Trig1143" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Ty1EEr4Eem5FfKYTsIbnA" name="PME_Trig1144" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2T47sEr4Eem5FfKYTsIbnA" name="PME_Trig1145" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2T8mEEr4Eem5FfKYTsIbnA" name="PME_Trig1146" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2UCFoEr4Eem5FfKYTsIbnA" name="PME_Trig1147" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2UDTwEr4Eem5FfKYTsIbnA" name="PME_Trig1148" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2UGXEEr4Eem5FfKYTsIbnA" name="PME_Trig1149" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ULPkEr4Eem5FfKYTsIbnA" name="PME_Trig1150" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2UNEwEr4Eem5FfKYTsIbnA" name="PME_Trig1151" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2UOS4Er4Eem5FfKYTsIbnA" name="PME_Trig1152" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2UQvIEr4Eem5FfKYTsIbnA" name="PME_Trig1153" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2UTLYEr4Eem5FfKYTsIbnA" name="PME_Trig1154" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2UagIEr4Eem5FfKYTsIbnA" name="PME_Trig1155" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2UeKgEr4Eem5FfKYTsIbnA" name="PME_Trig1156" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2UhN0Er4Eem5FfKYTsIbnA" name="PME_Trig1157" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2UjDAEr4Eem5FfKYTsIbnA" name="PME_Trig1158" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2UlfQEr4Eem5FfKYTsIbnA" name="PME_Trig1159" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2UmtYEr4Eem5FfKYTsIbnA" name="PME_Trig1160" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2UsM8Er4Eem5FfKYTsIbnA" name="PME_Trig1161" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2UvQQEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__Retry__1162" guard="_2VAWAkr4Eem5FfKYTsIbnA" source="_2TbosEr4Eem5FfKYTsIbnA" target="_tMuV8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2VAWAkr4Eem5FfKYTsIbnA" name="PME_checkDecesion1165">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2VAWAUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1165">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Retry__1162&quot;,&quot;Debug__B__Ac__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2U1W4Er4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1163" source="_2TTs4Er4Eem5FfKYTsIbnA" target="_2TbosEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2U5BQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ac__Retry&quot;,&quot;To__Debug__B__Ac__Retry__1162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__1164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2U198Er4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1164" guard="_2VEAYUr4Eem5FfKYTsIbnA" source="_2TbosEr4Eem5FfKYTsIbnA" target="_2TZMcEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2VEAYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1166">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2VEAYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1166">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1164&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMuV8ErDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMuV8UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM3f4UrDEem2BZRQc2M93A" name="Debug__B__Ac__Retry__774">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ac__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2TbosEr4Eem5FfKYTsIbnA" name="DecesionPoint__1137" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2TesAEr4Eem5FfKYTsIbnA" name="Init__State__1138"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tNLo8ErDEem2BZRQc2M93A" name="Debug__Path__ServiceResult" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_tNOFMErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tNOsQUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2prlgEr4Eem5FfKYTsIbnA" name="From__Parent__1434" kind="entryPoint"/>
              <connectionPoint xmi:id="_2puo0Er4Eem5FfKYTsIbnA" name="To__Parent__1436" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tNnt0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult" source="_tNOFMErDEem2BZRQc2M93A" target="_tNiOQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tN6BsErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult__805">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__init__trans__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2p_ukEr4Eem5FfKYTsIbnA" name="Trans__ex1440" source="_tNOsQUrDEem2BZRQc2M93A" target="_2p0vcEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2sisQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1489&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2qAVoEr4Eem5FfKYTsIbnA" name="Trans__Init__State__14391441" source="_2p4Z0Er4Eem5FfKYTsIbnA" target="_2p0vcEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2s0ZEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1439&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1489&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1439&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1439&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1439&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2qDY8Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__WaitingForReply__1442" source="_tNiOQUrDEem2BZRQc2M93A" target="_2p0vcEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2slIgEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1489&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2qGcQEr4Eem5FfKYTsIbnA" name="PME_Trig1443" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2qI4gEr4Eem5FfKYTsIbnA" name="PME_Trig1444" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2qKGoEr4Eem5FfKYTsIbnA" name="PME_Trig1445" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2qMi4Er4Eem5FfKYTsIbnA" name="PME_Trig1446" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2qUesEr4Eem5FfKYTsIbnA" name="PME_Trig1447" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2qXiAEr4Eem5FfKYTsIbnA" name="PME_Trig1448" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2qdBkEr4Eem5FfKYTsIbnA" name="PME_Trig1449" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2qePsEr4Eem5FfKYTsIbnA" name="PME_Trig1450" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2qhTAEr4Eem5FfKYTsIbnA" name="PME_Trig1451" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2qoAsEr4Eem5FfKYTsIbnA" name="PME_Trig1452" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2qp14Er4Eem5FfKYTsIbnA" name="PME_Trig1453" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2qsSIEr4Eem5FfKYTsIbnA" name="PME_Trig1454" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2qyYwEr4Eem5FfKYTsIbnA" name="PME_Trig1455" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2q1cEEr4Eem5FfKYTsIbnA" name="PME_Trig1456" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2q6UkEr4Eem5FfKYTsIbnA" name="PME_Trig1457" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2q7isEr4Eem5FfKYTsIbnA" name="PME_Trig1458" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2q9X4Er4Eem5FfKYTsIbnA" name="PME_Trig1459" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2rBCQEr4Eem5FfKYTsIbnA" name="PME_Trig1460" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2rF6wEr4Eem5FfKYTsIbnA" name="PME_Trig1461" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2rHI4Er4Eem5FfKYTsIbnA" name="PME_Trig1462" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2rKMMEr4Eem5FfKYTsIbnA" name="PME_Trig1463" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2rQ54Er4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__ServiceResult__1464" source="_tNkqgErDEem2BZRQc2M93A" target="_2p0vcEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2srPIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1489&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2rT9MEr4Eem5FfKYTsIbnA" name="PME_Trig1465" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2raD0Er4Eem5FfKYTsIbnA" name="PME_Trig1466" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2rbR8Er4Eem5FfKYTsIbnA" name="PME_Trig1467" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2rduMEr4Eem5FfKYTsIbnA" name="PME_Trig1468" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2rh_oEr4Eem5FfKYTsIbnA" name="PME_Trig1469" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2rkb4Er4Eem5FfKYTsIbnA" name="PME_Trig1470" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2rlqAEr4Eem5FfKYTsIbnA" name="PME_Trig1471" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2rm4IEr4Eem5FfKYTsIbnA" name="PME_Trig1472" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2rqigEr4Eem5FfKYTsIbnA" name="PME_Trig1473" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2rvbAEr4Eem5FfKYTsIbnA" name="PME_Trig1474" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2rzFYEr4Eem5FfKYTsIbnA" name="PME_Trig1475" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2r4k8Er4Eem5FfKYTsIbnA" name="PME_Trig1476" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2r5zEEr4Eem5FfKYTsIbnA" name="PME_Trig1477" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2r9dcEr4Eem5FfKYTsIbnA" name="PME_Trig1478" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2sCV8Er4Eem5FfKYTsIbnA" name="PME_Trig1479" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2sC9AEr4Eem5FfKYTsIbnA" name="PME_Trig1480" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2sEyMEr4Eem5FfKYTsIbnA" name="PME_Trig1481" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2sJqsEr4Eem5FfKYTsIbnA" name="PME_Trig1482" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2sN8IEr4Eem5FfKYTsIbnA" name="PME_Trig1483" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2sQ_cEr4Eem5FfKYTsIbnA" name="PME_Trig1484" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2sXGEEr4Eem5FfKYTsIbnA" name="PME_Trig1485" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2sZiUEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__WaitingForReply__1486" guard="_2s2OQUr4Eem5FfKYTsIbnA" source="_2p0vcEr4Eem5FfKYTsIbnA" target="_tNiOQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2s2OQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1492">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2s2OQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1492">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2sbXgEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__ServiceResult__1487" guard="_2s1nMUr4Eem5FfKYTsIbnA" source="_2p0vcEr4Eem5FfKYTsIbnA" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2s1nMUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1491">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2s1nMEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1491">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2sgQAEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1488" source="_2prlgEr4Eem5FfKYTsIbnA" target="_2p0vcEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2strYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__1489&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__1487&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__1486&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2sg3EEr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1489" guard="_2s1AIUr4Eem5FfKYTsIbnA" source="_2p0vcEr4Eem5FfKYTsIbnA" target="_2puo0Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2s1AIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1490">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2s1AIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1490">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1489&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNiOQUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNiOQkrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNtNYUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__800">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2p0vcEr4Eem5FfKYTsIbnA" name="DecesionPoint__1438" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2p4Z0Er4Eem5FfKYTsIbnA" name="Init__State__1439"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_2Y9B4Er4Eem5FfKYTsIbnA" name="From__Parent__1248" kind="entryPoint"/>
              <connectionPoint xmi:id="_2Y9o8Er4Eem5FfKYTsIbnA" name="To__Parent__1250" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_2ZIBAEr4Eem5FfKYTsIbnA" name="Trans__Init__State__12531254" source="_2ZBTUEr4Eem5FfKYTsIbnA" target="_2Y-3EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2aoc4Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1253&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1253&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__1279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1253&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2ZJPIEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__reqService__1255" source="_tO2c4ErDEem2BZRQc2M93A" target="_2Y-3EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2aO0QEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__1279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2ZLEUEr4Eem5FfKYTsIbnA" name="PME_Trig1256" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ZOHoEr4Eem5FfKYTsIbnA" name="PME_Trig1257" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2ZTAIEr4Eem5FfKYTsIbnA" name="PME_Trig1258" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ZVcYEr4Eem5FfKYTsIbnA" name="PME_Trig1259" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2ZWqgEr4Eem5FfKYTsIbnA" name="PME_Trig1260" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ZXRkEr4Eem5FfKYTsIbnA" name="PME_Trig1261" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ZZGwEr4Eem5FfKYTsIbnA" name="PME_Trig1262" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ZdYMEr4Eem5FfKYTsIbnA" name="PME_Trig1263" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2Zf0cEr4Eem5FfKYTsIbnA" name="PME_Trig1264" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Zks8Er4Eem5FfKYTsIbnA" name="PME_Trig1265" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2ZnJMEr4Eem5FfKYTsIbnA" name="PME_Trig1266" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2ZqMgEr4Eem5FfKYTsIbnA" name="PME_Trig1267" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ZtP0Er4Eem5FfKYTsIbnA" name="PME_Trig1268" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2ZwTIEr4Eem5FfKYTsIbnA" name="PME_Trig1269" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ZxhQEr4Eem5FfKYTsIbnA" name="PME_Trig1270" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2ZzWcEr4Eem5FfKYTsIbnA" name="PME_Trig1271" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2Z4O8Er4Eem5FfKYTsIbnA" name="PME_Trig1272" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2Z6rMEr4Eem5FfKYTsIbnA" name="PME_Trig1273" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2Z75UEr4Eem5FfKYTsIbnA" name="PME_Trig1274" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2Z9HcEr4Eem5FfKYTsIbnA" name="PME_Trig1275" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2Z-8oEr4Eem5FfKYTsIbnA" name="PME_Trig1276" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2aAx0Er4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__reqService__1277" guard="_2asuUUr4Eem5FfKYTsIbnA" source="_2Y-3EEr4Eem5FfKYTsIbnA" target="_tO2c4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2asuUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1280">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2asuUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1280">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__reqService__1277&quot;,&quot;Debug__B__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2aB_8Er4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1278" source="_2Y9B4Er4Eem5FfKYTsIbnA" target="_2Y-3EEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2aaacEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__B__Ac__reqService&quot;,&quot;To__Debug__B__Ac__reqService__1277&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__1279&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2aCnAEr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1279" guard="_2a2fUUr4Eem5FfKYTsIbnA" source="_2Y-3EEr4Eem5FfKYTsIbnA" target="_2Y9o8Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2a2fUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1281">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2a2fUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1281">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1279&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO2c4ErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO2c4UrDEem2BZRQc2M93A" name="Debug__B__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO7VYErDEem2BZRQc2M93A" name="Debug__B__Ac__reqService__824">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__B__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2Y-3EEr4Eem5FfKYTsIbnA" name="DecesionPoint__1252" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2ZBTUEr4Eem5FfKYTsIbnA" name="Init__State__1253"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tPKl8UrDEem2BZRQc2M93A" name="Debug__C__getMasterName__checkConfig__9">
              <connectionPoint xmi:id="_2ixsQEr4Eem5FfKYTsIbnA" name="From__Parent__1340" kind="entryPoint"/>
              <connectionPoint xmi:id="_2i3L0Er4Eem5FfKYTsIbnA" name="To__Parent__1342" kind="exitPoint"/>
              <region xmi:id="_tPKl8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_2jNxIEr4Eem5FfKYTsIbnA" name="Trans__Init__State__13451346" source="_2jCK8Er4Eem5FfKYTsIbnA" target="_2i8rYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2lXGMEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1345&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__1371&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1345&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__1369&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1345&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2jSCkEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__getMasterName__checkConfig__9__1347" source="_tPeH8ErDEem2BZRQc2M93A" target="_2i8rYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ljTcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__1371&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__1369&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2jYJMEr4Eem5FfKYTsIbnA" name="PME_Trig1348" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2jfd8Er4Eem5FfKYTsIbnA" name="PME_Trig1349" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2jsSQEr4Eem5FfKYTsIbnA" name="PME_Trig1350" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2jy_8Er4Eem5FfKYTsIbnA" name="PME_Trig1351" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2kCQgEr4Eem5FfKYTsIbnA" name="PME_Trig1352" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2kHwEEr4Eem5FfKYTsIbnA" name="PME_Trig1353" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2kPr4Er4Eem5FfKYTsIbnA" name="PME_Trig1354" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2kRhEEr4Eem5FfKYTsIbnA" name="PME_Trig1355" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2kSvMEr4Eem5FfKYTsIbnA" name="PME_Trig1356" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2kaD8Er4Eem5FfKYTsIbnA" name="PME_Trig1357" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2kbSEEr4Eem5FfKYTsIbnA" name="PME_Trig1358" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2keVYEr4Eem5FfKYTsIbnA" name="PME_Trig1359" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2kfjgEr4Eem5FfKYTsIbnA" name="PME_Trig1360" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2klqIEr4Eem5FfKYTsIbnA" name="PME_Trig1361" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2kotcEr4Eem5FfKYTsIbnA" name="PME_Trig1362" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2kuNAEr4Eem5FfKYTsIbnA" name="PME_Trig1363" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2kzFgEr4Eem5FfKYTsIbnA" name="PME_Trig1364" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2k5MIEr4Eem5FfKYTsIbnA" name="PME_Trig1365" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2k6aQEr4Eem5FfKYTsIbnA" name="PME_Trig1366" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2lCWEEr4Eem5FfKYTsIbnA" name="PME_Trig1367" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2lELQEr4Eem5FfKYTsIbnA" name="PME_Trig1368" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2lMuIEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__getMasterName__checkConfig__9__1369" guard="_2lqBIUr4Eem5FfKYTsIbnA" source="_2i8rYEr4Eem5FfKYTsIbnA" target="_tPeH8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2lqBIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1373">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2lqBIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1373">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__1369&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2lOjUEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1370" source="_2ixsQEr4Eem5FfKYTsIbnA" target="_2i8rYEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2lawkEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__1371&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__B__Ac__getMasterName__checkConfig__9__1369&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2lOjUUr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1371" guard="_2llvsUr4Eem5FfKYTsIbnA" source="_2i8rYEr4Eem5FfKYTsIbnA" target="_2i3L0Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2llvsUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1372">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2llvsEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1372">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1371&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tPeH8ErDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPeH8UrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPk1oUrDEem2BZRQc2M93A" name="Debug__B__Ac__getMasterName__checkConfig__9__847">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2i8rYEr4Eem5FfKYTsIbnA" name="DecesionPoint__1344" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2jCK8Er4Eem5FfKYTsIbnA" name="Init__State__1345"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_tQYt8ErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2ltEcEr4Eem5FfKYTsIbnA" name="From__Parent__1375" kind="entryPoint"/>
              <connectionPoint xmi:id="_2l1nUEr4Eem5FfKYTsIbnA" name="To__Parent__1377" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQ2oAErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone" source="_tQy9oErDEem2BZRQc2M93A" target="_tQYt8ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRQQoErDEem2BZRQc2M93A" name="Debug__end__trans__ReqFlowDone__903">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__end__trans__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2oAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2md5cEr4Eem5FfKYTsIbnA" name="Trans__ex1381" source="_tQYt8ErDEem2BZRQc2M93A" target="_2l3cgEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2phNcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__1429&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2meggEr4Eem5FfKYTsIbnA" name="Trans__Init__State__13801382" source="_2mLlkEr4Eem5FfKYTsIbnA" target="_2l3cgEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2pk30Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1380&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1380&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__1429&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1380&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1380&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2mqtwEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__ProcessResponse__1383" source="_tQvTQUrDEem2BZRQc2M93A" target="_2l3cgEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2pZ4sEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__1429&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ProcessResponse&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2msi8Er4Eem5FfKYTsIbnA" name="PME_Trig1384" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2mz3sEr4Eem5FfKYTsIbnA" name="PME_Trig1385" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2m3iEEr4Eem5FfKYTsIbnA" name="PME_Trig1386" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2m-20Er4Eem5FfKYTsIbnA" name="PME_Trig1387" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2nGLkEr4Eem5FfKYTsIbnA" name="PME_Trig1388" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2nIAwEr4Eem5FfKYTsIbnA" name="PME_Trig1389" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2nJ18Er4Eem5FfKYTsIbnA" name="PME_Trig1390" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2nRxwEr4Eem5FfKYTsIbnA" name="PME_Trig1391" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2nS_4Er4Eem5FfKYTsIbnA" name="PME_Trig1392" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2nbiwEr4Eem5FfKYTsIbnA" name="PME_Trig1393" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2nfNIEr4Eem5FfKYTsIbnA" name="PME_Trig1394" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2nl60Er4Eem5FfKYTsIbnA" name="PME_Trig1395" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2nnI8Er4Eem5FfKYTsIbnA" name="PME_Trig1396" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2nqMQEr4Eem5FfKYTsIbnA" name="PME_Trig1397" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2nvEwEr4Eem5FfKYTsIbnA" name="PME_Trig1398" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2nwS4Er4Eem5FfKYTsIbnA" name="PME_Trig1399" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2nxhAEr4Eem5FfKYTsIbnA" name="PME_Trig1400" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2nz9QEr4Eem5FfKYTsIbnA" name="PME_Trig1401" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2n3noEr4Eem5FfKYTsIbnA" name="PME_Trig1402" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2n7SAEr4Eem5FfKYTsIbnA" name="PME_Trig1403" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2oPbEEr4Eem5FfKYTsIbnA" name="PME_Trig1404" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2oQpMEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Ready__1405" source="_tQy9oErDEem2BZRQc2M93A" target="_2l3cgEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2pf_UEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__1429&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2oRQQEr4Eem5FfKYTsIbnA" name="PME_Trig1406" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2oTFcEr4Eem5FfKYTsIbnA" name="PME_Trig1407" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2oZMEEr4Eem5FfKYTsIbnA" name="PME_Trig1408" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ocPYEr4Eem5FfKYTsIbnA" name="PME_Trig1409" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2of5wEr4Eem5FfKYTsIbnA" name="PME_Trig1410" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2oi9EEr4Eem5FfKYTsIbnA" name="PME_Trig1411" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ojkIEr4Eem5FfKYTsIbnA" name="PME_Trig1412" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2okyQEr4Eem5FfKYTsIbnA" name="PME_Trig1413" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2omAYEr4Eem5FfKYTsIbnA" name="PME_Trig1414" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2oq44Er4Eem5FfKYTsIbnA" name="PME_Trig1415" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2otVIEr4Eem5FfKYTsIbnA" name="PME_Trig1416" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2oujQEr4Eem5FfKYTsIbnA" name="PME_Trig1417" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ow_gEr4Eem5FfKYTsIbnA" name="PME_Trig1418" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2o7XkEr4Eem5FfKYTsIbnA" name="PME_Trig1419" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2pBeMEr4Eem5FfKYTsIbnA" name="PME_Trig1420" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2pCFQEr4Eem5FfKYTsIbnA" name="PME_Trig1421" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2pDTYEr4Eem5FfKYTsIbnA" name="PME_Trig1422" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2pFvoEr4Eem5FfKYTsIbnA" name="PME_Trig1423" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2pKBEEr4Eem5FfKYTsIbnA" name="PME_Trig1424" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2pL2QEr4Eem5FfKYTsIbnA" name="PME_Trig1425" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2pNEYEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__ProcessResponse__1426" guard="_2ppwUUr4Eem5FfKYTsIbnA" source="_2l3cgEr4Eem5FfKYTsIbnA" target="_tQvTQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2ppwUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1432">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ppwUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1432">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2pNrcEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Ready__1427" guard="_2pmF8Ur4Eem5FfKYTsIbnA" source="_2l3cgEr4Eem5FfKYTsIbnA" target="_tQy9oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2pmF8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1430">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2pmF8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1430">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__1427&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2pVAMEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1428" source="_2ltEcEr4Eem5FfKYTsIbnA" target="_2l3cgEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2peKIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__1429&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__B__Ex__ProcessResponse&quot;,&quot;To__Debug__B__Ex__ProcessResponse__1426&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2pVnQEr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1429" guard="_2ppJQUr4Eem5FfKYTsIbnA" source="_2l3cgEr4Eem5FfKYTsIbnA" target="_2l1nUEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2ppJQUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1431">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ppJQEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1431">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1429&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQvTQUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQvTQkrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQ32IUrDEem2BZRQc2M93A" name="Debug__B__Ex__ProcessResponse__892">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__B__Ex__ProcessResponse&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQy9oErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQzksErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRC1QErDEem2BZRQc2M93A" name="Debug__A__En__Ready__895">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2l3cgEr4Eem5FfKYTsIbnA" name="DecesionPoint__1379" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2mLlkEr4Eem5FfKYTsIbnA" name="Init__State__1380"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_tRVwMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tRYMcErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2s3cYEr4Eem5FfKYTsIbnA" name="From__Parent__1494" kind="entryPoint"/>
              <connectionPoint xmi:id="_2s7GwEr4Eem5FfKYTsIbnA" name="To__Parent__1496" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tR6X8ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition" source="_tR2GgErDEem2BZRQc2M93A" target="_tRYMcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSMr0ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition__928">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__end__trans__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR6X8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2tB0cEr4Eem5FfKYTsIbnA" name="Trans__ex1500" source="_tRYMcErDEem2BZRQc2M93A" target="_2s__QEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ua7kEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__1526&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2tCbgEr4Eem5FfKYTsIbnA" name="Trans__Init__State__14991501" source="_2tAmUEr4Eem5FfKYTsIbnA" target="_2s__QEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ucJsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1499&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1499&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__1526&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1499&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2tCbgUr4Eem5FfKYTsIbnA" name="Trans__en1502" source="_tRVwMUrDEem2BZRQc2M93A" target="_2s__QEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ucwwEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__1526&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2tKXUEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__Ready__1503" source="_tR2GgErDEem2BZRQc2M93A" target="_2s__QEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2uel8Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__1526&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2tMMgEr4Eem5FfKYTsIbnA" name="PME_Trig1504" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2tOowEr4Eem5FfKYTsIbnA" name="PME_Trig1505" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2tUIUEr4Eem5FfKYTsIbnA" name="PME_Trig1506" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2tV9gEr4Eem5FfKYTsIbnA" name="PME_Trig1507" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2taO8Er4Eem5FfKYTsIbnA" name="PME_Trig1508" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2tfHcEr4Eem5FfKYTsIbnA" name="PME_Trig1509" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2tgVkEr4Eem5FfKYTsIbnA" name="PME_Trig1510" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2tj_8Er4Eem5FfKYTsIbnA" name="PME_Trig1511" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2tqGkEr4Eem5FfKYTsIbnA" name="PME_Trig1512" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2tu_EEr4Eem5FfKYTsIbnA" name="PME_Trig1513" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2typcEr4Eem5FfKYTsIbnA" name="PME_Trig1514" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2t0eoEr4Eem5FfKYTsIbnA" name="PME_Trig1515" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2t3h8Er4Eem5FfKYTsIbnA" name="PME_Trig1516" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2t7zYEr4Eem5FfKYTsIbnA" name="PME_Trig1517" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2t-2sEr4Eem5FfKYTsIbnA" name="PME_Trig1518" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2uAr4Er4Eem5FfKYTsIbnA" name="PME_Trig1519" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2uHZkEr4Eem5FfKYTsIbnA" name="PME_Trig1520" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2uJOwEr4Eem5FfKYTsIbnA" name="PME_Trig1521" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2uM5IEr4Eem5FfKYTsIbnA" name="PME_Trig1522" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2uQjgEr4Eem5FfKYTsIbnA" name="PME_Trig1523" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2uRxoEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__Ready__1524" guard="_2ugbIUr4Eem5FfKYTsIbnA" source="_2s__QEr4Eem5FfKYTsIbnA" target="_tR2GgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2ugbIUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1527">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ugbIEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1527">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__1524&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2uS_wEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1525" source="_2s3cYEr4Eem5FfKYTsIbnA" target="_2s__QEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2uWDEEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__1524&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__1526&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2uS_wUr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1526" guard="_2ulToUr4Eem5FfKYTsIbnA" source="_2s__QEr4Eem5FfKYTsIbnA" target="_2s7GwEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2ulToUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1528">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2ulToEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1528">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1526&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tR2GgErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR2tkErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSEI8ErDEem2BZRQc2M93A" name="Debug__A__En__Ready__920">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2s__QEr4Eem5FfKYTsIbnA" name="DecesionPoint__1498" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2tAmUEr4Eem5FfKYTsIbnA" name="Init__State__1499"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tSQ9QErDEem2BZRQc2M93A" name="Debug__Path__reqFlowInit" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tSRkUUrDEem2BZRQc2M93A" name="Debug__C__reqFlowInit">
              <connectionPoint xmi:id="_tSSycUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tSUAkErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_2umhwEr4Eem5FfKYTsIbnA" name="From__Parent__1530" kind="entryPoint"/>
              <connectionPoint xmi:id="_2unI0Er4Eem5FfKYTsIbnA" name="To__Parent__1532" kind="exitPoint"/>
              <region xmi:id="_tSRkUkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tSuQQErDEem2BZRQc2M93A" name="Debug__init__trans__reqFlowInit" source="_tSSycUrDEem2BZRQc2M93A" target="_tSpXwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS5PYErDEem2BZRQc2M93A" name="Debug__init__trans__reqFlowInit__947">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__init__trans__reqFlowInit&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tSwFcErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit" source="_tStCIErDEem2BZRQc2M93A" target="_tSUAkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS_WAErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit__954">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__end__trans__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSwFcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2uvEoEr4Eem5FfKYTsIbnA" name="Trans__Init__State__15351536" source="_2utPcEr4Eem5FfKYTsIbnA" target="_2uplEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2wsMcEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__1581&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1582&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1535&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1584&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1535&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2uvrsEr4Eem5FfKYTsIbnA" name="Trans__ex1537" source="_tSUAkErDEem2BZRQc2M93A" target="_2uplEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2wv20Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__1581&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1582&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1584&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2uxg4Er4Eem5FfKYTsIbnA" name="From__Debug__A__En__getMasterName__1538" source="_tStCIErDEem2BZRQc2M93A" target="_2uplEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2wq-UEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__1581&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1582&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1584&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2uz9IEr4Eem5FfKYTsIbnA" name="PME_Trig1539" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2u41oEr4Eem5FfKYTsIbnA" name="PME_Trig1540" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2u6DwEr4Eem5FfKYTsIbnA" name="PME_Trig1541" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2u6q0Er4Eem5FfKYTsIbnA" name="PME_Trig1542" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2u8gAEr4Eem5FfKYTsIbnA" name="PME_Trig1543" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vEb0Er4Eem5FfKYTsIbnA" name="PME_Trig1544" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2vFp8Er4Eem5FfKYTsIbnA" name="PME_Trig1545" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vIGMEr4Eem5FfKYTsIbnA" name="PME_Trig1546" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2vKicEr4Eem5FfKYTsIbnA" name="PME_Trig1547" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vOz4Er4Eem5FfKYTsIbnA" name="PME_Trig1548" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2vRQIEr4Eem5FfKYTsIbnA" name="PME_Trig1549" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2vVhkEr4Eem5FfKYTsIbnA" name="PME_Trig1550" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2vYk4Er4Eem5FfKYTsIbnA" name="PME_Trig1551" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2vZzAEr4Eem5FfKYTsIbnA" name="PME_Trig1552" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vaaEEr4Eem5FfKYTsIbnA" name="PME_Trig1553" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2vboMEr4Eem5FfKYTsIbnA" name="PME_Trig1554" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2vi88Er4Eem5FfKYTsIbnA" name="PME_Trig1555" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2vkLEEr4Eem5FfKYTsIbnA" name="PME_Trig1556" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2vlZMEr4Eem5FfKYTsIbnA" name="PME_Trig1557" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vq4wEr4Eem5FfKYTsIbnA" name="PME_Trig1558" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2vst8Er4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__Ready__1559" source="_tSpXwUrDEem2BZRQc2M93A" target="_2uplEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2w0vUEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__1581&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1582&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Ready&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1584&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2vst8Ur4Eem5FfKYTsIbnA" name="PME_Trig1560" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vt8EEr4Eem5FfKYTsIbnA" name="PME_Trig1561" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2vvxQEr4Eem5FfKYTsIbnA" name="PME_Trig1562" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2vyNgEr4Eem5FfKYTsIbnA" name="PME_Trig1563" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2v2e8Er4Eem5FfKYTsIbnA" name="PME_Trig1564" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2v3tEEr4Eem5FfKYTsIbnA" name="PME_Trig1565" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2v4UIEr4Eem5FfKYTsIbnA" name="PME_Trig1566" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2v6JUEr4Eem5FfKYTsIbnA" name="PME_Trig1567" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2wAP8Er4Eem5FfKYTsIbnA" name="PME_Trig1568" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2wCsMEr4Eem5FfKYTsIbnA" name="PME_Trig1569" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2wFIcEr4Eem5FfKYTsIbnA" name="PME_Trig1570" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2wJZ4Er4Eem5FfKYTsIbnA" name="PME_Trig1571" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2wLPEEr4Eem5FfKYTsIbnA" name="PME_Trig1572" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2wL2IEr4Eem5FfKYTsIbnA" name="PME_Trig1573" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2wNEQEr4Eem5FfKYTsIbnA" name="PME_Trig1574" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2wQHkEr4Eem5FfKYTsIbnA" name="PME_Trig1575" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2wVAEEr4Eem5FfKYTsIbnA" name="PME_Trig1576" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2wWOMEr4Eem5FfKYTsIbnA" name="PME_Trig1577" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2wW1QEr4Eem5FfKYTsIbnA" name="PME_Trig1578" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2wYDYEr4Eem5FfKYTsIbnA" name="PME_Trig1579" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2wf_MEr4Eem5FfKYTsIbnA" name="PME_Trig1580" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2wnT8Er4Eem5FfKYTsIbnA" name="To__Debug__A__En__getMasterName__1581" guard="_2w1WYUr4Eem5FfKYTsIbnA" source="_2uplEEr4Eem5FfKYTsIbnA" target="_tStCIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2w1WYUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1585">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2w1WYEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1585">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__1581&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2woiEEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__Ready__1582" guard="_2w19cUr4Eem5FfKYTsIbnA" source="_2uplEEr4Eem5FfKYTsIbnA" target="_tSpXwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2w19cUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1586">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2w19cEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1586">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Ready__1582&quot;,&quot;Debug__B__Ex__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2wpwMEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1583" source="_2umhwEr4Eem5FfKYTsIbnA" target="_2uplEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2w0IQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__1581&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__B__Ex__Ready&quot;,&quot;To__Debug__B__Ex__Ready__1582&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__1584&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2wpwMUr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1584" guard="_2w3yoUr4Eem5FfKYTsIbnA" source="_2uplEEr4Eem5FfKYTsIbnA" target="_2unI0Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2w3yoUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1587">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2w3yoEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1587">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1584&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tSpXwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSpXwkrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSxTkUrDEem2BZRQc2M93A" name="Debug__B__Ex__Ready__942">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__B__Ex__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tStCIErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tStCIUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS3aMErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__945">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2uplEEr4Eem5FfKYTsIbnA" name="DecesionPoint__1534" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2utPcEr4Eem5FfKYTsIbnA" name="Init__State__1535"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTFcoUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_2a6wwEr4Eem5FfKYTsIbnA" name="From__Parent__1282" kind="entryPoint"/>
              <connectionPoint xmi:id="_2bCskEr4Eem5FfKYTsIbnA" name="To__Parent__1284" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tTXJcErDEem2BZRQc2M93A" name="Debug__AC__NoResponseFromServer" source="_tTUGIErDEem2BZRQc2M93A" target="_tTUtMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTXwgErDEem2BZRQc2M93A" name="ServiceFailure" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Service Failur.....\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__AC__NoResponseFromServer&quot;,(char *)&quot;Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tTXJcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2boicEr4Eem5FfKYTsIbnA" name="Trans__Init__State__12871288" source="_2bZ48Er4Eem5FfKYTsIbnA" target="_2bNEoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2iR9AEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1287&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__1336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1287&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1287&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1287&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2bqXoEr4Eem5FfKYTsIbnA" name="Trans__en1289" source="_tTFcoUrDEem2BZRQc2M93A" target="_2bNEoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2iGW0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__1336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2cAV4Er4Eem5FfKYTsIbnA" name="From__Debug__A__Ac__NoResponseFromServer__1290" source="_tTUtMErDEem2BZRQc2M93A" target="_2bNEoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ijp0Er4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__1336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2cHDkEr4Eem5FfKYTsIbnA" name="PME_Trig1291" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2cUe8Er4Eem5FfKYTsIbnA" name="PME_Trig1292" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2cmLwEr4Eem5FfKYTsIbnA" name="PME_Trig1293" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2cyZAEr4Eem5FfKYTsIbnA" name="PME_Trig1294" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2c7i8Er4Eem5FfKYTsIbnA" name="PME_Trig1295" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2dGiEEr4Eem5FfKYTsIbnA" name="PME_Trig1296" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2dQ6IEr4Eem5FfKYTsIbnA" name="PME_Trig1297" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2db5QEr4Eem5FfKYTsIbnA" name="PME_Trig1298" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2doGgEr4Eem5FfKYTsIbnA" name="PME_Trig1299" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2dzssEr4Eem5FfKYTsIbnA" name="PME_Trig1300" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2d7ogEr4Eem5FfKYTsIbnA" name="PME_Trig1301" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2eCWMEr4Eem5FfKYTsIbnA" name="PME_Trig1302" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2eNVUEr4Eem5FfKYTsIbnA" name="PME_Trig1303" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2eXtYEr4Eem5FfKYTsIbnA" name="PME_Trig1304" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2emW4Er4Eem5FfKYTsIbnA" name="PME_Trig1305" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2etroEr4Eem5FfKYTsIbnA" name="PME_Trig1306" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2e544Er4Eem5FfKYTsIbnA" name="PME_Trig1307" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2e__gEr4Eem5FfKYTsIbnA" name="PME_Trig1308" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2fIiYEr4Eem5FfKYTsIbnA" name="PME_Trig1309" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_2fOpAEr4Eem5FfKYTsIbnA" name="PME_Trig1310" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2faPMEr4Eem5FfKYTsIbnA" name="PME_Trig1311" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2fiyEEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__NoResponseFromServer__1312" source="_tTUGIErDEem2BZRQc2M93A" target="_2bNEoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2iYqsEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__1336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_2fnqkEr4Eem5FfKYTsIbnA" name="PME_Trig1313" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2ftxMEr4Eem5FfKYTsIbnA" name="PME_Trig1314" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2f5XYEr4Eem5FfKYTsIbnA" name="PME_Trig1315" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2gAsIEr4Eem5FfKYTsIbnA" name="PME_Trig1316" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2gHZ0Er4Eem5FfKYTsIbnA" name="PME_Trig1317" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2gLrQEr4Eem5FfKYTsIbnA" name="PME_Trig1318" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2gPVoEr4Eem5FfKYTsIbnA" name="PME_Trig1319" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2gbi4Er4Eem5FfKYTsIbnA" name="PME_Trig1320" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2ghCcEr4Eem5FfKYTsIbnA" name="PME_Trig1321" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2gmiAEr4Eem5FfKYTsIbnA" name="PME_Trig1322" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2gqMYEr4Eem5FfKYTsIbnA" name="PME_Trig1323" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_2NYEAEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_2gw6EEr4Eem5FfKYTsIbnA" name="PME_Trig1324" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2g5c8Er4Eem5FfKYTsIbnA" name="PME_Trig1325" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_2hCm4Er4Eem5FfKYTsIbnA" name="PME_Trig1326" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2hItgEr4Eem5FfKYTsIbnA" name="PME_Trig1327" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_2hSegEr4Eem5FfKYTsIbnA" name="PME_Trig1328" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_2hWI4Er4Eem5FfKYTsIbnA" name="PME_Trig1329" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_2heEsEr4Eem5FfKYTsIbnA" name="PME_Trig1330" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2hmnkEr4Eem5FfKYTsIbnA" name="PME_Trig1331" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_2hpD0Er4Eem5FfKYTsIbnA" name="PME_Trig1332" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_2h3GQEr4Eem5FfKYTsIbnA" name="To__Debug__A__Ac__NoResponseFromServer__1333" guard="_2in7QUr4Eem5FfKYTsIbnA" source="_2bNEoEr4Eem5FfKYTsIbnA" target="_tTUtMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2in7QUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1338">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2in7QEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1338">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2h47cEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__NoResponseFromServer__1334" guard="_2iszwEr4Eem5FfKYTsIbnA" source="_2bNEoEr4Eem5FfKYTsIbnA" target="_tTUGIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_2iszwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1339">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2isMsEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1339">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_2iA3QEr4Eem5FfKYTsIbnA" name="From__Parnet__ClientStateMachine__1335" source="_2a6wwEr4Eem5FfKYTsIbnA" target="_2bNEoEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2ifYYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__1336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__A__Ac__NoResponseFromServer&quot;,&quot;To__Debug__A__Ac__NoResponseFromServer__1333&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ac__NoResponseFromServer&quot;,&quot;To__Debug__B__Ac__NoResponseFromServer__1334&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2iCFYEr4Eem5FfKYTsIbnA" name="To__Parent__ClientStateMachine__1336" guard="_2imGEUr4Eem5FfKYTsIbnA" source="_2bNEoEr4Eem5FfKYTsIbnA" target="_2bCskEr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_2imGEUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1337">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_2imGEEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1337">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__1336&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTUGIErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUGIUrDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTba4ErDEem2BZRQc2M93A" name="Debug__B__Ac__NoResponseFromServer__970">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tTUtMErDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTUtMUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;NoResponseFromServer&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTcpAUrDEem2BZRQc2M93A" name="Debug__A__Ac__NoResponseFromServer__971">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__A__Ac__NoResponseFromServer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2bNEoEr4Eem5FfKYTsIbnA" name="DecesionPoint__1286" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2bZ48Er4Eem5FfKYTsIbnA" name="Init__State__1287"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_2QDkkEr4Eem5FfKYTsIbnA" name="DecesionPoint__1058" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_2QGA0Er4Eem5FfKYTsIbnA" name="Init__State__1059"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2Oe3QUr4Eem5FfKYTsIbnA" name="loadHeap" specification="_2Oe3QEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2OgFYEr4Eem5FfKYTsIbnA" name="unLoadHeap" specification="_2OfeUEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2O2DoUr4Eem5FfKYTsIbnA" name="sendMessage" specification="_2O2DoEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2O8xUUr4Eem5FfKYTsIbnA" name="sendInternalMessage" specification="_2O8xUEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_2Pzs8Ur4Eem5FfKYTsIbnA" name="initForPMD" specification="_2Pzs8Er4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2Oe3QEr4Eem5FfKYTsIbnA" name="loadHeap" visibility="private" method="_2Oe3QUr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_2OfeUEr4Eem5FfKYTsIbnA" name="unLoadHeap" visibility="private" method="_2OgFYEr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_2O2DoEr4Eem5FfKYTsIbnA" name="sendMessage" visibility="private" method="_2O2DoUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_2O3RwEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2O8KQEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2O8xUEr4Eem5FfKYTsIbnA" name="sendInternalMessage" visibility="private" method="_2O8xUUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_2O9YYEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_2PBCwEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_2Pzs8Er4Eem5FfKYTsIbnA" name="initForPMD" visibility="private" method="_2Pzs8Ur4Eem5FfKYTsIbnA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_20nDIEr4Eem5FfKYTsIbnA" name="dbgPortForEchoCapsule" visibility="protected" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_20nDIUr4Eem5FfKYTsIbnA" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_20nDIkr4Eem5FfKYTsIbnA" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_tJ6SgErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ6SgkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange__692">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tJ6SgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ65kErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ65kkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint__693">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ65kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ7goErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ7gokrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint__694">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ7goUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8HsErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ8uwErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints__695">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ8HsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8uwUrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ9V0UrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode__696">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tJ9V0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ984ErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ984krDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg__697">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ984UrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKndIErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S" guard="_tKoEMUrDEem2BZRQc2M93A" source="_tKgvcErDEem2BZRQc2M93A" target="_tKjLsUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tKoEMUrDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tKoEMErDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKorQErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S__715">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__S&quot;,(char *)&quot;Debug__Path__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_22D0oEr4Eem5FfKYTsIbnA" name="Trans__Init__State__16021603" source="_218f4Er4Eem5FfKYTsIbnA" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26Dj0Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1602&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1602&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1602&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1602&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_22MXgEr4Eem5FfKYTsIbnA" name="1604" source="_tKgvcErDEem2BZRQc2M93A" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26Ex8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_22NloEr4Eem5FfKYTsIbnA" name="From__New__State__1601__1605" source="_216DoEr4Eem5FfKYTsIbnA" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26BuoEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__1601&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1601&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;New__State__1601&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__1601&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_22OzwEr4Eem5FfKYTsIbnA" name="PME_Trig1606" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_22Pa0Er4Eem5FfKYTsIbnA" name="PME_Trig1607" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_22Qo8Er4Eem5FfKYTsIbnA" name="PME_Trig1608" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_22X9sEr4Eem5FfKYTsIbnA" name="PME_Trig1609" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_22Zy4Er4Eem5FfKYTsIbnA" name="PME_Trig1610" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_22cPIEr4Eem5FfKYTsIbnA" name="PME_Trig1611" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_22fScEr4Eem5FfKYTsIbnA" name="PME_Trig1612" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_20nDIEr4Eem5FfKYTsIbnA"/>
              <trigger xmi:id="_22iVwEr4Eem5FfKYTsIbnA" name="PME_Trig1613" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_22jj4Er4Eem5FfKYTsIbnA" name="PME_Trig1614" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_22mnMEr4Eem5FfKYTsIbnA" name="To__New__State__1601__1615" guard="_26Xs4Ur4Eem5FfKYTsIbnA" source="_21xgwEr4Eem5FfKYTsIbnA" target="_216DoEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_26Xs4Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1687">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_26Xs4Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1687">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__New__State__1601__1615&quot;,&quot;New__State__1601&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_22st0Ur4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__init__WaitForEcho__8__1617" guard="_26WewUr4Eem5FfKYTsIbnA" source="_21xgwEr4Eem5FfKYTsIbnA" target="_22sGwEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_26WewUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1685">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_26WewEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1685">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_22ujAEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__init__WaitForEcho__8__1619" source="_22tU4Er4Eem5FfKYTsIbnA" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26Oi8Er4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_24RbIEr4Eem5FfKYTsIbnA" name="Trans__ex1650" source="_tJxvoUrDEem2BZRQc2M93A" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26MGsEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_24SpQUr4Eem5FfKYTsIbnA" name="To__Substates__Debug__C__DoEcho__1652" guard="_26XF0Ur4Eem5FfKYTsIbnA" source="_21xgwEr4Eem5FfKYTsIbnA" target="_24SCMEr4Eem5FfKYTsIbnA">
              <ownedRule xmi:id="_26XF0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1686">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_26XF0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1686">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__DoEcho__1652&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_24T3YEr4Eem5FfKYTsIbnA" name="From__Substates__Debug__C__DoEcho__1654" source="_24SpQkr4Eem5FfKYTsIbnA" target="_21xgwEr4Eem5FfKYTsIbnA">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_26V3sEr4Eem5FfKYTsIbnA">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__1617&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__1652&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;New__State__1601&quot;,&quot;To__New__State__1601__1615&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_tJwhgErDEem2BZRQc2M93A" name="Debug__C__DoEcho">
              <connectionPoint xmi:id="_tJxvoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_24SCMEr4Eem5FfKYTsIbnA" name="From__Parent__1651" kind="entryPoint"/>
              <connectionPoint xmi:id="_24SpQkr4Eem5FfKYTsIbnA" name="To__Parent__1653" kind="exitPoint"/>
              <region xmi:id="_tJwhgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tKHG0ErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho" source="_tKEDgErDEem2BZRQc2M93A" target="_tJxvoUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKdFEErDEem2BZRQc2M93A" name="Debug__end__trans__DoEcho__710">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__end__trans__DoEcho&quot;,(char *)&quot;Debug__A__En__WaitForEcho&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tKHG0UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_24gEoEr4Eem5FfKYTsIbnA" name="Trans__ex1657" source="_tJxvoUrDEem2BZRQc2M93A" target="_24UecEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_25rwYEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__1679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__1681&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_24grsEr4Eem5FfKYTsIbnA" name="Trans__Init__State__16561658" source="_24XhwEr4Eem5FfKYTsIbnA" target="_24UecEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_25vawEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1656&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1656&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__1679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1656&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__1681&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1656&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_24nZYEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ex__WaitForEcho__1659" source="_tKAZIErDEem2BZRQc2M93A" target="_24UecEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_25x3AEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__1679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__1681&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_24ongEr4Eem5FfKYTsIbnA" name="PME_Trig1660" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_24tgAEr4Eem5FfKYTsIbnA" name="PME_Trig1661" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_24xKYEr4Eem5FfKYTsIbnA" name="PME_Trig1662" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_24y_kEr4Eem5FfKYTsIbnA" name="PME_Trig1663" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_242C4Er4Eem5FfKYTsIbnA" name="PME_Trig1664" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_2467YEr4Eem5FfKYTsIbnA" name="PME_Trig1665" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_248wkEr4Eem5FfKYTsIbnA" name="PME_Trig1666" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_20nDIEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_24_z4Er4Eem5FfKYTsIbnA" name="PME_Trig1667" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_25EsYEr4Eem5FfKYTsIbnA" name="PME_Trig1668" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_25GhkEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__WaitForEcho__1669" source="_tKEDgErDEem2BZRQc2M93A" target="_24UecEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_25uMoEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__1679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__1681&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_25Jk4Er4Eem5FfKYTsIbnA" name="PME_Trig1670" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_25PEcEr4Eem5FfKYTsIbnA" name="PME_Trig1671" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_25Q5oEr4Eem5FfKYTsIbnA" name="PME_Trig1672" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_25TV4Er4Eem5FfKYTsIbnA" name="PME_Trig1673" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_25XAQEr4Eem5FfKYTsIbnA" name="PME_Trig1674" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_25aDkEr4Eem5FfKYTsIbnA" name="PME_Trig1675" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_20nDIEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_25bRsEr4Eem5FfKYTsIbnA" name="PME_Trig1676" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_25cf0Er4Eem5FfKYTsIbnA" name="PME_Trig1677" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_25j0kEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ex__WaitForEcho__1678" guard="_254ksUr4Eem5FfKYTsIbnA" source="_24UecEr4Eem5FfKYTsIbnA" target="_tKAZIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_254ksUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1682">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_254ksEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1682">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_25kboEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__WaitForEcho__1679" guard="_255LwUr4Eem5FfKYTsIbnA" source="_24UecEr4Eem5FfKYTsIbnA" target="_tKEDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_255LwUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1683">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_255LwEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1683">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__WaitForEcho__1679&quot;,&quot;Debug__A__En__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_25lpwEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1680" source="_24SCMEr4Eem5FfKYTsIbnA" target="_24UecEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_2539oEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__1678&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__En__WaitForEcho&quot;,&quot;To__Debug__A__En__WaitForEcho__1679&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__1681&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_25mQ0Er4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1681" guard="_255y0Ur4Eem5FfKYTsIbnA" source="_24UecEr4Eem5FfKYTsIbnA" target="_24SpQkr4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_255y0Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion1684">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_255y0Er4Eem5FfKYTsIbnA" name="PME_checkDecesion1684">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1681&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKAZIErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKAZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKIU8UrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho__698">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKEDgErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKEqkErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKPCoErDEem2BZRQc2M93A" name="Debug__A__En__WaitForEcho__701">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__En__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_24UecEr4Eem5FfKYTsIbnA" name="DecesionPoint__1655" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_24XhwEr4Eem5FfKYTsIbnA" name="Init__State__1656"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tKgvcErDEem2BZRQc2M93A" name="Debug__Path__init__WaitForEcho__8" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_tKjLsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_22sGwEr4Eem5FfKYTsIbnA" name="From__Parent__1616" kind="entryPoint"/>
              <connectionPoint xmi:id="_22tU4Er4Eem5FfKYTsIbnA" name="To__Parent__1618" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tK2tsErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8" source="_tKjLsUrDEem2BZRQc2M93A" target="_tKzDUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLC68ErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8__728">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__init__trans__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_223s8Er4Eem5FfKYTsIbnA" name="Trans__Init__State__16211622" source="_2213wEr4Eem5FfKYTsIbnA" target="_22vKEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_24CKkEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1621&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__1644&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1621&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__1646&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1621&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__1643&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1621&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_226JMEr4Eem5FfKYTsIbnA" name="From__Debug__A__En__init__WaitForEcho__8__1623" source="_tK1fkErDEem2BZRQc2M93A" target="_22vKEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_23_HQEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__1644&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__1646&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__1643&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_227XUEr4Eem5FfKYTsIbnA" name="PME_Trig1624" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_23Bd8Er4Eem5FfKYTsIbnA" name="PME_Trig1625" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23CsEEr4Eem5FfKYTsIbnA" name="PME_Trig1626" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23GWcEr4Eem5FfKYTsIbnA" name="PME_Trig1627" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23MdEEr4Eem5FfKYTsIbnA" name="PME_Trig1628" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_23O5UEr4Eem5FfKYTsIbnA" name="PME_Trig1629" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_23Tx0Er4Eem5FfKYTsIbnA" name="PME_Trig1630" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_20nDIEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_23VnAEr4Eem5FfKYTsIbnA" name="PME_Trig1631" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_23W1IEr4Eem5FfKYTsIbnA" name="PME_Trig1632" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_23btoEr4Eem5FfKYTsIbnA" name="From__Debug__B__Ac__init__WaitForEcho__8__1633" source="_tKzDUUrDEem2BZRQc2M93A" target="_22vKEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_24I4QEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__1644&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__1646&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__1643&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_23ew8Er4Eem5FfKYTsIbnA" name="PME_Trig1634" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_23f_EEr4Eem5FfKYTsIbnA" name="PME_Trig1635" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23gmIEr4Eem5FfKYTsIbnA" name="PME_Trig1636" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23jpcEr4Eem5FfKYTsIbnA" name="PME_Trig1637" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_23pJAEr4Eem5FfKYTsIbnA" name="PME_Trig1638" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_23q-MEr4Eem5FfKYTsIbnA" name="PME_Trig1639" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_23uBgEr4Eem5FfKYTsIbnA" name="PME_Trig1640" event="_0jxo8Er4Eem5FfKYTsIbnA" port="_20nDIEr4Eem5FfKYTsIbnA"/>
                  <trigger xmi:id="_23zhEEr4Eem5FfKYTsIbnA" name="PME_Trig1641" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_230IIEr4Eem5FfKYTsIbnA" name="PME_Trig1642" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_235AoEr4Eem5FfKYTsIbnA" name="To__Debug__A__En__init__WaitForEcho__8__1643" guard="_24MioUr4Eem5FfKYTsIbnA" source="_22vKEEr4Eem5FfKYTsIbnA" target="_tK1fkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_24MioUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1649">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_24MioEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1649">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__init__WaitForEcho__8__1643&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_236OwEr4Eem5FfKYTsIbnA" name="To__Debug__B__Ac__init__WaitForEcho__8__1644" guard="_24JfUUr4Eem5FfKYTsIbnA" source="_22vKEEr4Eem5FfKYTsIbnA" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_24JfUUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1647">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_24JfUEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1647">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__1644&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_239SEEr4Eem5FfKYTsIbnA" name="From__Parnet__StateMachine1__1645" source="_22sGwEr4Eem5FfKYTsIbnA" target="_22vKEEr4Eem5FfKYTsIbnA">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_24HqIEr4Eem5FfKYTsIbnA">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__1644&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__1646&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__1643&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_2395IEr4Eem5FfKYTsIbnA" name="To__Parent__StateMachine1__1646" guard="_24KtcUr4Eem5FfKYTsIbnA" source="_22vKEEr4Eem5FfKYTsIbnA" target="_22tU4Er4Eem5FfKYTsIbnA">
                  <ownedRule xmi:id="_24KtcUr4Eem5FfKYTsIbnA" name="PME_checkDecesion1648">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_24KtcEr4Eem5FfKYTsIbnA" name="PME_checkDecesion1648">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__1646&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK1fkErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK2GoErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLBFwErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8__726">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_22vKEEr4Eem5FfKYTsIbnA" name="DecesionPoint__1620" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_2213wEr4Eem5FfKYTsIbnA" name="Init__State__1621"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_21xgwEr4Eem5FfKYTsIbnA" name="DecesionPoint__1600" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_216DoEr4Eem5FfKYTsIbnA" name="New__State__1601"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_218f4Er4Eem5FfKYTsIbnA" name="Init__State__1602"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_21BS0Ur4Eem5FfKYTsIbnA" name="loadHeap" specification="_21BS0Er4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_21HZcUr4Eem5FfKYTsIbnA" name="unLoadHeap" specification="_21HZcEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_21SYkUr4Eem5FfKYTsIbnA" name="sendMessage" specification="_21SYkEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_21a7cUr4Eem5FfKYTsIbnA" name="sendInternalMessage" specification="_21a7cEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_21udcUr4Eem5FfKYTsIbnA" name="initForPMD" specification="_21udcEr4Eem5FfKYTsIbnA">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_21BS0Er4Eem5FfKYTsIbnA" name="loadHeap" visibility="private" method="_21BS0Ur4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_21HZcEr4Eem5FfKYTsIbnA" name="unLoadHeap" visibility="private" method="_21HZcUr4Eem5FfKYTsIbnA"/>
        <ownedOperation xmi:id="_21SYkEr4Eem5FfKYTsIbnA" name="sendMessage" visibility="private" method="_21SYkUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_21S_oEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_21WqAEr4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_21a7cEr4Eem5FfKYTsIbnA" name="sendInternalMessage" visibility="private" method="_21a7cUr4Eem5FfKYTsIbnA">
          <ownedParameter xmi:id="_21bigEr4Eem5FfKYTsIbnA" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_21el0Er4Eem5FfKYTsIbnA" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_21udcEr4Eem5FfKYTsIbnA" name="initForPMD" visibility="private" method="_21udcUr4Eem5FfKYTsIbnA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_3Us4cEr4Eem5FfKYTsIbnA" name="dbgAgent" type="_0iZI4Er4Eem5FfKYTsIbnA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_3UvUsEr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_3UvUsUr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0iZI4Er4Eem5FfKYTsIbnA" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0jzeIEr4Eem5FfKYTsIbnA" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0j3vkEr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_0j5kwEr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0nXIcEr4Eem5FfKYTsIbnA" name="dbgPortForServer" visibility="public" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_0nY9oEr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_0nZksEr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_2NbHUEr4Eem5FfKYTsIbnA" name="dbgPortForClient" visibility="public" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_2NbHUUr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_2NbuYEr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_20oRQEr4Eem5FfKYTsIbnA" name="dbgPortForEchoCapsule" visibility="public" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_20oRQUr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_20oRQkr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_26jTEEr4Eem5FfKYTsIbnA" name="dbgPortForENV" visibility="public" type="_0jRSoEr4Eem5FfKYTsIbnA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_26khMEr4Eem5FfKYTsIbnA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_26khMUr4Eem5FfKYTsIbnA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_0i6GQEr4Eem5FfKYTsIbnA" name="dbgAgent StateMachine">
        <region xmi:id="_3UPlcEr4Eem5FfKYTsIbnA" name="mainRegion">
          <transition xmi:id="_3UbLoEr4Eem5FfKYTsIbnA" name="Trans__Init__State__21622163" source="_3UYIUEr4Eem5FfKYTsIbnA" target="_3UQzkUr4Eem5FfKYTsIbnA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3UmKwEr4Eem5FfKYTsIbnA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2162&quot;,&quot;New__State__2161&quot;,&quot;To__New__State__2161__2166&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2162&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_3UcZwEr4Eem5FfKYTsIbnA" name="From__New__State__2161__2164" source="_3USBsUr4Eem5FfKYTsIbnA" target="_3UQzkUr4Eem5FfKYTsIbnA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_3UnY4Er4Eem5FfKYTsIbnA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__2161&quot;,&quot;New__State__2161&quot;,&quot;To__New__State__2161__2166&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__2161&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_3Udn4Er4Eem5FfKYTsIbnA" name="PME_Trig2165" port="_0jzeIEr4Eem5FfKYTsIbnA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_3Uk8oEr4Eem5FfKYTsIbnA" name="To__New__State__2161__2166" guard="_3Un_8Ur4Eem5FfKYTsIbnA" source="_3UQzkUr4Eem5FfKYTsIbnA" target="_3USBsUr4Eem5FfKYTsIbnA">
            <ownedRule xmi:id="_3Un_8Ur4Eem5FfKYTsIbnA" name="PME_checkDecesion2167">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_3Un_8Er4Eem5FfKYTsIbnA" name="PME_checkDecesion2167">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__2161__2166&quot;,&quot;New__State__2161&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_3UQzkUr4Eem5FfKYTsIbnA" name="DecesionPoint__2160" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_3USBsUr4Eem5FfKYTsIbnA" name="New__State__2161">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_3Uv7wEr4Eem5FfKYTsIbnA" name="New__State__2161">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_3UYIUEr4Eem5FfKYTsIbnA" name="Init__State__2162"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3ThzwUr4Eem5FfKYTsIbnA" name="loadHeap" specification="_3ThzwEr4Eem5FfKYTsIbnA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3TmsQUr4Eem5FfKYTsIbnA" name="unLoadHeap" specification="_3TmsQEr4Eem5FfKYTsIbnA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3TrkwEr4Eem5FfKYTsIbnA" name="sendMessage" specification="_3Tq9sEr4Eem5FfKYTsIbnA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForServer&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForServer.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForClient&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForClient.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForEchoCapsule&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForEchoCapsule.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForENV&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForENV.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3TzgkUr4Eem5FfKYTsIbnA" name="sendInternalMessage" specification="_3TzgkEr4Eem5FfKYTsIbnA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_3UHCkUr4Eem5FfKYTsIbnA" name="initForPMD" specification="_3UHCkEr4Eem5FfKYTsIbnA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_3ThzwEr4Eem5FfKYTsIbnA" name="loadHeap" visibility="private" method="_3ThzwUr4Eem5FfKYTsIbnA"/>
      <ownedOperation xmi:id="_3TmsQEr4Eem5FfKYTsIbnA" name="unLoadHeap" visibility="private" method="_3TmsQUr4Eem5FfKYTsIbnA"/>
      <ownedOperation xmi:id="_3Tq9sEr4Eem5FfKYTsIbnA" name="sendMessage" visibility="private" method="_3TrkwEr4Eem5FfKYTsIbnA">
        <ownedParameter xmi:id="_3TsL0Er4Eem5FfKYTsIbnA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3TyScEr4Eem5FfKYTsIbnA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3TzgkEr4Eem5FfKYTsIbnA" name="sendInternalMessage" visibility="private" method="_3TzgkUr4Eem5FfKYTsIbnA">
        <ownedParameter xmi:id="_3T0HoEr4Eem5FfKYTsIbnA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_3T1VwEr4Eem5FfKYTsIbnA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_3UHCkEr4Eem5FfKYTsIbnA" name="initForPMD" visibility="private" method="_3UHCkUr4Eem5FfKYTsIbnA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_0jJ94Er4Eem5FfKYTsIbnA" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_0jRSoEr4Eem5FfKYTsIbnA" name="dbgProtocol">
        <interfaceRealization xmi:id="_0jn38Er4Eem5FfKYTsIbnA" client="_0jRSoEr4Eem5FfKYTsIbnA" supplier="_0jUV8Er4Eem5FfKYTsIbnA" contract="_0jUV8Er4Eem5FfKYTsIbnA"/>
        <interfaceRealization xmi:id="_0jq7QEr4Eem5FfKYTsIbnA" client="_0jRSoEr4Eem5FfKYTsIbnA" supplier="_0jYnYEr4Eem5FfKYTsIbnA" contract="_0jYnYEr4Eem5FfKYTsIbnA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_0jUV8Er4Eem5FfKYTsIbnA" name="dbgProtocol">
        <ownedOperation xmi:id="_0jwa0Er4Eem5FfKYTsIbnA" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_0jWLIEr4Eem5FfKYTsIbnA" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_0jYnYEr4Eem5FfKYTsIbnA" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_0jbqsEr4Eem5FfKYTsIbnA" client="_0jRSoEr4Eem5FfKYTsIbnA" supplier="_0jWLIEr4Eem5FfKYTsIbnA"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_0jc40Er4Eem5FfKYTsIbnA" client="_0jRSoEr4Eem5FfKYTsIbnA" supplier="_0jYnYEr4Eem5FfKYTsIbnA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_0jxo8Er4Eem5FfKYTsIbnA" operation="_0jwa0Er4Eem5FfKYTsIbnA"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w" base_State="_jLPjcAlNEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w" base_State="_hgSoEAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w" base_Pseudostate="_kLngAAp5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w" base_State="_ZaK1gAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w" base_State="_Q5-S4AlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w" base_State="_IjppsAlhEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w" base_State="_uScfwAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A" base_Pseudostate="_syROkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A" base_Pseudostate="_syX8QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A" base_Region="_syTq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A" base_State="_szJYUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A" base_Pseudostate="_szmrUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A" base_Pseudostate="_sznSYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A" base_Pseudostate="_s0gqQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A" base_State="_s02BcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A" base_State="_s05EwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A" base_Pseudostate="_s1apMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A" base_State="_s1wAYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A" base_State="_s2JB8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A" base_Pseudostate="_s2KQEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A" base_Pseudostate="_s2K3IUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A" base_Region="_s2JB8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A" base_State="_s2gOUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A" base_State="_s2j4sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A" base_Pseudostate="_s33gQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A" base_State="_s4ImAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A" base_State="_s4J0IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A" base_State="_s4LCQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A" base_State="_s4iOoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A" base_Region="_s4iOokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A" base_State="_s40igUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A" base_State="_s41woErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A" base_State="_s46CEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A" base_State="_s49scErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A" base_Pseudostate="_s5aYYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A" base_Pseudostate="_s5a_cUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A" base_Region="_s60GkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A" base_State="_s60GkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A" base_State="_s7IPoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A" base_Pseudostate="_s7c_wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A" base_Pseudostate="_s7eN4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A" base_State="_s7y-AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A" base_State="_s71aQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A" base_State="_s8T7YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A" base_Pseudostate="_s8VwkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A" base_Region="_s8T7YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A" base_State="_s8pSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A" base_State="_s8qgsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A" base_State="_s8s88ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A" base_Pseudostate="_s9MsMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A" base_State="_s9dx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A" base_State="_s9fAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A" base_State="_s97sAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A" base_Pseudostate="_s99hMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A" base_Region="_s98TEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A" base_State="_s-N_4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A" base_State="_s-POAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A" base_Pseudostate="_s-oPkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A" base_State="_s-5VUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A" base_State="_s-8_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A" base_Pseudostate="_s_-6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A" base_Pseudostate="_tAbmYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A" base_State="_tBFGoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A" base_Pseudostate="_tBIJ8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A" base_Region="_tBFGokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A" base_State="_tBYBkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A" base_Pseudostate="_tBtYwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A" base_State="_tCATsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A" base_State="_tCdmsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A" base_Pseudostate="_tCe00UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A" base_Region="_tCdmskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A" base_State="_tCwhoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A" base_State="_tC6SoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A" base_Pseudostate="_tC8u4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A" base_Region="_tC6SokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A" base_State="_tDPCwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A" base_State="_tDQQ4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A" base_Pseudostate="_tDikwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A" base_State="_tD378UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A" base_State="_tEBF4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A" base_Region="_tEBs8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A" base_State="_tEQWcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A" base_State="_tEUA0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A" base_State="_tE86AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A" base_State="_tE9hEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A" base_State="_tFE10UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A" base_Pseudostate="_tFIgMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A" base_Region="_tFE10krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A" base_State="_tFVUgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A" base_Pseudostate="_tF4HEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A" base_Pseudostate="_tF7xcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A" base_State="_tGMQIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A" base_State="_tHFA8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A" base_Pseudostate="_tHWGsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A" base_State="_tHWtwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A" base_Pseudostate="_tHX74UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A" base_Region="_tHWtwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A" base_State="_tHqPwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A" base_State="_tHq20ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A" base_Pseudostate="_tIKmEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A" base_State="_tIbEwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A" base_State="_tJwhgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A" base_Pseudostate="_tJxvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A" base_Region="_tJwhgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A" base_State="_tKAZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A" base_State="_tKEDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A" base_Pseudostate="_tKgvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A" base_Pseudostate="_tKjLsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A" base_State="_tK1fkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A" base_Pseudostate="_tL1lIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A" base_State="_tMFcwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A" base_State="_tMGq4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A" base_State="_tMH5AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A" base_Pseudostate="_tMY-wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A" base_State="_tMuV8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A" base_Pseudostate="_tNLo8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A" base_Pseudostate="_tNOFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A" base_Pseudostate="_tNOsQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A" base_State="_tNiOQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A" base_State="_tO2c4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A" base_Region="_tPKl8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A" base_State="_tPeH8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A" base_Pseudostate="_tQYt8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A" base_State="_tQvTQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A" base_State="_tQy9oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A" base_Pseudostate="_tRVwMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A" base_Pseudostate="_tRYMcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A" base_State="_tR2GgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A" base_Pseudostate="_tSQ9QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A" base_State="_tSRkUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A" base_Pseudostate="_tSSycUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A" base_Pseudostate="_tSUAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A" base_Region="_tSRkUkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A" base_State="_tSpXwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A" base_State="_tStCIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A" base_Pseudostate="_tTFcoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A" base_State="_tTUGIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A" base_State="_tTUtMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_0i100Er4Eem5FfKYTsIbnA" base_Class="_0iZI4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0jJW0Er4Eem5FfKYTsIbnA" base_StateMachine="_0i6GQEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_0jQrkEr4Eem5FfKYTsIbnA" base_Package="_0jJ94Er4Eem5FfKYTsIbnA"/>
  <UMLRealTime:Protocol xmi:id="_0jTu4Er4Eem5FfKYTsIbnA" base_Collaboration="_0jRSoEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTMessageSet xmi:id="_0jeuAEr4Eem5FfKYTsIbnA" base_Interface="_0jUV8Er4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTMessageSet xmi:id="_0jlbsEr4Eem5FfKYTsIbnA" base_Interface="_0jWLIEr4Eem5FfKYTsIbnA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_0jnQ4Er4Eem5FfKYTsIbnA" base_Interface="_0jYnYEr4Eem5FfKYTsIbnA" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_0kD80Er4Eem5FfKYTsIbnA" base_Port="_0jzeIEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_0nRo4Er4Eem5FfKYTsIbnA" isWired="false" base_Port="_0nPzsEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_0naLwEr4Eem5FfKYTsIbnA" isPublish="true" isWired="false" base_Port="_0nXIcEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_0suJkEr4Eem5FfKYTsIbnA" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_0s4hoEr4Eem5FfKYTsIbnA" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_0vMOwEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_0vJygEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_0vhl8Er4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_0vcGYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0xSggEr4Eem5FfKYTsIbnA" base_Pseudostate="_0xR5cEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0xf74Er4Eem5FfKYTsIbnA" base_Pseudostate="_0xcRgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_040r4Er4Eem5FfKYTsIbnA" base_Pseudostate="_04xBgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_046LcEr4Eem5FfKYTsIbnA" base_Pseudostate="_045kYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_04_D8Er4Eem5FfKYTsIbnA" base_Pseudostate="_048AoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_05FKkEr4Eem5FfKYTsIbnA" base_Pseudostate="_05D8cEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_07x5QEr4Eem5FfKYTsIbnA" base_Pseudostate="_07xSMEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_072xwEr4Eem5FfKYTsIbnA" base_Pseudostate="_07zHYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_076cIEr4Eem5FfKYTsIbnA" base_Pseudostate="_0751EEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0784YEr4Eem5FfKYTsIbnA" base_Pseudostate="_078RUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0-z_IEr4Eem5FfKYTsIbnA" base_Pseudostate="_0-yxAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0-7T4Er4Eem5FfKYTsIbnA" base_Pseudostate="_0-3pgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0--XMEr4Eem5FfKYTsIbnA" base_Pseudostate="_0-9JEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_0_IIMEr4Eem5FfKYTsIbnA" base_Pseudostate="_0_HhIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1Clr4Er4Eem5FfKYTsIbnA" base_Pseudostate="_1CjPoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1CnhEEr4Eem5FfKYTsIbnA" base_Pseudostate="_1Cm6AEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1Cvc4Er4Eem5FfKYTsIbnA" base_Pseudostate="_1CsZkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1CzHQEr4Eem5FfKYTsIbnA" base_Pseudostate="_1Cx5IEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1GO1wEr4Eem5FfKYTsIbnA" base_Pseudostate="_1GIvIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1GQq8Er4Eem5FfKYTsIbnA" base_Pseudostate="_1GQD4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1GYmwEr4Eem5FfKYTsIbnA" base_Pseudostate="_1GR5EEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1GbqEEr4Eem5FfKYTsIbnA" base_Pseudostate="_1Gab8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1Jm54Er4Eem5FfKYTsIbnA" base_Pseudostate="_1JmS0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1JoIAEr4Eem5FfKYTsIbnA" base_Pseudostate="_1Jng8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1JvcwEr4Eem5FfKYTsIbnA" base_Pseudostate="_1JqkQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1Jx5AEr4Eem5FfKYTsIbnA" base_Pseudostate="_1JxR8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1NEdkEr4Eem5FfKYTsIbnA" base_Pseudostate="_1NAMIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1NFrsEr4Eem5FfKYTsIbnA" base_Pseudostate="_1NFEoUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1NG50Er4Eem5FfKYTsIbnA" base_Pseudostate="_1NGSwUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1NKkMEr4Eem5FfKYTsIbnA" base_Pseudostate="_1NIH8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1SrWUEr4Eem5FfKYTsIbnA" base_Pseudostate="_1SqvQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1SwO0Er4Eem5FfKYTsIbnA" base_Pseudostate="_1Sr9YUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1Sz5MEr4Eem5FfKYTsIbnA" base_Pseudostate="_1SzSIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1S2VcEr4Eem5FfKYTsIbnA" base_Pseudostate="_1S1HUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1gw1oEr4Eem5FfKYTsIbnA" base_Pseudostate="_1gwOkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1g2VMEr4Eem5FfKYTsIbnA" base_Pseudostate="_1gyDwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1g9p8Er4Eem5FfKYTsIbnA" base_Pseudostate="_1g4xcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1hAGMEr4Eem5FfKYTsIbnA" base_Pseudostate="_1g-4EEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1lgywEr4Eem5FfKYTsIbnA" base_Pseudostate="_1leWgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1lin8Er4Eem5FfKYTsIbnA" base_Pseudostate="_1lhZ0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1loukEr4Eem5FfKYTsIbnA" base_Pseudostate="_1lj2EEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1lsY8Er4Eem5FfKYTsIbnA" base_Pseudostate="_1lrx4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1nqu4Er4Eem5FfKYTsIbnA" base_Pseudostate="_1nl2YEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1ntLIEr4Eem5FfKYTsIbnA" base_Pseudostate="_1nr9AEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1nvnYEr4Eem5FfKYTsIbnA" base_Pseudostate="_1nvAUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1nw1gEr4Eem5FfKYTsIbnA" base_Pseudostate="_1nwOcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1qicsEr4Eem5FfKYTsIbnA" base_Pseudostate="_1qh1oEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1qkR4Er4Eem5FfKYTsIbnA" base_Pseudostate="_1qjDwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1qmuIEr4Eem5FfKYTsIbnA" base_Pseudostate="_1qmHEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1qn8QEr4Eem5FfKYTsIbnA" base_Pseudostate="_1qnVMEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1tfqEEr4Eem5FfKYTsIbnA" base_Pseudostate="_1teb8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1tkikEr4Eem5FfKYTsIbnA" base_Pseudostate="_1titYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1tnl4Er4Eem5FfKYTsIbnA" base_Pseudostate="_1tm-0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1to0AEr4Eem5FfKYTsIbnA" base_Pseudostate="_1toM8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1wbCQEr4Eem5FfKYTsIbnA" base_Pseudostate="_1wWJwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1weFkEr4Eem5FfKYTsIbnA" base_Pseudostate="_1wcQYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1wf6wEr4Eem5FfKYTsIbnA" base_Pseudostate="_1wfTsEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1wmocEr4Eem5FfKYTsIbnA" base_Pseudostate="_1wkMMEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1zdIIEr4Eem5FfKYTsIbnA" base_Pseudostate="_1zb6AEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1zgygEr4Eem5FfKYTsIbnA" base_Pseudostate="_1zfkYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1zlrAEr4Eem5FfKYTsIbnA" base_Pseudostate="_1ziAoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1zpVYEr4Eem5FfKYTsIbnA" base_Pseudostate="_1zngMEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_12zXEEr4Eem5FfKYTsIbnA" base_Pseudostate="_12xh4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_122aYEr4Eem5FfKYTsIbnA" base_Pseudostate="_121MQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_128hAEr4Eem5FfKYTsIbnA" base_Pseudostate="_126EwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_12-WMEr4Eem5FfKYTsIbnA" base_Pseudostate="_129IEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_14uCoEr4Eem5FfKYTsIbnA" base_Pseudostate="_14tbkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_14we4Ur4Eem5FfKYTsIbnA" base_Pseudostate="_14we4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_140wUEr4Eem5FfKYTsIbnA" base_Pseudostate="_14xtAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_144asEr4Eem5FfKYTsIbnA" base_Pseudostate="_143MkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_18JxIEr4Eem5FfKYTsIbnA" base_Pseudostate="_18Gt0Ur4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_18M0cEr4Eem5FfKYTsIbnA" base_Pseudostate="_18MNYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_18P3wEr4Eem5FfKYTsIbnA" base_Pseudostate="_18PQsEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_18VXUEr4Eem5FfKYTsIbnA" base_Pseudostate="_18SUAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1-EcsEr4Eem5FfKYTsIbnA" base_Pseudostate="_1-CAcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1-J8QEr4Eem5FfKYTsIbnA" base_Pseudostate="_1-IuIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1-LxcEr4Eem5FfKYTsIbnA" base_Pseudostate="_1-LKYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1-Qp8Er4Eem5FfKYTsIbnA" base_Pseudostate="_1-M_kEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2BVzIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2BUlAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2BbSsEr4Eem5FfKYTsIbnA" base_Pseudostate="_2BYPYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2BfkIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2Bcg0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2BgyQEr4Eem5FfKYTsIbnA" base_Pseudostate="_2BgLMEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_2NagQEr4Eem5FfKYTsIbnA" isWired="false" base_Port="_2NYEAEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_2NcVcEr4Eem5FfKYTsIbnA" isPublish="true" isWired="false" base_Port="_2NbHUEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_2OUfMEr4Eem5FfKYTsIbnA" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_2OYwoEr4Eem5FfKYTsIbnA" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_2O7jMEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_2O3RwEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_2PAbsEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_2O9YYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2QEysEr4Eem5FfKYTsIbnA" base_Pseudostate="_2QDkkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2QH2AEr4Eem5FfKYTsIbnA" base_Pseudostate="_2QGA0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2TU7AEr4Eem5FfKYTsIbnA" base_Pseudostate="_2TTs4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2TaakEr4Eem5FfKYTsIbnA" base_Pseudostate="_2TZMcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2Tdd4Er4Eem5FfKYTsIbnA" base_Pseudostate="_2TbosEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2Ti9cEr4Eem5FfKYTsIbnA" base_Pseudostate="_2TesAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2VKHAEr4Eem5FfKYTsIbnA" base_Pseudostate="_2VJf8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2VLVIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2VKuEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2VNxYEr4Eem5FfKYTsIbnA" base_Pseudostate="_2VNKUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2VT4AEr4Eem5FfKYTsIbnA" base_Pseudostate="_2VTQ8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2Y9B4Ur4Eem5FfKYTsIbnA" base_Pseudostate="_2Y9B4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2Y-QAEr4Eem5FfKYTsIbnA" base_Pseudostate="_2Y9o8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2ZAsQEr4Eem5FfKYTsIbnA" base_Pseudostate="_2Y-3EEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2ZB6YEr4Eem5FfKYTsIbnA" base_Pseudostate="_2ZBTUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2a_CMEr4Eem5FfKYTsIbnA" base_Pseudostate="_2a6wwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2bIzMEr4Eem5FfKYTsIbnA" base_Pseudostate="_2bCskEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2bTyUEr4Eem5FfKYTsIbnA" base_Pseudostate="_2bNEoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2bdjUEr4Eem5FfKYTsIbnA" base_Pseudostate="_2bZ48Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2i0IgEr4Eem5FfKYTsIbnA" base_Pseudostate="_2ixsQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2i5oEEr4Eem5FfKYTsIbnA" base_Pseudostate="_2i3L0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2i_HoEr4Eem5FfKYTsIbnA" base_Pseudostate="_2i8rYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2jEnMEr4Eem5FfKYTsIbnA" base_Pseudostate="_2jCK8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2lzLEEr4Eem5FfKYTsIbnA" base_Pseudostate="_2ltEcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2l2OYEr4Eem5FfKYTsIbnA" base_Pseudostate="_2l1nUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2l88EEr4Eem5FfKYTsIbnA" base_Pseudostate="_2l3cgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2mSTQEr4Eem5FfKYTsIbnA" base_Pseudostate="_2mLlkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2psMkEr4Eem5FfKYTsIbnA" base_Pseudostate="_2prlgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2pxsIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2puo0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2p1WgEr4Eem5FfKYTsIbnA" base_Pseudostate="_2p0vcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2p7dIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2p4Z0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2s4DcEr4Eem5FfKYTsIbnA" base_Pseudostate="_2s3cYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2s-xIEr4Eem5FfKYTsIbnA" base_Pseudostate="_2s7GwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2s__QUr4Eem5FfKYTsIbnA" base_Pseudostate="_2s__QEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2tBNYEr4Eem5FfKYTsIbnA" base_Pseudostate="_2tAmUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2umhwUr4Eem5FfKYTsIbnA" base_Pseudostate="_2umhwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2unv4Er4Eem5FfKYTsIbnA" base_Pseudostate="_2unI0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2uplEUr4Eem5FfKYTsIbnA" base_Pseudostate="_2uplEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2uudkEr4Eem5FfKYTsIbnA" base_Pseudostate="_2utPcEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_20nqMEr4Eem5FfKYTsIbnA" isWired="false" base_Port="_20nDIEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_20o4UEr4Eem5FfKYTsIbnA" isPublish="true" isWired="false" base_Port="_20oRQEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_205XAEr4Eem5FfKYTsIbnA" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_20-PgEr4Eem5FfKYTsIbnA" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_21Vb4Er4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_21S_oEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_21cJkEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_21bigEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_215ckEr4Eem5FfKYTsIbnA" base_Pseudostate="_21xgwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTState xmi:id="_217RwEr4Eem5FfKYTsIbnA" base_State="_216DoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_21-VEEr4Eem5FfKYTsIbnA" base_Pseudostate="_218f4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_22st0Er4Eem5FfKYTsIbnA" base_Pseudostate="_22sGwEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_22t78Er4Eem5FfKYTsIbnA" base_Pseudostate="_22tU4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_22w_QEr4Eem5FfKYTsIbnA" base_Pseudostate="_22vKEEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_222e0Er4Eem5FfKYTsIbnA" base_Pseudostate="_2213wEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_24SpQEr4Eem5FfKYTsIbnA" base_Pseudostate="_24SCMEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_24TQUEr4Eem5FfKYTsIbnA" base_Pseudostate="_24SpQkr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_24VFgEr4Eem5FfKYTsIbnA" base_Pseudostate="_24UecEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_24bzMEr4Eem5FfKYTsIbnA" base_Pseudostate="_24XhwEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_26iE8Er4Eem5FfKYTsIbnA" isWired="false" base_Port="_26hd4Er4Eem5FfKYTsIbnA"/>
  <UMLRealTime:RTPort xmi:id="_26lIQEr4Eem5FfKYTsIbnA" isPublish="true" isWired="false" base_Port="_26jTEEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_27UIEEr4Eem5FfKYTsIbnA" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_27XycEr4Eem5FfKYTsIbnA" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_278aMEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_277zIEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_28AEkEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_27-PYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_28w5kEr4Eem5FfKYTsIbnA" base_Pseudostate="_28wSgEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTState xmi:id="_284OUEr4Eem5FfKYTsIbnA" base_State="_28zV0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2-hNEEr4Eem5FfKYTsIbnA" base_Pseudostate="_2-gmAUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2-kQYEr4Eem5FfKYTsIbnA" base_Pseudostate="_2-jCQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2-pI4Er4Eem5FfKYTsIbnA" base_Pseudostate="_2-oh0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2-qXAEr4Eem5FfKYTsIbnA" base_Pseudostate="_2-pv8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_2__MsEr4Eem5FfKYTsIbnA" base_Pseudostate="_2_8wcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3AEFMEr4Eem5FfKYTsIbnA" base_Pseudostate="_3ABo8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3AF6YEr4Eem5FfKYTsIbnA" base_Pseudostate="_3AFTUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3AN2MEr4Eem5FfKYTsIbnA" base_Pseudostate="_3AI9sEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3Co4EEr4Eem5FfKYTsIbnA" base_Pseudostate="_3CoRAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3CpfIUr4Eem5FfKYTsIbnA" base_Pseudostate="_3CpfIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3CsicEr4Eem5FfKYTsIbnA" base_Pseudostate="_3CrUUEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3CyCAEr4Eem5FfKYTsIbnA" base_Pseudostate="_3Cxa8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3Ge2QEr4Eem5FfKYTsIbnA" base_Pseudostate="_3GePMUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3Glj8Er4Eem5FfKYTsIbnA" base_Pseudostate="_3GigoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3GmLAUr4Eem5FfKYTsIbnA" base_Pseudostate="_3GmLAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3GoAMEr4Eem5FfKYTsIbnA" base_Pseudostate="_3GnZIEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3ILfYEr4Eem5FfKYTsIbnA" base_Pseudostate="_3IK4UEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3IMtgEr4Eem5FfKYTsIbnA" base_Pseudostate="_3IMGcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3IN7oEr4Eem5FfKYTsIbnA" base_Pseudostate="_3INUkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3IQX4Er4Eem5FfKYTsIbnA" base_Pseudostate="_3IPw0Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3K5cMEr4Eem5FfKYTsIbnA" base_Pseudostate="_3K41IUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3K6qUEr4Eem5FfKYTsIbnA" base_Pseudostate="_3K6DQEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3K9toEr4Eem5FfKYTsIbnA" base_Pseudostate="_3K7RYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3LB_EEr4Eem5FfKYTsIbnA" base_Pseudostate="_3LBYAEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3N8wMEr4Eem5FfKYTsIbnA" base_Pseudostate="_3Nmx8Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3OAakEr4Eem5FfKYTsIbnA" base_Pseudostate="_3N-lYEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3ODd4Er4Eem5FfKYTsIbnA" base_Pseudostate="_3OC20Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3OEE8Er4Eem5FfKYTsIbnA" base_Pseudostate="_3ODd4Ur4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3QEQEEr4Eem5FfKYTsIbnA" base_Pseudostate="_3QCa4Er4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3QIhgEr4Eem5FfKYTsIbnA" base_Pseudostate="_3QH6cEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3QJIkUr4Eem5FfKYTsIbnA" base_Pseudostate="_3QJIkEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3QKWsEr4Eem5FfKYTsIbnA" base_Pseudostate="_3QJvoEr4Eem5FfKYTsIbnA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_3TfXgEr4Eem5FfKYTsIbnA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_0iZI4Er4Eem5FfKYTsIbnA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_3TgloEr4Eem5FfKYTsIbnA" base_Class="_0iZI4Er4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_3TwdQEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_3TsL0Er4Eem5FfKYTsIbnA"/>
  <RTCppProperties:ParameterProperties xmi:id="_3T0usEr4Eem5FfKYTsIbnA" type="pmd::Message" base_Parameter="_3T0HoEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_3UQzkEr4Eem5FfKYTsIbnA" base_Region="_3UPlcEr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3USBsEr4Eem5FfKYTsIbnA" base_Pseudostate="_3UQzkUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTState xmi:id="_3UVFAEr4Eem5FfKYTsIbnA" base_State="_3USBsUr4Eem5FfKYTsIbnA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_3UakkEr4Eem5FfKYTsIbnA" base_Pseudostate="_3UYIUEr4Eem5FfKYTsIbnA"/>
  <UMLRealTime:CapsulePart xmi:id="_3UutoEr4Eem5FfKYTsIbnA" base_Property="_3Us4cEr4Eem5FfKYTsIbnA"/>
</xmi:XMI>

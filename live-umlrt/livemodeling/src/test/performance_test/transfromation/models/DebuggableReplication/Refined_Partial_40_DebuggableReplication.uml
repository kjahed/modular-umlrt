<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_lYTBoAggEea_md0mpENoqg" name="Replication">
    <eAnnotations xmi:id="_4HZrcAgoEea_md0mpENoqg" source="UMLRT_Default_top">
      <details xmi:id="_4Ha5kAgoEea_md0mpENoqg" key="top_name" value="Debug__Top"/>
    </eAnnotations>
    <eAnnotations xmi:id="_Lcp5MKpbEeiNHY6qjNhZ4w" source="http://www.eclipse.org/papyrus-rt/language/1.0.0">
      <details xmi:id="_LcruYKpbEeiNHY6qjNhZ4w" key="language" value="umlrt-cpp"/>
    </eAnnotations>
    <eAnnotations xmi:id="_GWVRIErkEem8-qg6I5PCBQ" source="dummy"/>
    <eAnnotations xmi:id="_rJ2XQEsbEem5rapzbkaLoQ" source="dummy"/>
    <eAnnotations xmi:id="_HElpIEvzEemuJpD7NxhSGA" source="dummy"/>
    <eAnnotations xmi:id="_oWbk0EwVEemfmZpthn8KRQ" source="dummy"/>
    <eAnnotations xmi:id="_lGoskExYEemjEL6BTeGGaQ" source="dummy"/>
    <eAnnotations xmi:id="_jg0WwEyDEemwVP8SrWSR3A" source="dummy"/>
    <packageImport xmi:id="_st0MYErDEem2BZRQc2M93A">
      <importedPackage xmi:type="uml:Model" href="../CommGateWay/model.uml#_MZw7AAdxEeadtKuU2t6fMg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_rPgFkAggEea_md0mpENoqg" name="ENV">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_vj5dgAghEea_md0mpENoqg" client="_rPgFkAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_sMZ5EAgoEea_md0mpENoqg" name="ENV" visibility="public" classifierBehavior="_gU8CMAgwEea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_GXsSgAgvEea_md0mpENoqg" name="ConfigComm" visibility="public" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NBhGMAgvEea_md0mpENoqg" value="7"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NBssYAgvEea_md0mpENoqg" value="7"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_b1NrIAjLEea_md0mpENoqg" name="FailureTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wQHCAAjLEea_md0mpENoqg" name="BITTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_X4ceIAjMEea_md0mpENoqg" name="GeneralTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lxs5kApkEeaGqPUk-4V4qQ" name="AnnouncmentServer1" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rXZWwApkEeaGqPUk-4V4qQ" name="AnnouncmentServer2" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Iq9iAApmEeaGqPUk-4V4qQ" name="AnnouncementServer1Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_UZHLMApmEeaGqPUk-4V4qQ" name="AnnouncmentServerTimeout">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_UZHLMQpmEeaGqPUk-4V4qQ" value="6"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_bmibMApmEeaGqPUk-4V4qQ" name="AnnouncementServer2Id">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_fXb_wAxwEeaB2MeL96fedA" name="systemConfig" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_fXXuUAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_mKfGEOM2EeaTpaLNj-zYpw" name="configTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_svBtUErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoErDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_svEwoUrDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svgOcErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svg1gErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svhckErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_svkf4ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_vNReUEr4EemA4_kRIR1Qqg" name="dbgPortForENV" visibility="protected" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vNT6kEr4EemA4_kRIR1Qqg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_vNVIsEr4EemA4_kRIR1Qqg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_gU8CMAgwEea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_jSIzIAgwEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_su1hoAgxEea_md0mpENoqg" name="configLoaded" source="_syROkErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_rKgosAigEea_md0mpENoqg" name="LogTransition">
                <language>C++</language>
                <body>    std::cout&lt;&lt;&quot;ENV: The transition from ReadConfig -> Config was taken\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::configLoaded&quot;,(char *)&quot;Debug__Path__configLoaded&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syoa8ErDEem2BZRQc2M93A" name="Debug__configLoaded__E" source="_syX8QErDEem2BZRQc2M93A" target="_dWznsAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sypCAErDEem2BZRQc2M93A" name="Debug__configLoaded__E__6">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__configLoaded__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Config&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_syuhkErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syvvsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__varChange__8">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_syvIoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_syyL8ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_syzaEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__setBreakPoint__9">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_syyzAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy2dYErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy3rgErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__remBreakPoint__10">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy3EcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy5gsErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy6u0ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__viewBreakPoints__11">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy6HwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy7V4ErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy788UrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgSetExecMode__12">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sy788ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sy9LEErDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg" source="_syTDwUrDEem2BZRQc2M93A" target="_syTDwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sy9yIUrDEem2BZRQc2M93A" name="Debug__configLoaded__dbg__dbgDeferMsg__13">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sy9yIErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_szsx8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S" guard="_sztZAUrDEem2BZRQc2M93A" source="_szkPEErDEem2BZRQc2M93A" target="_szmrUUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_sztZAUrDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_sztZAErDEem2BZRQc2M93A" name="Debug__GuardMasterAnnouncment">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szuAEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__S__26">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__MasterAnnouncment__S&quot;,(char *)&quot;Debug__Path__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_szyRgErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szy4kUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__varChange__29">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_szy4kErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_szzfoErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz0GsUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__setBreakPoint__30">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0GsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz0twErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz1U0ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__remBreakPoint__31">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz0twUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz2i8ErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz3KAErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__viewBreakPoints__32">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz2i8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz3xEErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz4YIUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgSetExecMode__33">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_sz4YIErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_sz4_MErDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg" source="_szldMErDEem2BZRQc2M93A" target="_szldMErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sz5mQUrDEem2BZRQc2M93A" name="Debug__MasterAnnouncment__dbg__dbgDeferMsg__34">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_sz5mQErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0kUoErDEem2BZRQc2M93A" name="Debug__server2Failure__S" guard="_s0liwUrDEem2BZRQc2M93A" source="_s0e1EErDEem2BZRQc2M93A" target="_s0gqQUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s0liwUrDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s0liwErDEem2BZRQc2M93A" name="Debug__Guardserver2Failure">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Running&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0mJ0ErDEem2BZRQc2M93A" name="Debug__server2Failure__S__51">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__server2Failure__S&quot;,(char *)&quot;Debug__Path__server2Failure&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s0p0MErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0qbQErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__varChange__54">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s0p0MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rCUErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rCUkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__setBreakPoint__55">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rCUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0rpYErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0rpYkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__remBreakPoint__56">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0rpYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0sQcErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0s3gUrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__viewBreakPoints__57">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0s3gErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0tekErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0tekkrDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgSetExecMode__58">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s0tekUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s0uFoErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg" source="_s0fcIUrDEem2BZRQc2M93A" target="_s0fcIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0v60ErDEem2BZRQc2M93A" name="Debug__server2Failure__dbg__dbgDeferMsg__59">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s0ussErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1lBQErDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1loUUrDEem2BZRQc2M93A" name="Debug__configOK__dbg__varChange__79">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s1loUErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1mPYErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1m2cErDEem2BZRQc2M93A" name="Debug__configOK__dbg__setBreakPoint__80">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1mPYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1ndgErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1oEkErDEem2BZRQc2M93A" name="Debug__configOK__dbg__remBreakPoint__81">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1ndgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1oroErDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1orokrDEem2BZRQc2M93A" name="Debug__configOK__dbg__viewBreakPoints__82">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1oroUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1p5wErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1qg0ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgSetExecMode__83">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s1p5wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s1rH4ErDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg" source="_s1ZbEUrDEem2BZRQc2M93A" target="_s1ZbEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1rH4krDEem2BZRQc2M93A" name="Debug__configOK__dbg__dbgDeferMsg__84">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s1rH4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2SL4ErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2Sy8UrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__varChange__101">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s2Sy8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2UBEErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2UBEkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__setBreakPoint__102">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2UBEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2VPMErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2V2QErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__remBreakPoint__103">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2VPMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2XEYErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2YSgErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__viewBreakPoints__104">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2XEYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2ZgoErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2aHsErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgSetExecMode__105">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s2ZgoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s2auwErDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg" source="_s2JB8ErDEem2BZRQc2M93A" target="_s2JB8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s2auwkrDEem2BZRQc2M93A" name="Debug__Server1Failure__dbg__dbgDeferMsg__106">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s2auwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3RDUErDEem2BZRQc2M93A" name="Debug__ConfigNOK__E" source="_s3MK0UrDEem2BZRQc2M93A" target="_NvBagAgxEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3RDUUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__E__124">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__ConfigNOK__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s3S4gErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3S4gkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__varChange__126">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s3S4gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3TfkErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3UGoUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__setBreakPoint__127">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3UGoErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3UtsErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3VUwUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__remBreakPoint__128">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3VUwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3Wi4ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3Wi4krDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__viewBreakPoints__129">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3Wi4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3XJ8ErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3XxAUrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgSetExecMode__130">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s3XxAErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s3YYEErDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg" source="_s3JHgErDEem2BZRQc2M93A" target="_s3JHgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3YYEkrDEem2BZRQc2M93A" name="Debug__ConfigNOK__dbg__dbgDeferMsg__131">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s3YYEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s34HUUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1" source="_s6YowErDEem2BZRQc2M93A" target="_s31EAErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s34uYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__143">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_s6bFAErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_s37xsErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S" guard="_s38YwUrDEem2BZRQc2M93A" source="_s31EAErDEem2BZRQc2M93A" target="_s32SIUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_s38YwUrDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_s38YwErDEem2BZRQc2M93A" name="Debug__GuardInit__ReadConfig__1">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s38_0ErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__S__145">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__Init__ReadConfig__1__S&quot;,(char *)&quot;Debug__Path__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s4ADIErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4AqMUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__varChange__148">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4AqMErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4BRQErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4BRQkrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__setBreakPoint__149">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4BRQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4B4UErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4CfYErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__remBreakPoint__150">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4B4UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4CfYUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4DGcUrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__viewBreakPoints__151">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4DGcErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4DtgErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4E7oErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgSetExecMode__152">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4EUkErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4FisErDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg" source="_s31rEUrDEem2BZRQc2M93A" target="_s31rEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4FiskrDEem2BZRQc2M93A" name="Debug__Init__ReadConfig__1__dbg__dbgDeferMsg__153">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4FisUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4r_oErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4smsUrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__varChange__170">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s4smsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4tNwErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4t00UrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__setBreakPoint__171">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4t00ErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4ub4ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vC8ErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__remBreakPoint__172">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4ub4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4vqAErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4vqAkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__viewBreakPoints__173">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4vqAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4wREErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4wREkrDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgSetExecMode__174">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s4wREUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s4w4IErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg" source="_s4iOoUrDEem2BZRQc2M93A" target="_s4iOoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4xfMErDEem2BZRQc2M93A" name="Debug__RetryConfig__dbg__dbgDeferMsg__175">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s4w4IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5kJYErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5kwcErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__varChange__195">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s5kJYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5lXgErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5lXgkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__setBreakPoint__196">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5lXgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5l-kErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5mloErDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__remBreakPoint__197">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5l-kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5mloUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nMsUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__viewBreakPoints__198">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5nMsErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nMskrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5nzwUrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgSetExecMode__199">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s5nzwErDEem2BZRQc2M93A" name="Debug__MSG" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s5nzwkrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg" source="_s5ZKQUrDEem2BZRQc2M93A" target="_s5ZKQUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5oa0UrDEem2BZRQc2M93A" name="Debug__QueryConfig__dbg__dbgDeferMsg__200">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s5oa0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_GXsSgAgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s6Z24UrDEem2BZRQc2M93A" name="Debug__InitDebug" source="_npsCMAgwEea_md0mpENoqg" target="_s6YowErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s6ad8ErDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_vU8zoEr4EemA4_kRIR1Qqg" name="Trans__Config10" source="_dWznsAgxEea_md0mpENoqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQaWUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Config&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vV1kcEr4EemA4_kRIR1Qqg" name="11" source="_dWznsAgxEea_md0mpENoqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPVYQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Config&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Config&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vV6c8Er4EemA4_kRIR1Qqg" name="12" source="_s31EAErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRhwoEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vV9gQEr4EemA4_kRIR1Qqg" name="13" source="_szkPEErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRYmsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vV-uYEr4EemA4_kRIR1Qqg" name="14" source="_s0e1EErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPdUEEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vV_8gEr4EemA4_kRIR1Qqg" name="15" source="_syROkErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQsqMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vWMw0Er4EemA4_kRIR1Qqg" name="From__ConfigFailure__16" source="_NvBagAgxEea_md0mpENoqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPxdIEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_vWWh0Er4EemA4_kRIR1Qqg" name="PME_Trig17" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vWgS0Er4EemA4_kRIR1Qqg" name="PME_Trig18" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vWmZcEr4EemA4_kRIR1Qqg" name="PME_Trig19" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vWsgEEr4EemA4_kRIR1Qqg" name="PME_Trig20" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vWymsEr4EemA4_kRIR1Qqg" name="PME_Trig21" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vW7woEr4EemA4_kRIR1Qqg" name="PME_Trig22" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vXDFYEr4EemA4_kRIR1Qqg" name="PME_Trig23" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vXHW0Er4EemA4_kRIR1Qqg" name="PME_Trig24" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vXQgwEr4EemA4_kRIR1Qqg" name="PME_Trig25" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vXcG8Er4EemA4_kRIR1Qqg" name="PME_Trig26" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vXi0oEr4EemA4_kRIR1Qqg" name="PME_Trig27" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_vXoUMEr4EemA4_kRIR1Qqg" name="PME_Trig28" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vXvB4Er4EemA4_kRIR1Qqg" name="PME_Trig29" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vX3kwEr4EemA4_kRIR1Qqg" name="PME_Trig30" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_vX9EUEr4EemA4_kRIR1Qqg" name="PME_Trig31" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_vYDyAEr4EemA4_kRIR1Qqg" name="PME_Trig32" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vYMU4Er4EemA4_kRIR1Qqg" name="PME_Trig33" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_vYVe0Er4EemA4_kRIR1Qqg" name="PME_Trig34" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vYhsEEr4EemA4_kRIR1Qqg" name="PME_Trig35" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
            </transition>
            <transition xmi:id="_vYt5UEr4EemA4_kRIR1Qqg" name="From__Debug__InitState__36" source="_s6YowErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRR5AEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_vY77wEr4EemA4_kRIR1Qqg" name="PME_Trig37" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vZFswEr4EemA4_kRIR1Qqg" name="PME_Trig38" port="_lxs5kApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vZJXIEr4EemA4_kRIR1Qqg" name="PME_Trig39" port="_rXZWwApkEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vZPdwEr4EemA4_kRIR1Qqg" name="PME_Trig40" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vZUWQEr4EemA4_kRIR1Qqg" name="PME_Trig41" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vZcSEEr4EemA4_kRIR1Qqg" name="PME_Trig42" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vZhKkEr4EemA4_kRIR1Qqg" name="PME_Trig43" port="_b1NrIAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vZn4QEr4EemA4_kRIR1Qqg" name="PME_Trig44" port="_wQHCAAjLEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vZsJsEr4EemA4_kRIR1Qqg" name="PME_Trig45" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vZyQUEr4EemA4_kRIR1Qqg" name="PME_Trig46" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vZ3I0Er4EemA4_kRIR1Qqg" name="PME_Trig47" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_vZ9PcEr4EemA4_kRIR1Qqg" name="PME_Trig48" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_vaEkMEr4EemA4_kRIR1Qqg" name="PME_Trig49" port="_mKfGEOM2EeaTpaLNj-zYpw">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vaHngEr4EemA4_kRIR1Qqg" name="PME_Trig50" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_vaQxcEr4EemA4_kRIR1Qqg" name="PME_Trig51" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_vaYGMEr4EemA4_kRIR1Qqg" name="PME_Trig52" port="_X4ceIAjMEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_vabJgEr4EemA4_kRIR1Qqg" name="PME_Trig53" port="_svBtUErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_vajFUEr4EemA4_kRIR1Qqg" name="PME_Trig54" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
              <trigger xmi:id="_vamvsEr4EemA4_kRIR1Qqg" name="PME_Trig55" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
            </transition>
            <transition xmi:id="_vaxHwEr4EemA4_kRIR1Qqg" name="To__ConfigFailure__56" guard="_wR2gw0r4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_NvBagAgxEea_md0mpENoqg">
              <ownedRule xmi:id="_wR2gw0r4EemA4_kRIR1Qqg" name="PME_checkDecesion617">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR2gwkr4EemA4_kRIR1Qqg" name="PME_checkDecesion617">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__ConfigFailure__56&quot;,&quot;ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vay88Er4EemA4_kRIR1Qqg" name="To__Debug__InitState__57" guard="_wR49AUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_s6YowErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_wR49AUr4EemA4_kRIR1Qqg" name="PME_checkDecesion621">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR49AEr4EemA4_kRIR1Qqg" name="PME_checkDecesion621">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__57&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vbA_YEr4EemA4_kRIR1Qqg" name="Trans__ex58" source="_s4kq4UrDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQP-QEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vbDboEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__RetryConfig__60" guard="_wR7ZQUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_vbCNgEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR7ZQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion622">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR7ZQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion622">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__RetryConfig__60&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vbKJUEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__RetryConfig__62" source="_vbEpwEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPIj8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vg8BMUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__configOK__115" guard="_wR1SoUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_vg6zEEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR1SoUr4EemA4_kRIR1Qqg" name="PME_checkDecesion615">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR1SoEr4EemA4_kRIR1Qqg" name="PME_checkDecesion615">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configOK__115&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vg9PUUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__configOK__117" source="_vg8oQEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPtLsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vmBVgUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__QueryConfig__169" guard="_wR2gwUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_vmAHYEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR2gwUr4EemA4_kRIR1Qqg" name="PME_checkDecesion616">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR2gwEr4EemA4_kRIR1Qqg" name="PME_checkDecesion616">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__QueryConfig__169&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vmHcIEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__QueryConfig__171" source="_vmCjoEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQ43cEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vshmIEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Server1Failure__244" guard="_wR3H0Ur4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_vsd7wEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR3H0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion618">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR3H0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion618">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Server1Failure__244&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vskCYEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Server1Failure__246" source="_vsi0QEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQyJwEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vyx_IEr4EemA4_kRIR1Qqg" name="Trans__ex297" source="_sznSYUrDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRJWIEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_vy3esEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__MasterAnnouncment__299" guard="_wR3u4Ur4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_vyymMEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR3u4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion619">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR3u4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion619">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_vzH9YEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__MasterAnnouncment__301" source="_vy-zcEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRwaIEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wCJ34Er4EemA4_kRIR1Qqg" name="Trans__ex393" source="_s3MK0UrDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPZCoEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wCLtEEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ConfigNOK__395" guard="_wR0EgEr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_wCKe8Er4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR0EgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion614">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRzdcEr4EemA4_kRIR1Qqg" name="PME_checkDecesion614">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wCSawEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ConfigNOK__397" source="_wCNiQEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wQjgQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wGEHgEr4EemA4_kRIR1Qqg" name="Trans__ex448" source="_syX8QErDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wP6AAEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wGF8sUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__configLoaded__450" guard="_wR4V8Ur4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_wGEukEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wR4V8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion620">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wR4V8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion620">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__configLoaded__450&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wGMDUEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__configLoaded__452" source="_wGIY8Er4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRoeUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wJo_8Er4EemA4_kRIR1Qqg" name="Trans__ex503" source="_s0hRUUrDEem2BZRQc2M93A" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wRBaUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wJqOEUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__server2Failure__505" guard="_wRy2YUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_wJpnAEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wRy2YUr4EemA4_kRIR1Qqg" name="PME_checkDecesion613">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRy2YEr4EemA4_kRIR1Qqg" name="PME_checkDecesion613">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__server2Failure__505&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wJt4cEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__server2Failure__507" source="_wJq1IEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wP9qYEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wMs7AUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Init__ReadConfig__1__560" guard="_wRyPUUr4EemA4_kRIR1Qqg" source="_vUaBEEr4EemA4_kRIR1Qqg" target="_wMsT8Er4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wRyPUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion612">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wRyPUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion612">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wMvXQUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Init__ReadConfig__1__562" source="_wMuJIEr4EemA4_kRIR1Qqg" target="_vUaBEEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wPko0Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Substates__Debug__C__Init__ReadConfig__1__560&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Substates__Debug__C__server2Failure__505&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Substates__Debug__C__ConfigNOK__395&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Substates__Debug__C__configOK__115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Substates__Debug__C__QueryConfig__169&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;ConfigFailure&quot;,&quot;To__ConfigFailure__56&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Substates__Debug__C__Server1Failure__244&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Substates__Debug__C__MasterAnnouncment__299&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Substates__Debug__C__configLoaded__450&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__57&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Substates__Debug__C__RetryConfig__60&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_npsCMAgwEea_md0mpENoqg" name="Init"/>
            <subvertex xmi:type="uml:State" xmi:id="_NvBagAgxEea_md0mpENoqg" name="ConfigFailure">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_TasAwAjJEea_md0mpENoqg" name="failurEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;&quot;ENV: The system is in Failure State, try to reload the config after 10 second\n&quot;;
    FailureTimer.informIn(UMLRTTimespec(10,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s6n5UErDEem2BZRQc2M93A" name="ConfigFailure__216">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_dWznsAgxEea_md0mpENoqg" name="Config" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_syROkErDEem2BZRQc2M93A" name="Debug__Path__configLoaded" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_syTDwUrDEem2BZRQc2M93A" name="Debug__C__configLoaded">
              <connectionPoint xmi:id="_syX8QErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wGEukEr4EemA4_kRIR1Qqg" name="From__Parent__449" kind="entryPoint"/>
              <connectionPoint xmi:id="_wGIY8Er4EemA4_kRIR1Qqg" name="To__Parent__451" kind="exitPoint"/>
              <region xmi:id="_syTq0ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_szQGAErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded" source="_szMboErDEem2BZRQc2M93A" target="_syX8QErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_szeIcErDEem2BZRQc2M93A" name="Debug__end__trans__configLoaded__21">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__end__trans__configLoaded&quot;,(char *)&quot;Debug__A__Ac__configLoaded&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_szQGAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wGRi4Er4EemA4_kRIR1Qqg" name="Trans__ex455" source="_syX8QErDEem2BZRQc2M93A" target="_wGN4gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wJIpoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__497&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wGSxAEr4EemA4_kRIR1Qqg" name="Trans__Init__State__454456" source="_wGPtsEr4EemA4_kRIR1Qqg" target="_wGN4gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wJa9gEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__454&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__454&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__454&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__497&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__454&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wGaFwEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__configLoaded__457" source="_szMboErDEem2BZRQc2M93A" target="_wGN4gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wJX6MEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__497&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wGbT4Er4EemA4_kRIR1Qqg" name="PME_Trig458" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wGnhIEr4EemA4_kRIR1Qqg" name="PME_Trig459" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wGrLgEr4EemA4_kRIR1Qqg" name="PME_Trig460" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wGxSIEr4EemA4_kRIR1Qqg" name="PME_Trig461" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wGzuYEr4EemA4_kRIR1Qqg" name="PME_Trig462" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wG2xsEr4EemA4_kRIR1Qqg" name="PME_Trig463" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wG4m4Er4EemA4_kRIR1Qqg" name="PME_Trig464" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wG6cEEr4EemA4_kRIR1Qqg" name="PME_Trig465" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wG_UkEr4EemA4_kRIR1Qqg" name="PME_Trig466" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wHC-8Er4EemA4_kRIR1Qqg" name="PME_Trig467" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wHPMMEr4EemA4_kRIR1Qqg" name="PME_Trig468" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wHRocEr4EemA4_kRIR1Qqg" name="PME_Trig469" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wHZkQEr4EemA4_kRIR1Qqg" name="PME_Trig470" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wHcAgEr4EemA4_kRIR1Qqg" name="PME_Trig471" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wHfq4Er4EemA4_kRIR1Qqg" name="PME_Trig472" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wHlKcEr4EemA4_kRIR1Qqg" name="PME_Trig473" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wHm_oEr4EemA4_kRIR1Qqg" name="PME_Trig474" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wHqC8Er4EemA4_kRIR1Qqg" name="PME_Trig475" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wHr4IEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__ReadConfig__476" source="_szG8EErDEem2BZRQc2M93A" target="_wGN4gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wJU24Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ReadConfig&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__497&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ReadConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wHwwoEr4EemA4_kRIR1Qqg" name="PME_Trig477" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wHzz8Er4EemA4_kRIR1Qqg" name="PME_Trig478" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wH1pIEr4EemA4_kRIR1Qqg" name="PME_Trig479" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wH5TgEr4EemA4_kRIR1Qqg" name="PME_Trig480" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wIDrkEr4EemA4_kRIR1Qqg" name="PME_Trig481" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wIFgwEr4EemA4_kRIR1Qqg" name="PME_Trig482" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wINckEr4EemA4_kRIR1Qqg" name="PME_Trig483" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wIRG8Er4EemA4_kRIR1Qqg" name="PME_Trig484" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wIXNkEr4EemA4_kRIR1Qqg" name="PME_Trig485" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wIZCwEr4EemA4_kRIR1Qqg" name="PME_Trig486" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wIcGEEr4EemA4_kRIR1Qqg" name="PME_Trig487" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wId7QEr4EemA4_kRIR1Qqg" name="PME_Trig488" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wIfwcEr4EemA4_kRIR1Qqg" name="PME_Trig489" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wIl3EEr4EemA4_kRIR1Qqg" name="PME_Trig490" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wIo6YEr4EemA4_kRIR1Qqg" name="PME_Trig491" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wIphcEr4EemA4_kRIR1Qqg" name="PME_Trig492" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wIrWoEr4EemA4_kRIR1Qqg" name="PME_Trig493" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wIyrYEr4EemA4_kRIR1Qqg" name="PME_Trig494" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wI0gkEr4EemA4_kRIR1Qqg" name="PME_Trig495" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wJAGwEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__configLoaded__496" guard="_wJhEIUr4EemA4_kRIR1Qqg" source="_wGN4gEr4EemA4_kRIR1Qqg" target="_szMboErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wJhEIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion501">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJhEIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion501">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__configLoaded__496&quot;,&quot;Debug__A__Ac__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wJAGwUr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__ReadConfig__497" guard="_wJlVkUr4EemA4_kRIR1Qqg" source="_wGN4gEr4EemA4_kRIR1Qqg" target="_szG8EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wJlVkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion502">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJlVkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion502">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ReadConfig__497&quot;,&quot;Debug__B__Ex__ReadConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wJBU4Er4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__498" source="_wGEukEr4EemA4_kRIR1Qqg" target="_wGN4gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wJFmUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__C__configLoaded&quot;,&quot;To__Parent__StateMachine1__499&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__A__Ac__configLoaded&quot;,&quot;To__Debug__A__Ac__configLoaded__496&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configLoaded&quot;,&quot;Debug__B__Ex__ReadConfig&quot;,&quot;To__Debug__B__Ex__ReadConfig__497&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configLoaded&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wJB78Er4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__499" guard="_wJfO8Ur4EemA4_kRIR1Qqg" source="_wGN4gEr4EemA4_kRIR1Qqg" target="_wGIY8Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wJfO8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion500">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wJfO8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion500">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__499&quot;,&quot;Debug__C__configLoaded&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_szG8EErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szHjIErDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szRUIUrDEem2BZRQc2M93A" name="Debug__B__Ex__ReadConfig__14">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__B__Ex__ReadConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_szMboErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_szMboUrDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configLoaded&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_szYB0ErDEem2BZRQc2M93A" name="Debug__A__Ac__configLoaded__16">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configLoaded::Region1::Debug__A__Ac__configLoaded&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wGN4gEr4EemA4_kRIR1Qqg" name="DecesionPoint__453" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wGPtsEr4EemA4_kRIR1Qqg" name="Init__State__454"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_szkPEErDEem2BZRQc2M93A" name="Debug__Path__MasterAnnouncment" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_szldMErDEem2BZRQc2M93A" name="Debug__C__MasterAnnouncment">
              <connectionPoint xmi:id="_szmrUUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_sznSYUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_vyymMEr4EemA4_kRIR1Qqg" name="From__Parent__298" kind="entryPoint"/>
              <connectionPoint xmi:id="_vy-zcEr4EemA4_kRIR1Qqg" name="To__Parent__300" kind="exitPoint"/>
              <region xmi:id="_szldMUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s0ElYErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment" source="_szmrUUrDEem2BZRQc2M93A" target="_sz-ewErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0VEEErDEem2BZRQc2M93A" name="Debug__init__trans__MasterAnnouncment__40">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__init__trans__MasterAnnouncment&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s0ElYUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_sz-ewErDEem2BZRQc2M93A" target="_sz_s4ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0WSMErDEem2BZRQc2M93A" name="Debug__Ex__Running__42">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0ElYkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0GakErDEem2BZRQc2M93A" name="Debug__AC__MasterAnnouncment" source="_sz_s4ErDEem2BZRQc2M93A" target="_s0BiEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HBoErDEem2BZRQc2M93A" name="RegisterMaster" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Master Annoucment from &quot;&lt;&lt; MasterName&lt;&lt;&quot;\n&quot;;
    if (strcmp((char *)MasterName,&quot;server1&quot;)==0)
    {
    systemConfig.MasterList[0]=true;
    if (AnnouncementServer1Id.isValid())
    AnnouncmentServer1.cancelTimer(AnnouncementServer1Id);
    AnnouncementServer1Id=AnnouncmentServer1.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    else if (strcmp((char *)MasterName,&quot;server2&quot;)==0)
    {
    systemConfig.MasterList[1]=true;
    if (AnnouncementServer2Id.isValid())
    AnnouncmentServer2.cancelTimer(AnnouncementServer2Id);
    AnnouncementServer2Id=AnnouncmentServer2.informEvery(UMLRTTimespec(AnnouncmentServerTimeout,0),4);
    }
    // the following code has been generated
    if ((systemConfig.RunningMode==1)&amp;&amp; (systemConfig.MasterList[0] ) &amp;&amp; (systemConfig.MasterList[1]))
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Violation, there are 2 master in passive mode\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__AC__MasterAnnouncment&quot;,(char *)&quot;Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0GakUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0HosErDEem2BZRQc2M93A" name="Debug__En__Running" source="_s0BiEErDEem2BZRQc2M93A" target="_s0DXQErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0HoskrDEem2BZRQc2M93A" name="runningEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__En__Running&quot;,(char *)&quot;Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0HosUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s0IPwErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment" source="_s0DXQErDEem2BZRQc2M93A" target="_sznSYUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s0Z8kErDEem2BZRQc2M93A" name="Debug__end__trans__MasterAnnouncment__46">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__end__trans__MasterAnnouncment&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0IPwUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_vzzS0Er4EemA4_kRIR1Qqg" name="Trans__ex304" source="_sznSYUrDEem2BZRQc2M93A" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wB6AQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vz1IAEr4EemA4_kRIR1Qqg" name="Trans__Init__State__303305" source="_vzYcEEr4EemA4_kRIR1Qqg" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBnFUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__303&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__303&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_v0ZIsEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Running__306" source="_s0DXQErDEem2BZRQc2M93A" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBphkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_v0l9AEr4EemA4_kRIR1Qqg" name="PME_Trig307" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v0wVEEr4EemA4_kRIR1Qqg" name="PME_Trig308" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v0-XgEr4EemA4_kRIR1Qqg" name="PME_Trig309" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v1O2MEr4EemA4_kRIR1Qqg" name="PME_Trig310" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v1hKEEr4EemA4_kRIR1Qqg" name="PME_Trig311" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v1zd8Er4EemA4_kRIR1Qqg" name="PME_Trig312" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v2EjsEr4EemA4_kRIR1Qqg" name="PME_Trig313" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v2W3kEr4EemA4_kRIR1Qqg" name="PME_Trig314" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v2n9UEr4EemA4_kRIR1Qqg" name="PME_Trig315" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v2zjgEr4EemA4_kRIR1Qqg" name="PME_Trig316" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v2_wwEr4EemA4_kRIR1Qqg" name="PME_Trig317" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_v3L-AEr4EemA4_kRIR1Qqg" name="PME_Trig318" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v3angEr4EemA4_kRIR1Qqg" name="PME_Trig319" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v3jxcEr4EemA4_kRIR1Qqg" name="PME_Trig320" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_v3s7YEr4EemA4_kRIR1Qqg" name="PME_Trig321" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v3zCAEr4EemA4_kRIR1Qqg" name="PME_Trig322" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_v4BrgEr4EemA4_kRIR1Qqg" name="PME_Trig323" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v4MDkEr4EemA4_kRIR1Qqg" name="PME_Trig324" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_v4gzsEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__MasterAnnouncment__325" source="_s0BiEErDEem2BZRQc2M93A" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBMOkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_v4ovgEr4EemA4_kRIR1Qqg" name="PME_Trig326" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v41j0Er4EemA4_kRIR1Qqg" name="PME_Trig327" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v44nIEr4EemA4_kRIR1Qqg" name="PME_Trig328" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v46cUEr4EemA4_kRIR1Qqg" name="PME_Trig329" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v5N-UEr4EemA4_kRIR1Qqg" name="PME_Trig330" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v7LGIEr4EemA4_kRIR1Qqg" name="PME_Trig331" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v7UQEEr4EemA4_kRIR1Qqg" name="PME_Trig332" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v7WsUEr4EemA4_kRIR1Qqg" name="PME_Trig333" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v7eoIEr4EemA4_kRIR1Qqg" name="PME_Trig334" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v7qOUEr4EemA4_kRIR1Qqg" name="PME_Trig335" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v70mYEr4EemA4_kRIR1Qqg" name="PME_Trig336" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_v8IIYEr4EemA4_kRIR1Qqg" name="PME_Trig337" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v8c4gEr4EemA4_kRIR1Qqg" name="PME_Trig338" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v9GYwEr4EemA4_kRIR1Qqg" name="PME_Trig339" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_v9QJwEr4EemA4_kRIR1Qqg" name="PME_Trig340" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v9ZTsEr4EemA4_kRIR1Qqg" name="PME_Trig341" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_v9cXAEr4EemA4_kRIR1Qqg" name="PME_Trig342" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v9vR8Er4EemA4_kRIR1Qqg" name="PME_Trig343" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_v94b4Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Running__344" source="_sz-ewErDEem2BZRQc2M93A" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBUxcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_v997cEr4EemA4_kRIR1Qqg" name="PME_Trig345" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v-LW0Er4EemA4_kRIR1Qqg" name="PME_Trig346" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v-W9AEr4EemA4_kRIR1Qqg" name="PME_Trig347" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v-guAEr4EemA4_kRIR1Qqg" name="PME_Trig348" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v-k_cEr4EemA4_kRIR1Qqg" name="PME_Trig349" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v-qfAEr4EemA4_kRIR1Qqg" name="PME_Trig350" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v-s7QEr4EemA4_kRIR1Qqg" name="PME_Trig351" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v-zB4Er4EemA4_kRIR1Qqg" name="PME_Trig352" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v-03EEr4EemA4_kRIR1Qqg" name="PME_Trig353" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v-3TUEr4EemA4_kRIR1Qqg" name="PME_Trig354" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v--oEEr4EemA4_kRIR1Qqg" name="PME_Trig355" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_v_BEUEr4EemA4_kRIR1Qqg" name="PME_Trig356" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v_EHoEr4EemA4_kRIR1Qqg" name="PME_Trig357" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v_Gj4Er4EemA4_kRIR1Qqg" name="PME_Trig358" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_v_NRkEr4EemA4_kRIR1Qqg" name="PME_Trig359" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v_PGwEr4EemA4_kRIR1Qqg" name="PME_Trig360" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_v_Q78Er4EemA4_kRIR1Qqg" name="PME_Trig361" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v_T_QEr4EemA4_kRIR1Qqg" name="PME_Trig362" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_v_eXUEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__MasterAnnouncment__363" source="_sz_s4ErDEem2BZRQc2M93A" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBd7YEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_v_j24Er4EemA4_kRIR1Qqg" name="PME_Trig364" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v_oIUEr4EemA4_kRIR1Qqg" name="PME_Trig365" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v_qkkEr4EemA4_kRIR1Qqg" name="PME_Trig366" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_v_x5UEr4EemA4_kRIR1Qqg" name="PME_Trig367" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v_08oEr4EemA4_kRIR1Qqg" name="PME_Trig368" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_v_4nAEr4EemA4_kRIR1Qqg" name="PME_Trig369" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_v_-toEr4EemA4_kRIR1Qqg" name="PME_Trig370" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wAGpcEr4EemA4_kRIR1Qqg" name="PME_Trig371" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wAK64Er4EemA4_kRIR1Qqg" name="PME_Trig372" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wAPzYEr4EemA4_kRIR1Qqg" name="PME_Trig373" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wASPoEr4EemA4_kRIR1Qqg" name="PME_Trig374" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wAV6AEr4EemA4_kRIR1Qqg" name="PME_Trig375" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wAbZkEr4EemA4_kRIR1Qqg" name="PME_Trig376" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wAhgMEr4EemA4_kRIR1Qqg" name="PME_Trig377" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wAlKkEr4EemA4_kRIR1Qqg" name="PME_Trig378" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wAm_wEr4EemA4_kRIR1Qqg" name="PME_Trig379" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wAu7kEr4EemA4_kRIR1Qqg" name="PME_Trig380" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wAz0EEr4EemA4_kRIR1Qqg" name="PME_Trig381" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wA7I0Er4EemA4_kRIR1Qqg" name="To__Debug__A__En__Running__382" guard="_wB_f0Ur4EemA4_kRIR1Qqg" source="_vzM14Er4EemA4_kRIR1Qqg" target="_s0DXQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wB_f0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion389">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB_f0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion389">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__382&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wA7v4Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__MasterAnnouncment__383" guard="_wCBVAUr4EemA4_kRIR1Qqg" source="_vzM14Er4EemA4_kRIR1Qqg" target="_s0BiEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wCBVAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion391">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCBVAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion391">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wA9lEEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Running__384" guard="_wCAG4Ur4EemA4_kRIR1Qqg" source="_vzM14Er4EemA4_kRIR1Qqg" target="_sz-ewErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wCAG4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion390">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCAG4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion390">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__384&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wA-zMEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__MasterAnnouncment__385" guard="_wB-RsUr4EemA4_kRIR1Qqg" source="_vzM14Er4EemA4_kRIR1Qqg" target="_sz_s4ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wB-RsUr4EemA4_kRIR1Qqg" name="PME_checkDecesion388">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wB-RsEr4EemA4_kRIR1Qqg" name="PME_checkDecesion388">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wBDrsEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__386" source="_vyymMEr4EemA4_kRIR1Qqg" target="_vzM14Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wBP48Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ac__MasterAnnouncment&quot;,&quot;To__Debug__B__Ac__MasterAnnouncment__385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__382&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__384&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__A__Ac__MasterAnnouncment&quot;,&quot;To__Debug__A__Ac__MasterAnnouncment__383&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnouncment&quot;,&quot;Debug__C__MasterAnnouncment&quot;,&quot;To__Parent__StateMachine1__387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnouncment&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wBESwEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__387" guard="_wCCjIUr4EemA4_kRIR1Qqg" source="_vzM14Er4EemA4_kRIR1Qqg" target="_vy-zcEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wCCjIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion392">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wCCjIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion392">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__387&quot;,&quot;Debug__C__MasterAnnouncment&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_sz-ewErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz-ewUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0KE8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Running__35">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_sz_s4ErDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sz_s4UrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0NIQUrDEem2BZRQc2M93A" name="Debug__B__Ac__MasterAnnouncment__36">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__B__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0BiEErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0BiEUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnouncment&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0PkgUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnouncment__37">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__Ac__MasterAnnouncment&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s0DXQErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s0DXQUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s0SAwErDEem2BZRQc2M93A" name="Debug__A__En__Running__38">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__MasterAnnouncment::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vzM14Er4EemA4_kRIR1Qqg" name="DecesionPoint__302" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vzYcEEr4EemA4_kRIR1Qqg" name="Init__State__303"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s0e1EErDEem2BZRQc2M93A" name="Debug__Path__server2Failure" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s0fcIUrDEem2BZRQc2M93A" name="Debug__C__server2Failure">
              <connectionPoint xmi:id="_s0gqQUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s0hRUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wJpnAEr4EemA4_kRIR1Qqg" name="From__Parent__504" kind="entryPoint"/>
              <connectionPoint xmi:id="_wJq1IEr4EemA4_kRIR1Qqg" name="To__Parent__506" kind="exitPoint"/>
              <region xmi:id="_s0fcIkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s099QUrDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure" source="_s05EwErDEem2BZRQc2M93A" target="_s0hRUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s1TUcErDEem2BZRQc2M93A" name="Debug__end__trans__server2Failure__71">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__end__trans__server2Failure&quot;,(char *)&quot;Debug__A__En__Running&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s0-kUErDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wJ3pcEr4EemA4_kRIR1Qqg" name="Trans__ex510" source="_s0hRUUrDEem2BZRQc2M93A" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMZZAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wJ4QgEr4EemA4_kRIR1Qqg" name="Trans__en511" source="_s0gqQUrDEem2BZRQc2M93A" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMeRgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wJ4QgUr4EemA4_kRIR1Qqg" name="Trans__Init__State__509512" source="_wJzYAEr4EemA4_kRIR1Qqg" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMkYIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__509&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__509&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__509&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__509&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wJ9wEEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Running__513" source="_s05EwErDEem2BZRQc2M93A" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMb1QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wKAMUEr4EemA4_kRIR1Qqg" name="PME_Trig514" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wKD2sEr4EemA4_kRIR1Qqg" name="PME_Trig515" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wKKkYEr4EemA4_kRIR1Qqg" name="PME_Trig516" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wKNnsEr4EemA4_kRIR1Qqg" name="PME_Trig517" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wKPc4Er4EemA4_kRIR1Qqg" name="PME_Trig518" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wKUVYEr4EemA4_kRIR1Qqg" name="PME_Trig519" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wKYm0Er4EemA4_kRIR1Qqg" name="PME_Trig520" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wKetcEr4EemA4_kRIR1Qqg" name="PME_Trig521" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wKhJsEr4EemA4_kRIR1Qqg" name="PME_Trig522" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wKiX0Er4EemA4_kRIR1Qqg" name="PME_Trig523" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wKjl8Er4EemA4_kRIR1Qqg" name="PME_Trig524" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wKlbIEr4EemA4_kRIR1Qqg" name="PME_Trig525" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wKvMIEr4EemA4_kRIR1Qqg" name="PME_Trig526" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wKwaQEr4EemA4_kRIR1Qqg" name="PME_Trig527" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wKyPcEr4EemA4_kRIR1Qqg" name="PME_Trig528" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wK0rsEr4EemA4_kRIR1Qqg" name="PME_Trig529" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wK2g4Er4EemA4_kRIR1Qqg" name="PME_Trig530" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wK7ZYEr4EemA4_kRIR1Qqg" name="PME_Trig531" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wK9OkEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__server2Failure__532" source="_s02BcErDEem2BZRQc2M93A" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMlmQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wLBgAEr4EemA4_kRIR1Qqg" name="PME_Trig533" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wLEjUEr4EemA4_kRIR1Qqg" name="PME_Trig534" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wLGYgEr4EemA4_kRIR1Qqg" name="PME_Trig535" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wLI0wEr4EemA4_kRIR1Qqg" name="PME_Trig536" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wLPicEr4EemA4_kRIR1Qqg" name="PME_Trig537" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wLR-sEr4EemA4_kRIR1Qqg" name="PME_Trig538" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wLUa8Er4EemA4_kRIR1Qqg" name="PME_Trig539" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wLWQIEr4EemA4_kRIR1Qqg" name="PME_Trig540" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wLc90Er4EemA4_kRIR1Qqg" name="PME_Trig541" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wLgoMEr4EemA4_kRIR1Qqg" name="PME_Trig542" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wLidYEr4EemA4_kRIR1Qqg" name="PME_Trig543" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wLpyIEr4EemA4_kRIR1Qqg" name="PME_Trig544" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wLrAQEr4EemA4_kRIR1Qqg" name="PME_Trig545" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wLxG4Er4EemA4_kRIR1Qqg" name="PME_Trig546" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wL0xQEr4EemA4_kRIR1Qqg" name="PME_Trig547" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wL6Q0Er4EemA4_kRIR1Qqg" name="PME_Trig548" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wL9UIEr4EemA4_kRIR1Qqg" name="PME_Trig549" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wL-iQEr4EemA4_kRIR1Qqg" name="PME_Trig550" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wMEo4Er4EemA4_kRIR1Qqg" name="PME_Trig551" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wMHsMEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Running__552" guard="_wMm0YUr4EemA4_kRIR1Qqg" source="_wJyJ4Er4EemA4_kRIR1Qqg" target="_s05EwErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wMm0YUr4EemA4_kRIR1Qqg" name="PME_checkDecesion557">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMm0YEr4EemA4_kRIR1Qqg" name="PME_checkDecesion557">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__552&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wMITQEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__server2Failure__553" guard="_wMmNUUr4EemA4_kRIR1Qqg" source="_wJyJ4Er4EemA4_kRIR1Qqg" target="_s02BcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wMmNUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion556">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMmNUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion556">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__server2Failure__553&quot;,&quot;Debug__B__Ac__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wMNy0Er4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__554" source="_wJpnAEr4EemA4_kRIR1Qqg" target="_wJyJ4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wMSrUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__B__Ac__server2Failure&quot;,&quot;To__Debug__B__Ac__server2Failure__553&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__552&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__server2Failure&quot;,&quot;Debug__C__server2Failure&quot;,&quot;To__Parent__StateMachine1__555&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__server2Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wMPA8Er4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__555" guard="_wMqewUr4EemA4_kRIR1Qqg" source="_wJyJ4Er4EemA4_kRIR1Qqg" target="_wJq1IEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wMqewUr4EemA4_kRIR1Qqg" name="PME_checkDecesion558">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wMqewEr4EemA4_kRIR1Qqg" name="PME_checkDecesion558">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__555&quot;,&quot;Debug__C__server2Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s02BcErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s02BcUrDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;server2Failure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1C1wErDEem2BZRQc2M93A" name="Debug__B__Ac__server2Failure__61">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__B__Ac__server2Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s05EwErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s05EwUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s1JjcErDEem2BZRQc2M93A" name="Debug__A__En__Running__63">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__server2Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wJyJ4Er4EemA4_kRIR1Qqg" name="DecesionPoint__508" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wJzYAEr4EemA4_kRIR1Qqg" name="Init__State__509"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s1ZbEUrDEem2BZRQc2M93A" name="Debug__C__configOK">
              <connectionPoint xmi:id="_vg6zEEr4EemA4_kRIR1Qqg" name="From__Parent__114" kind="entryPoint"/>
              <connectionPoint xmi:id="_vg8oQEr4EemA4_kRIR1Qqg" name="To__Parent__116" kind="exitPoint"/>
              <region xmi:id="_s1ZbEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_vhKDoEr4EemA4_kRIR1Qqg" name="Trans__Init__State__119120" source="_vhGZQEr4EemA4_kRIR1Qqg" target="_vhA5sEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vlvBoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__119&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__119&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__119&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__119&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vhRYYEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__configOK__121" source="_s1uLMUrDEem2BZRQc2M93A" target="_vhA5sEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vlbfoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vhYGEEr4EemA4_kRIR1Qqg" name="PME_Trig122" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vhbwcEr4EemA4_kRIR1Qqg" name="PME_Trig123" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vhjsQEr4EemA4_kRIR1Qqg" name="PME_Trig124" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vhmIgEr4EemA4_kRIR1Qqg" name="PME_Trig125" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vhuEUEr4EemA4_kRIR1Qqg" name="PME_Trig126" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vhzj4Er4EemA4_kRIR1Qqg" name="PME_Trig127" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vh6RkEr4EemA4_kRIR1Qqg" name="PME_Trig128" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_viCNYEr4EemA4_kRIR1Qqg" name="PME_Trig129" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_viEpoEr4EemA4_kRIR1Qqg" name="PME_Trig130" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_viNzkEr4EemA4_kRIR1Qqg" name="PME_Trig131" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_viRd8Er4EemA4_kRIR1Qqg" name="PME_Trig132" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_viYLoEr4EemA4_kRIR1Qqg" name="PME_Trig133" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vie5UEr4EemA4_kRIR1Qqg" name="PME_Trig134" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_viijsEr4EemA4_kRIR1Qqg" name="PME_Trig135" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_virGkEr4EemA4_kRIR1Qqg" name="PME_Trig136" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vixNMEr4EemA4_kRIR1Qqg" name="PME_Trig137" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vi2FsEr4EemA4_kRIR1Qqg" name="PME_Trig138" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vi9acEr4EemA4_kRIR1Qqg" name="PME_Trig139" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vjBr4Er4EemA4_kRIR1Qqg" name="PME_Trig140" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vjJnsEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__configOK__141" source="_s1wAYErDEem2BZRQc2M93A" target="_vhA5sEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vlX1QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vjK10Er4EemA4_kRIR1Qqg" name="PME_Trig142" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vjSKkEr4EemA4_kRIR1Qqg" name="PME_Trig143" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vjVN4Er4EemA4_kRIR1Qqg" name="PME_Trig144" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vjaGYEr4EemA4_kRIR1Qqg" name="PME_Trig145" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vje-4Er4EemA4_kRIR1Qqg" name="PME_Trig146" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vjlFgEr4EemA4_kRIR1Qqg" name="PME_Trig147" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vjqlEEr4EemA4_kRIR1Qqg" name="PME_Trig148" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vjzH8Er4EemA4_kRIR1Qqg" name="PME_Trig149" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vj2yUEr4EemA4_kRIR1Qqg" name="PME_Trig150" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vj-HEEr4EemA4_kRIR1Qqg" name="PME_Trig151" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vkGp8Er4EemA4_kRIR1Qqg" name="PME_Trig152" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vkLicEr4EemA4_kRIR1Qqg" name="PME_Trig153" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vkSQIEr4EemA4_kRIR1Qqg" name="PME_Trig154" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vkaL8Er4EemA4_kRIR1Qqg" name="PME_Trig155" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vkdPQEr4EemA4_kRIR1Qqg" name="PME_Trig156" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vkjV4Er4EemA4_kRIR1Qqg" name="PME_Trig157" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vknnUEr4EemA4_kRIR1Qqg" name="PME_Trig158" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vkwKMEr4EemA4_kRIR1Qqg" name="PME_Trig159" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vk4tEEr4EemA4_kRIR1Qqg" name="PME_Trig160" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vlB3AEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__configOK__161" guard="_vl2WYUr4EemA4_kRIR1Qqg" source="_vhA5sEr4EemA4_kRIR1Qqg" target="_s1uLMUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vl2WYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion166">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vl2WYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion166">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__configOK__161&quot;,&quot;Debug__B__Ac__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vlDsMEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__configOK__162" guard="_vlyE8Ur4EemA4_kRIR1Qqg" source="_vhA5sEr4EemA4_kRIR1Qqg" target="_s1wAYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vlyE8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion165">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vlyE8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion165">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__configOK__162&quot;,&quot;Debug__A__En__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vlGIcEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__163" source="_vg6zEEr4EemA4_kRIR1Qqg" target="_vhA5sEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vllQoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__A__En__configOK&quot;,&quot;To__Debug__A__En__configOK__162&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__B__Ac__configOK&quot;,&quot;To__Debug__B__Ac__configOK__161&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__configOK&quot;,&quot;Debug__C__configOK&quot;,&quot;To__Parent__StateMachine1__164&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__configOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vlH9oEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__164" guard="_vl4LkUr4EemA4_kRIR1Qqg" source="_vhA5sEr4EemA4_kRIR1Qqg" target="_vg8oQEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_vl4LkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion167">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vl4LkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion167">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__164&quot;,&quot;Debug__C__configOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s1uLMUrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1uLMkrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;configOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s11f8UrDEem2BZRQc2M93A" name="Debug__B__Ac__configOK__85">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__B__Ac__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s1wAYErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s1wncErDEem2BZRQc2M93A" name="Debug__A__En__configOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s18NoUrDEem2BZRQc2M93A" name="Debug__A__En__configOK__87">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__configOK::Region1::Debug__A__En__configOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vhA5sEr4EemA4_kRIR1Qqg" name="DecesionPoint__118" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vhGZQEr4EemA4_kRIR1Qqg" name="Init__State__119"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s2JB8ErDEem2BZRQc2M93A" name="Debug__C__Server1Failure">
              <connectionPoint xmi:id="_vsd7wEr4EemA4_kRIR1Qqg" name="From__Parent__243" kind="entryPoint"/>
              <connectionPoint xmi:id="_vsi0QEr4EemA4_kRIR1Qqg" name="To__Parent__245" kind="exitPoint"/>
              <region xmi:id="_s2JB8UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_vsw2sEr4EemA4_kRIR1Qqg" name="Trans__Init__State__248249" source="_vsslQEr4EemA4_kRIR1Qqg" target="_vsnFsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vx7qkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__248&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__291&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__248&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__248&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__293&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__248&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vs29UEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Running__250" source="_s2eZIUrDEem2BZRQc2M93A" target="_vsnFsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vxKOgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__291&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__293&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vs4LcEr4EemA4_kRIR1Qqg" name="PME_Trig251" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vtAHQEr4EemA4_kRIR1Qqg" name="PME_Trig252" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vtCjgEr4EemA4_kRIR1Qqg" name="PME_Trig253" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vtLGYEr4EemA4_kRIR1Qqg" name="PME_Trig254" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vtOwwEr4EemA4_kRIR1Qqg" name="PME_Trig255" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vtVecEr4EemA4_kRIR1Qqg" name="PME_Trig256" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vtczMEr4EemA4_kRIR1Qqg" name="PME_Trig257" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vtfPcEr4EemA4_kRIR1Qqg" name="PME_Trig258" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vthEoEr4EemA4_kRIR1Qqg" name="PME_Trig259" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vtpngEr4EemA4_kRIR1Qqg" name="PME_Trig260" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vtt48Er4EemA4_kRIR1Qqg" name="PME_Trig261" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vt1NsEr4EemA4_kRIR1Qqg" name="PME_Trig262" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vt9JgEr4EemA4_kRIR1Qqg" name="PME_Trig263" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vuCpEEr4EemA4_kRIR1Qqg" name="PME_Trig264" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vuJWwEr4EemA4_kRIR1Qqg" name="PME_Trig265" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vuPdYEr4EemA4_kRIR1Qqg" name="PME_Trig266" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vuTu0Er4EemA4_kRIR1Qqg" name="PME_Trig267" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vubDkEr4EemA4_kRIR1Qqg" name="PME_Trig268" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vuc4wEr4EemA4_kRIR1Qqg" name="PME_Trig269" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vuet8Er4EemA4_kRIR1Qqg" name="From__Debug__A__En__Running__270" source="_s2j4sErDEem2BZRQc2M93A" target="_vsnFsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vySP4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__291&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__293&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vuhKMEr4EemA4_kRIR1Qqg" name="PME_Trig271" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vujmcEr4EemA4_kRIR1Qqg" name="PME_Trig272" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vuk0kEr4EemA4_kRIR1Qqg" name="PME_Trig273" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vuq7MEr4EemA4_kRIR1Qqg" name="PME_Trig274" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vu1TQEr4EemA4_kRIR1Qqg" name="PME_Trig275" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vu7Z4Er4EemA4_kRIR1Qqg" name="PME_Trig276" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vu_EQEr4EemA4_kRIR1Qqg" name="PME_Trig277" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vvEj0Er4EemA4_kRIR1Qqg" name="PME_Trig278" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vvHAEEr4EemA4_kRIR1Qqg" name="PME_Trig279" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vvQxEEr4EemA4_kRIR1Qqg" name="PME_Trig280" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vvYF0Er4EemA4_kRIR1Qqg" name="PME_Trig281" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vvZ7AEr4EemA4_kRIR1Qqg" name="PME_Trig282" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vvezgEr4EemA4_kRIR1Qqg" name="PME_Trig283" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vvjsAEr4EemA4_kRIR1Qqg" name="PME_Trig284" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vvmIQEr4EemA4_kRIR1Qqg" name="PME_Trig285" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vvrAwEr4EemA4_kRIR1Qqg" name="PME_Trig286" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vv5DMEr4EemA4_kRIR1Qqg" name="PME_Trig287" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vwGekEr4EemA4_kRIR1Qqg" name="PME_Trig288" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vwKI8Er4EemA4_kRIR1Qqg" name="PME_Trig289" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vwaAkEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Running__290" guard="_vyd2EUr4EemA4_kRIR1Qqg" source="_vsnFsEr4EemA4_kRIR1Qqg" target="_s2eZIUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vyd2EUr4EemA4_kRIR1Qqg" name="PME_checkDecesion295">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyd2EEr4EemA4_kRIR1Qqg" name="PME_checkDecesion295">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__290&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vwh8YEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Running__291" guard="_vyYWgEr4EemA4_kRIR1Qqg" source="_vsnFsEr4EemA4_kRIR1Qqg" target="_s2j4sErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vyYWgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion294">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyXvcEr4EemA4_kRIR1Qqg" name="PME_checkDecesion294">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__291&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vwybEEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__292" source="_vsd7wEr4EemA4_kRIR1Qqg" target="_vsnFsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vxtoIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__291&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__290&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Server1Failure&quot;,&quot;Debug__C__Server1Failure&quot;,&quot;To__Parent__StateMachine1__293&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Server1Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vwzCIEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__293" guard="_vyjVoUr4EemA4_kRIR1Qqg" source="_vsnFsEr4EemA4_kRIR1Qqg" target="_vsi0QEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_vyjVoUr4EemA4_kRIR1Qqg" name="PME_checkDecesion296">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vyjVoEr4EemA4_kRIR1Qqg" name="PME_checkDecesion296">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__293&quot;,&quot;Debug__C__Server1Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s2eZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2fAMErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2p_UErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__107">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s2j4sErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s2j4sUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s2zJQErDEem2BZRQc2M93A" name="Debug__A__En__Running__110">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Server1Failure::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vsnFsEr4EemA4_kRIR1Qqg" name="DecesionPoint__247" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vsslQEr4EemA4_kRIR1Qqg" name="Init__State__248"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s3JHgErDEem2BZRQc2M93A" name="Debug__C__ConfigNOK">
              <connectionPoint xmi:id="_s3MK0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wCKe8Er4EemA4_kRIR1Qqg" name="From__Parent__394" kind="entryPoint"/>
              <connectionPoint xmi:id="_wCNiQEr4EemA4_kRIR1Qqg" name="To__Parent__396" kind="exitPoint"/>
              <region xmi:id="_s3JHgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s3gT4ErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK" source="_s3d3oErDEem2BZRQc2M93A" target="_s3MK0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s3u9YErDEem2BZRQc2M93A" name="Debug__end__trans__ConfigNOK__140">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__end__trans__ConfigNOK&quot;,(char *)&quot;Debug__A__En__ConfigNOK&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s3gT4UrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wCdZ4Er4EemA4_kRIR1Qqg" name="Trans__ex400" source="_s3MK0UrDEem2BZRQc2M93A" target="_wCTo4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wFT5kEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__441&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__444&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wCeA8Er4EemA4_kRIR1Qqg" name="Trans__Init__State__399401" source="_wCVeEEr4EemA4_kRIR1Qqg" target="_wCTo4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wFh8AEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__399&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__441&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__399&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__444&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__399&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__399&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wCkuoEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__ConfigNOK__402" source="_s3d3oErDEem2BZRQc2M93A" target="_wCTo4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wFNL4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__441&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__444&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wCpAEEr4EemA4_kRIR1Qqg" name="PME_Trig403" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wCrcUEr4EemA4_kRIR1Qqg" name="PME_Trig404" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wCyKAEr4EemA4_kRIR1Qqg" name="PME_Trig405" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wC1NUEr4EemA4_kRIR1Qqg" name="PME_Trig406" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wC4QoEr4EemA4_kRIR1Qqg" name="PME_Trig407" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wC6s4Er4EemA4_kRIR1Qqg" name="PME_Trig408" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wDBakEr4EemA4_kRIR1Qqg" name="PME_Trig409" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wDHhMEr4EemA4_kRIR1Qqg" name="PME_Trig410" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wDJWYEr4EemA4_kRIR1Qqg" name="PME_Trig411" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wDNAwEr4EemA4_kRIR1Qqg" name="PME_Trig412" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wDR5QEr4EemA4_kRIR1Qqg" name="PME_Trig413" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wDTucEr4EemA4_kRIR1Qqg" name="PME_Trig414" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wDZ1EEr4EemA4_kRIR1Qqg" name="PME_Trig415" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wDcRUEr4EemA4_kRIR1Qqg" name="PME_Trig416" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wDf7sEr4EemA4_kRIR1Qqg" name="PME_Trig417" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wDhw4Er4EemA4_kRIR1Qqg" name="PME_Trig418" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wDmpYEr4EemA4_kRIR1Qqg" name="PME_Trig419" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wDswAEr4EemA4_kRIR1Qqg" name="PME_Trig420" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wDvMQEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__ConfigNOK__421" source="_s3bbYUrDEem2BZRQc2M93A" target="_wCTo4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wFWV0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__441&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__444&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wDwaYEr4EemA4_kRIR1Qqg" name="PME_Trig422" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wDyPkEr4EemA4_kRIR1Qqg" name="PME_Trig423" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wD4WMEr4EemA4_kRIR1Qqg" name="PME_Trig424" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wD6ycEr4EemA4_kRIR1Qqg" name="PME_Trig425" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wD_D4Er4EemA4_kRIR1Qqg" name="PME_Trig426" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wEDVUEr4EemA4_kRIR1Qqg" name="PME_Trig427" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wEFKgEr4EemA4_kRIR1Qqg" name="PME_Trig428" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wEJb8Er4EemA4_kRIR1Qqg" name="PME_Trig429" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wEOUcEr4EemA4_kRIR1Qqg" name="PME_Trig430" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wEQwsEr4EemA4_kRIR1Qqg" name="PME_Trig431" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wEWQQEr4EemA4_kRIR1Qqg" name="PME_Trig432" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wEYsgEr4EemA4_kRIR1Qqg" name="PME_Trig433" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wEbIwEr4EemA4_kRIR1Qqg" name="PME_Trig434" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wEidgEr4EemA4_kRIR1Qqg" name="PME_Trig435" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wEk5wEr4EemA4_kRIR1Qqg" name="PME_Trig436" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wEpyQEr4EemA4_kRIR1Qqg" name="PME_Trig437" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wEyVIEr4EemA4_kRIR1Qqg" name="PME_Trig438" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wE4bwEr4EemA4_kRIR1Qqg" name="PME_Trig439" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wE97UEr4EemA4_kRIR1Qqg" name="PME_Trig440" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wFCz0Er4EemA4_kRIR1Qqg" name="To__Debug__A__En__ConfigNOK__441" guard="_wFijEUr4EemA4_kRIR1Qqg" source="_wCTo4Er4EemA4_kRIR1Qqg" target="_s3d3oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wFijEUr4EemA4_kRIR1Qqg" name="PME_checkDecesion445">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wFijEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion445">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__ConfigNOK__441&quot;,&quot;Debug__A__En__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wFDa4Er4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__ConfigNOK__442" guard="_wF_2EUr4EemA4_kRIR1Qqg" source="_wCTo4Er4EemA4_kRIR1Qqg" target="_s3bbYUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wF_2EUr4EemA4_kRIR1Qqg" name="PME_checkDecesion447">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF_2EEr4EemA4_kRIR1Qqg" name="PME_checkDecesion447">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wFI6cEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__443" source="_wCKe8Er4EemA4_kRIR1Qqg" target="_wCTo4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wFdDgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__A__En__ConfigNOK&quot;,&quot;To__Debug__A__En__ConfigNOK__441&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__C__ConfigNOK&quot;,&quot;To__Parent__StateMachine1__444&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ConfigNOK&quot;,&quot;Debug__B__Ac__ConfigNOK&quot;,&quot;To__Debug__B__Ac__ConfigNOK__442&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ConfigNOK&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wFKvoEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__444" guard="_wF-n8Ur4EemA4_kRIR1Qqg" source="_wCTo4Er4EemA4_kRIR1Qqg" target="_wCNiQEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wF-n8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion446">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wF-n8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion446">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__444&quot;,&quot;Debug__C__ConfigNOK&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s3bbYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3bbYkrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigNOK&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3hiAUrDEem2BZRQc2M93A" name="Debug__B__Ac__ConfigNOK__132">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__B__Ac__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s3d3oErDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s3d3oUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s3nooUrDEem2BZRQc2M93A" name="Debug__A__En__ConfigNOK__134">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__ConfigNOK::Region1::Debug__A__En__ConfigNOK&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wCTo4Er4EemA4_kRIR1Qqg" name="DecesionPoint__398" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wCVeEEr4EemA4_kRIR1Qqg" name="Init__State__399"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s31EAErDEem2BZRQc2M93A" name="Debug__Path__Init__ReadConfig__1" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s31rEUrDEem2BZRQc2M93A" name="Debug__C__Init__ReadConfig__1">
              <connectionPoint xmi:id="_s32SIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_wMsT8Er4EemA4_kRIR1Qqg" name="From__Parent__559" kind="entryPoint"/>
              <connectionPoint xmi:id="_wMuJIEr4EemA4_kRIR1Qqg" name="To__Parent__561" kind="exitPoint"/>
              <region xmi:id="_s31rEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4LpUErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1" source="_s32SIUrDEem2BZRQc2M93A" target="_s4ImAErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4ZEsErDEem2BZRQc2M93A" name="Debug__init__trans__Init__ReadConfig__1__158">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__init__trans__Init__ReadConfig__1&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s4MQYErDEem2BZRQc2M93A" name="Debug__Ac__Init__ReadConfig__1" source="_s4ImAErDEem2BZRQc2M93A" target="_s4J0IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s4MQYkrDEem2BZRQc2M93A" name="ENVInit" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;&quot;ENV: Intialization\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s4MQYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wM3TEEr4EemA4_kRIR1Qqg" name="Trans__Init__State__564565" source="_wMxMcEr4EemA4_kRIR1Qqg" target="_wMv-UEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wOzz0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__564&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__606&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__564&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__564&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__608&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__564&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wM-n0Er4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__Init__ReadConfig__1__566" source="_s4J0IErDEem2BZRQc2M93A" target="_wMv-UEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wO5TYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__606&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__608&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wM_O4Er4EemA4_kRIR1Qqg" name="PME_Trig567" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wNAdAEr4EemA4_kRIR1Qqg" name="PME_Trig568" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wNDgUEr4EemA4_kRIR1Qqg" name="PME_Trig569" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wNJm8Er4EemA4_kRIR1Qqg" name="PME_Trig570" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wNLcIEr4EemA4_kRIR1Qqg" name="PME_Trig571" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wNOfcEr4EemA4_kRIR1Qqg" name="PME_Trig572" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wNQ7sEr4EemA4_kRIR1Qqg" name="PME_Trig573" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wNSw4Er4EemA4_kRIR1Qqg" name="PME_Trig574" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wNV0MEr4EemA4_kRIR1Qqg" name="PME_Trig575" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wNch4Er4EemA4_kRIR1Qqg" name="PME_Trig576" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wNm58Er4EemA4_kRIR1Qqg" name="PME_Trig577" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wNovIEr4EemA4_kRIR1Qqg" name="PME_Trig578" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wNrycEr4EemA4_kRIR1Qqg" name="PME_Trig579" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wNtnoEr4EemA4_kRIR1Qqg" name="PME_Trig580" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wNx5EEr4EemA4_kRIR1Qqg" name="PME_Trig581" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wNzuQEr4EemA4_kRIR1Qqg" name="PME_Trig582" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wN6b8Er4EemA4_kRIR1Qqg" name="PME_Trig583" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wN7qEEr4EemA4_kRIR1Qqg" name="PME_Trig584" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wN9fQEr4EemA4_kRIR1Qqg" name="PME_Trig585" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wN_7gEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__Init__ReadConfig__1__586" source="_s4ImAErDEem2BZRQc2M93A" target="_wMv-UEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wO1B8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__606&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__608&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wOBJoEr4EemA4_kRIR1Qqg" name="PME_Trig587" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wOCXwEr4EemA4_kRIR1Qqg" name="PME_Trig588" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wODl4Er4EemA4_kRIR1Qqg" name="PME_Trig589" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wOGpMEr4EemA4_kRIR1Qqg" name="PME_Trig590" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wOLhsEr4EemA4_kRIR1Qqg" name="PME_Trig591" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wOMIwEr4EemA4_kRIR1Qqg" name="PME_Trig592" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wOPMEEr4EemA4_kRIR1Qqg" name="PME_Trig593" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wOY9EEr4EemA4_kRIR1Qqg" name="PME_Trig594" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wOaLMEr4EemA4_kRIR1Qqg" name="PME_Trig595" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wObZUEr4EemA4_kRIR1Qqg" name="PME_Trig596" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wOd1kEr4EemA4_kRIR1Qqg" name="PME_Trig597" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wOfqwEr4EemA4_kRIR1Qqg" name="PME_Trig598" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wOg44Er4EemA4_kRIR1Qqg" name="PME_Trig599" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wOkjQEr4EemA4_kRIR1Qqg" name="PME_Trig600" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wOlxYEr4EemA4_kRIR1Qqg" name="PME_Trig601" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wOoNoEr4EemA4_kRIR1Qqg" name="PME_Trig602" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wOpbwEr4EemA4_kRIR1Qqg" name="PME_Trig603" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wOqp4Er4EemA4_kRIR1Qqg" name="PME_Trig604" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_wOttMEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__Init__ReadConfig__1__605" guard="_wO9k0Ur4EemA4_kRIR1Qqg" source="_wMv-UEr4EemA4_kRIR1Qqg" target="_s4J0IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wO9k0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion610">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO9k0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion610">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Init__ReadConfig__1__605&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wOu7UEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__Init__ReadConfig__1__606" guard="_wO7IkUr4EemA4_kRIR1Qqg" source="_wMv-UEr4EemA4_kRIR1Qqg" target="_s4ImAErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wO7IkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion609">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO7IkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion609">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__ReadConfig__1__606&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wOwwgEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__607" source="_wMsT8Er4EemA4_kRIR1Qqg" target="_wMv-UEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wO2QEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__B__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__B__Ac__Init__ReadConfig__1__606&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__A__Ac__Init__ReadConfig__1&quot;,&quot;To__Debug__A__Ac__Init__ReadConfig__1__605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;,&quot;To__Parent__StateMachine1__608&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__ReadConfig__1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wOxXkEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__608" guard="_wO-L4Ur4EemA4_kRIR1Qqg" source="_wMv-UEr4EemA4_kRIR1Qqg" target="_wMuJIEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wO-L4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion611">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wO-L4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion611">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__608&quot;,&quot;Debug__C__Init__ReadConfig__1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s4ImAErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4ImAUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4P6wUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__ReadConfig__1__154">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__B__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s4J0IErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s4J0IUrDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__ReadConfig__1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s4S-EErDEem2BZRQc2M93A" name="Debug__A__Ac__Init__ReadConfig__1__155">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__Init__ReadConfig__1::Region1::Debug__A__Ac__Init__ReadConfig__1&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wMv-UEr4EemA4_kRIR1Qqg" name="DecesionPoint__563" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wMxMcEr4EemA4_kRIR1Qqg" name="Init__State__564"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s4iOoUrDEem2BZRQc2M93A" name="Debug__C__RetryConfig">
              <connectionPoint xmi:id="_s4jcwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s4kq4UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_vbCNgEr4EemA4_kRIR1Qqg" name="From__Parent__59" kind="entryPoint"/>
              <connectionPoint xmi:id="_vbEpwEr4EemA4_kRIR1Qqg" name="To__Parent__61" kind="exitPoint"/>
              <region xmi:id="_s4iOokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s4-6kErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig" source="_s4jcwErDEem2BZRQc2M93A" target="_s40igUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5OLIErDEem2BZRQc2M93A" name="Debug__init__trans__RetryConfig__181">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__init__trans__RetryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vbZZ4Er4EemA4_kRIR1Qqg" name="Trans__Init__State__6465" source="_vbQ3AEr4EemA4_kRIR1Qqg" target="_vbNzsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vgJ-EEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__64&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__110&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__64&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__64&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__64&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vbaA8Er4EemA4_kRIR1Qqg" name="Trans__ex66" source="_s4kq4UrDEem2BZRQc2M93A" target="_vbNzsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vgmqAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__110&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vbij0Er4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__RetryConfig__67" source="_s46CEErDEem2BZRQc2M93A" target="_vbNzsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vgvz8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__110&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vbqfoEr4EemA4_kRIR1Qqg" name="PME_Trig68" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vb03sEr4EemA4_kRIR1Qqg" name="PME_Trig69" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vb2s4Er4EemA4_kRIR1Qqg" name="PME_Trig70" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vb9akEr4EemA4_kRIR1Qqg" name="PME_Trig71" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vcBsAEr4EemA4_kRIR1Qqg" name="PME_Trig72" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vcJAwEr4EemA4_kRIR1Qqg" name="PME_Trig73" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vcN5QEr4EemA4_kRIR1Qqg" name="PME_Trig74" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vcVOAEr4EemA4_kRIR1Qqg" name="PME_Trig75" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vceX8Er4EemA4_kRIR1Qqg" name="PME_Trig76" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vcj3gEr4EemA4_kRIR1Qqg" name="PME_Trig77" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vcrzUEr4EemA4_kRIR1Qqg" name="PME_Trig78" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vc0WMEr4EemA4_kRIR1Qqg" name="PME_Trig79" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vc8SAEr4EemA4_kRIR1Qqg" name="PME_Trig80" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vc-uQEr4EemA4_kRIR1Qqg" name="PME_Trig81" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vdHRIEr4EemA4_kRIR1Qqg" name="PME_Trig82" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vdMJoEr4EemA4_kRIR1Qqg" name="PME_Trig83" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vdS3UEr4EemA4_kRIR1Qqg" name="PME_Trig84" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vdd2cEr4EemA4_kRIR1Qqg" name="PME_Trig85" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vdmZUEr4EemA4_kRIR1Qqg" name="PME_Trig86" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vdo1kEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__ConfigFailure__87" source="_s40igUrDEem2BZRQc2M93A" target="_vbNzsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vgSg8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__110&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__ConfigFailure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vdvjQEr4EemA4_kRIR1Qqg" name="PME_Trig88" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vd0bwEr4EemA4_kRIR1Qqg" name="PME_Trig89" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vd7JcEr4EemA4_kRIR1Qqg" name="PME_Trig90" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_veDsUEr4EemA4_kRIR1Qqg" name="PME_Trig91" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_veGvoEr4EemA4_kRIR1Qqg" name="PME_Trig92" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vePSgEr4EemA4_kRIR1Qqg" name="PME_Trig93" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_veYccEr4EemA4_kRIR1Qqg" name="PME_Trig94" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vect4Er4EemA4_kRIR1Qqg" name="PME_Trig95" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_ver-cEr4EemA4_kRIR1Qqg" name="PME_Trig96" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vew28Er4EemA4_kRIR1Qqg" name="PME_Trig97" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_ve4ywEr4EemA4_kRIR1Qqg" name="PME_Trig98" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vfBVoEr4EemA4_kRIR1Qqg" name="PME_Trig99" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vfIDUEr4EemA4_kRIR1Qqg" name="PME_Trig100" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vfMUwEr4EemA4_kRIR1Qqg" name="PME_Trig101" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vfU3oEr4EemA4_kRIR1Qqg" name="PME_Trig102" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vfXT4Er4EemA4_kRIR1Qqg" name="PME_Trig103" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vff2wEr4EemA4_kRIR1Qqg" name="PME_Trig104" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vfkvQEr4EemA4_kRIR1Qqg" name="PME_Trig105" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vfsEAEr4EemA4_kRIR1Qqg" name="PME_Trig106" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vf0m4Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__RetryConfig__107" guard="_vgyQMUr4EemA4_kRIR1Qqg" source="_vbNzsEr4EemA4_kRIR1Qqg" target="_s46CEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vgyQMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion112">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgyQMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion112">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__RetryConfig__107&quot;,&quot;Debug__A__Ac__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vf1N8Er4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__ConfigFailure__108" guard="_vgzeUUr4EemA4_kRIR1Qqg" source="_vbNzsEr4EemA4_kRIR1Qqg" target="_s40igUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vgzeUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion113">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgzeUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion113">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vf--8Er4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__109" source="_vbCNgEr4EemA4_kRIR1Qqg" target="_vbNzsEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vgcR8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__C__RetryConfig&quot;,&quot;To__Parent__StateMachine1__110&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__A__Ac__RetryConfig&quot;,&quot;To__Debug__A__Ac__RetryConfig__107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__RetryConfig&quot;,&quot;Debug__B__Ex__ConfigFailure&quot;,&quot;To__Debug__B__Ex__ConfigFailure__108&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__RetryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vf_mAEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__110" guard="_vgxpIEr4EemA4_kRIR1Qqg" source="_vbNzsEr4EemA4_kRIR1Qqg" target="_vbEpwEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_vgxpIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion111">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vgxCEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion111">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__110&quot;,&quot;Debug__C__RetryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s40igUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s40igkrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5DzEUrDEem2BZRQc2M93A" name="Debug__B__Ex__ConfigFailure__176">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__B__Ex__ConfigFailure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s46CEErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s46CEUrDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RetryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5J5sErDEem2BZRQc2M93A" name="Debug__A__Ac__RetryConfig__178">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__RetryConfig::Region1::Debug__A__Ac__RetryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vbNzsEr4EemA4_kRIR1Qqg" name="DecesionPoint__63" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vbQ3AEr4EemA4_kRIR1Qqg" name="Init__State__64"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s5ZKQUrDEem2BZRQc2M93A" name="Debug__C__QueryConfig">
              <connectionPoint xmi:id="_s5aYYErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_vmAHYEr4EemA4_kRIR1Qqg" name="From__Parent__168" kind="entryPoint"/>
              <connectionPoint xmi:id="_vmCjoEr4EemA4_kRIR1Qqg" name="To__Parent__170" kind="exitPoint"/>
              <region xmi:id="_s5ZKQkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s5vIgErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig" source="_s5aYYErDEem2BZRQc2M93A" target="_s5q3EErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5-ZEErDEem2BZRQc2M93A" name="Debug__init__trans__QueryConfig__206">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__init__trans__QueryConfig&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s5vIgUrDEem2BZRQc2M93A" name="Debug__Ex__Running" source="_s5q3EErDEem2BZRQc2M93A" target="_s5sFMErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s5_nMErDEem2BZRQc2M93A" name="Debug__Ex__Running__208">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__Ex__Running&quot;,(char *)&quot;Debug__B__Ex__Running&quot;,(char *)&quot;Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s5vIgkrDEem2BZRQc2M93A" name="Debug__Exec" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_vmWFoEr4EemA4_kRIR1Qqg" name="Trans__Init__State__173174" source="_vmNiwEr4EemA4_kRIR1Qqg" target="_vmKfcEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vsQgYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__173&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__234&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__173&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__236&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__173&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__173&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__238&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__173&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vmfPkEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Running__175" source="_s5q3EErDEem2BZRQc2M93A" target="_vmKfcEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vsB24Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__234&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__236&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__238&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vmhEwEr4EemA4_kRIR1Qqg" name="PME_Trig176" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vml9QEr4EemA4_kRIR1Qqg" name="PME_Trig177" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vmsD4Er4EemA4_kRIR1Qqg" name="PME_Trig178" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vmz_sEr4EemA4_kRIR1Qqg" name="PME_Trig179" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vm9JoEr4EemA4_kRIR1Qqg" name="PME_Trig180" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vnEeYEr4EemA4_kRIR1Qqg" name="PME_Trig181" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vnJ98Er4EemA4_kRIR1Qqg" name="PME_Trig182" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vnR5wEr4EemA4_kRIR1Qqg" name="PME_Trig183" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vnUWAEr4EemA4_kRIR1Qqg" name="PME_Trig184" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vncR0Er4EemA4_kRIR1Qqg" name="PME_Trig185" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vneuEEr4EemA4_kRIR1Qqg" name="PME_Trig186" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vnmp4Er4EemA4_kRIR1Qqg" name="PME_Trig187" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vntXkEr4EemA4_kRIR1Qqg" name="PME_Trig188" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vnyQEEr4EemA4_kRIR1Qqg" name="PME_Trig189" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vn6y8Er4EemA4_kRIR1Qqg" name="PME_Trig190" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vn_EYEr4EemA4_kRIR1Qqg" name="PME_Trig191" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_voFyEEr4EemA4_kRIR1Qqg" name="PME_Trig192" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_voLRoEr4EemA4_kRIR1Qqg" name="PME_Trig193" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_voQxMEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Running__194" source="_s5t6YErDEem2BZRQc2M93A" target="_vmKfcEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vsE6MEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__234&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__236&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Running&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__238&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Running&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_voZUEEr4EemA4_kRIR1Qqg" name="PME_Trig195" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vocXYEr4EemA4_kRIR1Qqg" name="PME_Trig196" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vokTMEr4EemA4_kRIR1Qqg" name="PME_Trig197" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_voqZ0Er4EemA4_kRIR1Qqg" name="PME_Trig198" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vov5YEr4EemA4_kRIR1Qqg" name="PME_Trig199" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vo4cQEr4EemA4_kRIR1Qqg" name="PME_Trig200" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vo7fkEr4EemA4_kRIR1Qqg" name="PME_Trig201" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vpDbYEr4EemA4_kRIR1Qqg" name="PME_Trig202" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vpMlUEr4EemA4_kRIR1Qqg" name="PME_Trig203" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vpRd0Er4EemA4_kRIR1Qqg" name="PME_Trig204" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vpXkcEr4EemA4_kRIR1Qqg" name="PME_Trig205" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vpdEAEr4EemA4_kRIR1Qqg" name="PME_Trig206" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vpjxsEr4EemA4_kRIR1Qqg" name="PME_Trig207" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vprGcEr4EemA4_kRIR1Qqg" name="PME_Trig208" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vpuw0Er4EemA4_kRIR1Qqg" name="PME_Trig209" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vp3TsEr4EemA4_kRIR1Qqg" name="PME_Trig210" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vp_PgEr4EemA4_kRIR1Qqg" name="PME_Trig211" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vqHLUEr4EemA4_kRIR1Qqg" name="PME_Trig212" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vqKOoEr4EemA4_kRIR1Qqg" name="PME_Trig213" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vqQ8UEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__QueryConfig__214" source="_s5sFMErDEem2BZRQc2M93A" target="_vmKfcEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vsM2AEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__234&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__236&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__238&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_vqSxgEr4EemA4_kRIR1Qqg" name="PME_Trig215" event="_BB3b0Al4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vqV00Er4EemA4_kRIR1Qqg" name="PME_Trig216" port="_lxs5kApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vqcigEr4EemA4_kRIR1Qqg" name="PME_Trig217" port="_rXZWwApkEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vqeXsEr4EemA4_kRIR1Qqg" name="PME_Trig218" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vqiCEEr4EemA4_kRIR1Qqg" name="PME_Trig219" event="_AW3qcAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vqoIsEr4EemA4_kRIR1Qqg" name="PME_Trig220" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vqp94Er4EemA4_kRIR1Qqg" name="PME_Trig221" port="_b1NrIAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vqxSoEr4EemA4_kRIR1Qqg" name="PME_Trig222" port="_wQHCAAjLEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vqzH0Er4EemA4_kRIR1Qqg" name="PME_Trig223" event="_hZh9oAguEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vq4nYEr4EemA4_kRIR1Qqg" name="PME_Trig224" event="_yDG0cAgtEea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vq840Er4EemA4_kRIR1Qqg" name="PME_Trig225" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_vq_VEEr4EemA4_kRIR1Qqg" name="PME_Trig226" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_vrGp0Er4EemA4_kRIR1Qqg" name="PME_Trig227" port="_mKfGEOM2EeaTpaLNj-zYpw">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vrJtIEr4EemA4_kRIR1Qqg" name="PME_Trig228" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_vrRB4Er4EemA4_kRIR1Qqg" name="PME_Trig229" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_vrUFMEr4EemA4_kRIR1Qqg" name="PME_Trig230" port="_X4ceIAjMEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_vraL0Er4EemA4_kRIR1Qqg" name="PME_Trig231" port="_svBtUErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_vrcBAEr4EemA4_kRIR1Qqg" name="PME_Trig232" event="_xu1hMgl4Eea_md0mpENoqg" port="_GXsSgAgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_vrjVwEr4EemA4_kRIR1Qqg" name="PME_Trig233" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_vNReUEr4EemA4_kRIR1Qqg"/>
                </transition>
                <transition xmi:id="_vrnAIEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Running__234" guard="_vsUx0Er4EemA4_kRIR1Qqg" source="_vmKfcEr4EemA4_kRIR1Qqg" target="_s5q3EErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vsUx0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion239">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsUKwEr4EemA4_kRIR1Qqg" name="PME_checkDecesion239">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Running__234&quot;,&quot;Debug__B__Ex__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vrnAIUr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Running__235" guard="_vsYcMUr4EemA4_kRIR1Qqg" source="_vmKfcEr4EemA4_kRIR1Qqg" target="_s5t6YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vsYcMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion241">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsYcMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion241">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Running__235&quot;,&quot;Debug__A__En__Running&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vrnnMEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__QueryConfig__236" guard="_vsX1IUr4EemA4_kRIR1Qqg" source="_vmKfcEr4EemA4_kRIR1Qqg" target="_s5sFMErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_vsX1IUr4EemA4_kRIR1Qqg" name="PME_checkDecesion240">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsX1IEr4EemA4_kRIR1Qqg" name="PME_checkDecesion240">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__QueryConfig__236&quot;,&quot;Debug__B__Ac__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_vrwKEEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__237" source="_vmAHYEr4EemA4_kRIR1Qqg" target="_vmKfcEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vr6iIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ex__Running&quot;,&quot;To__Debug__B__Ex__Running__234&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__B__Ac__QueryConfig&quot;,&quot;To__Debug__B__Ac__QueryConfig__236&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__A__En__Running&quot;,&quot;To__Debug__A__En__Running__235&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__QueryConfig&quot;,&quot;Debug__C__QueryConfig&quot;,&quot;To__Parent__StateMachine1__238&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__QueryConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_vrwxIEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__238" guard="_vsaRYUr4EemA4_kRIR1Qqg" source="_vmKfcEr4EemA4_kRIR1Qqg" target="_vmCjoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_vsaRYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion242">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_vsaRYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion242">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__238&quot;,&quot;Debug__C__QueryConfig&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s5q3EErDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5q3EUrDEem2BZRQc2M93A" name="Debug__B__Ex__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s5yy4ErDEem2BZRQc2M93A" name="Debug__B__Ex__Running__201">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ex__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5sFMErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5sFMUrDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;QueryConfig&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s52dQErDEem2BZRQc2M93A" name="Debug__B__Ac__QueryConfig__202">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__B__Ac__QueryConfig&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s5t6YErDEem2BZRQc2M93A" name="Debug__A__En__Running">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s5t6YUrDEem2BZRQc2M93A" name="Debug__A__En__Running">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Running&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s57VwErDEem2BZRQc2M93A" name="Debug__A__En__Running__204">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::ENV::ENV::StateMachine1::Region1::Debug__C__QueryConfig::Region1::Debug__A__En__Running&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vmKfcEr4EemA4_kRIR1Qqg" name="DecesionPoint__172" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_vmNiwEr4EemA4_kRIR1Qqg" name="Init__State__173"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s6YowErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_vUaBEEr4EemA4_kRIR1Qqg" name="DecesionPoint__9" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_su-C8ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_su9b4ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>ConfigComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svWdcUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_svWdcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;AnnouncmentServerTimeout,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncmentServerTimeout!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncmentServerTimeout);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_svdyMErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_svaH0ErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;AnnouncmentServerTimeout&quot;==tempVarName){
    AnnouncmentServerTimeout=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sv86YErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_svrNkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vRqPEUr4EemA4_kRIR1Qqg" name="loadHeap" specification="_vRqPEEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.AnnouncmentServerTimeout&quot;,this->AnnouncmentServerTimeout);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vRtSYEr4EemA4_kRIR1Qqg" name="unLoadHeap" specification="_vRsrUEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.AnnouncmentServerTimeout&quot;,&amp;this->AnnouncmentServerTimeout);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vSofcUr4EemA4_kRIR1Qqg" name="sendMessage" specification="_vSofcEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;ReplyReplicationMode&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyReplicationMode( boost::any_cast&lt;int>(message.payload[&quot;RunningMode&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyServerRole( boost::any_cast&lt;int>(message.payload[&quot;ServerRole&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;Shutdown&quot;) {
   if(message.payload.size()==0){
    ConfigComm.Shutdown().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;StartUp&quot;) {
   if(message.payload.size()==1){
    ConfigComm.StartUp( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyConfig&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyConfig( boost::any_cast&lt;>(message.payload[&quot;config&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;ReplyMasterId&quot;) {
   if(message.payload.size()==1){
    ConfigComm.ReplyMasterId( boost::any_cast&lt;int>(message.payload[&quot;MasterId&quot;])).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;BIT&quot;) {
   if(message.payload.size()==0){
    ConfigComm.BIT().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vSy3gUr4EemA4_kRIR1Qqg" name="sendInternalMessage" specification="_vSy3gEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vUA_gEr4EemA4_kRIR1Qqg" name="initForPMD" specification="_vUAYcEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_ENV::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_ENV::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;FailureTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;BITTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;GeneralTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer1&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;AnnouncmentServer2&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;configTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForENV&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_su9b4ErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_su-C8ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svWdcErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_svWdcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_svaH0ErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_svdyMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svb9AErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svckEErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svdLIErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_svrNkErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sv86YErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_svrNkUrDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svwtIErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_svzJYErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv1loErDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv2MsErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv4B4ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv5QAUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv53EErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv7sQErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sv8TUErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vRqPEEr4EemA4_kRIR1Qqg" name="loadHeap" visibility="private" method="_vRqPEUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_vRsrUEr4EemA4_kRIR1Qqg" name="unLoadHeap" visibility="private" method="_vRtSYEr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_vSofcEr4EemA4_kRIR1Qqg" name="sendMessage" visibility="private" method="_vSofcUr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_vSqUoEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vSv0MEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vSy3gEr4EemA4_kRIR1Qqg" name="sendInternalMessage" visibility="private" method="_vSy3gUr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_vS0FoEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vS3I8Er4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vUAYcEr4EemA4_kRIR1Qqg" name="initForPMD" visibility="private" method="_vUA_gEr4EemA4_kRIR1Qqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_Y0NjUAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_nk_BAAgzEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_aaXBwAxwEeaB2MeL96fedA" client="_sMZ5EAgoEea_md0mpENoqg" supplier="_v000cAgsEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_fXXuUAxwEeaB2MeL96fedA" memberEnd="_fXb_wAxwEeaB2MeL96fedA _fXcm0AxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_fXaKkAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_fXaxoAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_fXcm0AxwEeaB2MeL96fedA" name="env" type="_sMZ5EAgoEea_md0mpENoqg" association="_fXXuUAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_z1vioAggEea_md0mpENoqg" name="Hosts">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_wVFC0AghEea_md0mpENoqg" client="_z1vioAggEea_md0mpENoqg" supplier="_OiTE0AghEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_4_oYIAghEea_md0mpENoqg" name="Host" isActive="true">
        <ownedAttribute xmi:id="_qKL_IAgnEea_md0mpENoqg" name="hostInfo" type="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_wp2QEAltEea_md0mpENoqg" name="hostConfig" type="_Y1UDYAg6Eea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_MFku4Ao-EeaGqPUk-4V4qQ" name="TimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_yqPtMgxwEeaB2MeL96fedA" name="hostinfo" type="_JesyoAgiEea_md0mpENoqg" aggregation="composite" association="_yqOfEAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_z8hNYQxwEeaB2MeL96fedA" name="configuration" type="_Y1UDYAg6Eea_md0mpENoqg" aggregation="composite" association="_z8f_QAxwEeaB2MeL96fedA"/>
        <ownedAttribute xmi:id="_dCa_wPMYEeauO5SNGpOV7w" name="logfile"/>
        <ownedAttribute xmi:id="_nU84IPMbEeauO5SNGpOV7w" name="ts">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IWYV4G6NEeSyDdTKostG4Q"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_G0bAoPMlEeauO5SNGpOV7w" name="messageID">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Real"/>
          <defaultValue xmi:type="uml:LiteralReal" xmi:id="_G0bAofMlEeauO5SNGpOV7w"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_xCGHkAgmEea_md0mpENoqg" name="Server" classifierBehavior="_lT4V0AlLEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_6zESYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_-3KD0AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xByucAlLEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_xB_iwAlLEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_pQ6HcAnMEeaGqPUk-4V4qQ" name="ServerComm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etWXMAnOEeaGqPUk-4V4qQ" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_euWcwAnOEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_HIvrsApCEeaGqPUk-4V4qQ" name="Master" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_ZDrx0ApDEeaGqPUk-4V4qQ" name="KeepAliveTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_Vj1U4ApFEeaGqPUk-4V4qQ" name="MasterAnnounceTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6YR3oApGEeaGqPUk-4V4qQ" name="KeepAliveTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Ceg-8ApHEeaGqPUk-4V4qQ" name="KeepAliveTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_Ceg-8QpHEeaGqPUk-4V4qQ" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_N795sApHEeaGqPUk-4V4qQ" name="AnnouncementTimerId">
          <type xmi:type="uml:Class" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6qkTMGXmEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_YVMXUApHEeaGqPUk-4V4qQ" name="AnnouncementTimeOut">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_YVMXUQpHEeaGqPUk-4V4qQ" value="4"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_855RMAs1EeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_rmnI0OM8EeaTpaLNj-zYpw" name="Slave" visibility="public" type="_f2ud0ApBEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_sxfygErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sxhAoUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sxhnsErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxz7kErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx0ioErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx1JsErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sx2X0ErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wYQDsEr4EemA4_kRIR1Qqg" name="dbgPortForServer" visibility="protected" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wYQDsUr4EemA4_kRIR1Qqg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_wYQDskr4EemA4_kRIR1Qqg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_lT4V0AlLEea_md0mpENoqg" name="ServerStateMachine">
          <region xmi:id="_lvCAwAlLEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_iM5MYAlvEea_md0mpENoqg" name="initTimer" source="_s97E8ErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nB58AApKEeaGqPUk-4V4qQ" name="InitTimer">
                <language>C++</language>
                <body>logfile&lt;&lt;&quot;capsuleName&quot;&lt;&lt;&quot;,messageType,&quot;&lt;&lt;&quot;messageID&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;second&quot;&lt;&lt;&quot;,&quot;&lt;&lt;&quot;nano&quot;&lt;&lt;&quot;\n&quot;;    
//UMLRTTimespec ts;
    //ts.getclock(ts);
    //this->setTimePointSecond();
    logfile.open(this->getName());
    //if (logfile.is_open())
    //	logfile&lt;&lt;ts.tv_sec&lt;&lt;&quot;:&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    //logfile.close();
    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(r,0),4);
   TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::initTimer&quot;,(char *)&quot;Debug__Path__initTimer&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_ElyUAAp0EeaGqPUk-4V4qQ" name="KeepAlive" source="_tHWGsErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_9ovXcAp1EeaGqPUk-4V4qQ" name="SendKeepAlive">
                <language>C++</language>
                <body>    if (KeepAliveTimerId.isValid())
    KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    if (hostConfig.RunningMode==1)
    Master.IAmAlive((char *)this->getName()).send();
    std::cout&lt;&lt;&quot;Master: Keep Alive is sent\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::KeepAlive&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_i_dO4Ap5EeaGqPUk-4V4qQ" name="ActiveMode" source="_s_-6cErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAX8AErDEem2BZRQc2M93A" name="ActiveMode__400">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ActiveMode&quot;,(char *)&quot;Debug__Path__ActiveMode&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_pYtP8Ap5EeaGqPUk-4V4qQ" name="BeingMaster" source="_tBD4gErDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_lf6aoAqTEeaGqPUk-4V4qQ" name="BeMaster">
                <language>C++</language>
                <body>    int r=random()%30+5;
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: will go fail state after &quot;&lt;&lt; r &lt;&lt; &quot;second\n&quot;;
    //TimerId=Timer.informEvery(360000);
    TimerId=Timer.informEvery(UMLRTTimespec(3600000,0),4);
    KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(KeepAliveTimeOut,0),4);
    AnnouncementTimerId=MasterAnnounceTimer.informEvery(UMLRTTimespec(AnnouncementTimeOut,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::BeingMaster&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_wPvR0Ap8EeaGqPUk-4V4qQ" name="PassiveMode" source="_tCc_oErDEem2BZRQc2M93A" target="_887yAKozEeiNHY6qjNhZ4w">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC1aIErDEem2BZRQc2M93A" name="PassiveMode__482">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::PassiveMode&quot;,(char *)&quot;Debug__Path__PassiveMode&quot;,(char *)&quot;Pseudo2&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_bHEIAONOEeaTpaLNj-zYpw" name="ExitPoint1__BeMaster__4" source="_tEp_EErDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFBLcErDEem2BZRQc2M93A" name="ExitPoint1__BeMaster__4__557">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::ExitPoint1__BeMaster__4&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s7mwwErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7nX0ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__varChange__246">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s7mwwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7ol8ErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7p0EErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__setBreakPoint__247">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7pNAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7rCMErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7rCMkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__remBreakPoint__248">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7rCMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7sQUErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7sQUkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__viewBreakPoints__249">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7sQUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7s3YErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7s3YkrDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgSetExecMode__250">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s7s3YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s7tecErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg" source="_s7dm0UrDEem2BZRQc2M93A" target="_s7dm0UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7vToErDEem2BZRQc2M93A" name="Debug__ServerFaliure__dbg__dbgDeferMsg__251">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s7tecUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uFgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s7uskErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9UA8ErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9UoAErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__varChange__295">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s9UA8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9VPEErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9VPEkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__setBreakPoint__296">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9VPEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9V2IErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9WdMErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__remBreakPoint__297">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9V2IUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9YSYErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9YSYkrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__viewBreakPoints__298">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9YSYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9Y5cErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9ZggErDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgSetExecMode__299">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s9Y5cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s9ZggUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg" source="_s9K3AUrDEem2BZRQc2M93A" target="_s9K3AUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9auoUrDEem2BZRQc2M93A" name="Debug__purgeotherMessage__dbg__dbgDeferMsg__300">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s9aHkErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9aHkkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s9auoErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-CZsErDEem2BZRQc2M93A" name="Debug__initTimer__E" source="_s99hMUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-CZsUrDEem2BZRQc2M93A" name="Debug__initTimer__E__320">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__initTimer__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_s-EO4ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-E18ErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__varChange__322">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_s-EO4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-FdAErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-FdAkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__setBreakPoint__323">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-FdAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-GrIErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-GrIkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__remBreakPoint__324">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-GrIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-HSMErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-H5QErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__viewBreakPoints__325">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-HSMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-IgUErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-IgUkrDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgSetExecMode__326">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_s-IgUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_s-JHYErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg" source="_s97sAUrDEem2BZRQc2M93A" target="_s97sAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-KVgErDEem2BZRQc2M93A" name="Debug__initTimer__dbg__dbgDeferMsg__327">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_s-JHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JucUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_s-JuckrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAJ5kErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAJ5kkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__varChange__393">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAJ5kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAKgoErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tALHsUrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__setBreakPoint__394">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tALHsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAMV0ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAMV0krDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__remBreakPoint__395">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAMV0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAM84ErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tANj8UrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__viewBreakPoints__396">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tANj8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOLAErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAOLAkrDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgSetExecMode__397">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAOLAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAOyEErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg" source="_tAAIkErDEem2BZRQc2M93A" target="_tAAIkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAQnQErDEem2BZRQc2M93A" name="Debug__ActiveMode__dbg__dbgDeferMsg__398">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAPZIErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAPZIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAQAMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAlXYErDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAlXYkrDEem2BZRQc2M93A" name="Debug__Recover__dbg__varChange__407">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tAlXYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAl-cErDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAl-ckrDEem2BZRQc2M93A" name="Debug__Recover__dbg__setBreakPoint__408">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAl-cUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAmlgErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnMkErDEem2BZRQc2M93A" name="Debug__Recover__dbg__remBreakPoint__409">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAmlgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAnzoErDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAnzokrDEem2BZRQc2M93A" name="Debug__Recover__dbg__viewBreakPoints__410">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tAnzoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tAoasErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAoaskrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgSetExecMode__411">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tAoasUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tApBwErDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg" source="_tAa_UUrDEem2BZRQc2M93A" target="_tAa_UUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tAqP4UrDEem2BZRQc2M93A" name="Debug__Recover__dbg__dbgDeferMsg__412">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tApBwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tApo0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tAqP4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBIxAUrDEem2BZRQc2M93A" name="Debug__BeingMaster" source="_kLngAAp5EeaGqPUk-4V4qQ" target="_tBD4gErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBJYEErDEem2BZRQc2M93A" name="Debug__BeingMaster__423">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;Debug__Path__BeingMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBMbYErDEem2BZRQc2M93A" name="Debug__BeingMaster__E" source="_tBIJ8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBNCcErDEem2BZRQc2M93A" name="Debug__BeingMaster__E__426">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__BeingMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tBOQkErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBO3oUrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__varChange__428">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tBO3oErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBPesErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBPeskrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__setBreakPoint__429">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBPesUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQFwErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBQFwkrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__remBreakPoint__430">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQFwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBQs0ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBRT4ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__viewBreakPoints__431">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBQs0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBRT4UrDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBR68ErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgSetExecMode__432">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tBRT4krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tBSiAErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg" source="_tBFGoUrDEem2BZRQc2M93A" target="_tBFGoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBTwIErDEem2BZRQc2M93A" name="Debug__BeingMaster__dbg__dbgDeferMsg__433">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tBSiAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tBTJEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCol0ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpM4UrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__varChange__475">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tCpM4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCpz8ErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCpz8krDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__setBreakPoint__476">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCpz8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCqbAErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCqbAkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__remBreakPoint__477">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCqbAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrCEErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCrpIErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__viewBreakPoints__478">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCrCEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCrpIUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCsQMUrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgSetExecMode__479">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tCsQMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tCs3QErDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg" source="_tCdmsUrDEem2BZRQc2M93A" target="_tCdmsUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tCteUkrDEem2BZRQc2M93A" name="Debug__PassiveMode__dbg__dbgDeferMsg__480">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tCs3QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCs3QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tCteUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC9V8UrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3" source="_tJHBQErDEem2BZRQc2M93A" target="_tC5EgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tC99AErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__484">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tJI2cErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tC_yMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S" guard="_tDAZQUrDEem2BZRQc2M93A" source="_tC5EgErDEem2BZRQc2M93A" target="_tC7gwErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tDAZQUrDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tDAZQErDEem2BZRQc2M93A" name="Debug__GuardInit__StandBy__3">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDBAUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__S__486">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__Init__StandBy__3__S&quot;,(char *)&quot;Debug__Path__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tDEDoErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDEqsErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__varChange__489">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tDEDoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDFRwErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDF40ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__setBreakPoint__490">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDFRwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDGf4ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHG8ErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__remBreakPoint__491">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDGf4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDHuAErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDHuAkrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__viewBreakPoints__492">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDHuAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDIVEErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDI8IUrDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgSetExecMode__493">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tDI8IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tDJjMErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg" source="_tC6SoUrDEem2BZRQc2M93A" target="_tC6SoUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDKxUErDEem2BZRQc2M93A" name="Debug__Init__StandBy__3__dbg__dbgDeferMsg__494">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tDJjMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDJjMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tDKKQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEIaoErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEJBsUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__varChange__526">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEJBsErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEJowErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEKP0ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__setBreakPoint__527">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEJowUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEKP0UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEK24ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__remBreakPoint__528">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEKP0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEK24UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tELd8ErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__viewBreakPoints__529">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEK24krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tELd8UrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEMFAUrDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgSetExecMode__530">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tEMFAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEMsEErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg" source="_tEBF4UrDEem2BZRQc2M93A" target="_tEBF4UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEN6MErDEem2BZRQc2M93A" name="Debug__MasterAnnounce__dbg__dbgDeferMsg__531">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tEMsEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tEMsEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tENTIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tEtpcErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4" source="_M8iZcONCEeaTpaLNj-zYpw" target="_tEp_EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEtpcUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__545">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEu3kErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S" guard="_tEveoUrDEem2BZRQc2M93A" source="_tEp_EErDEem2BZRQc2M93A" target="_tEr0QUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tEveoUrDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tEveoErDEem2BZRQc2M93A" name="Debug__GuardExitPoint1__BeMaster__4">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEwFsErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__S__547">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__S&quot;,(char *)&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tExT0ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E" source="_tEsbUUrDEem2BZRQc2M93A" target="_kLngAAp5EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEx64ErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__E__548">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ExitPoint1__BeMaster__4__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;BeMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tEzJAErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEzwEUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__varChange__550">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tEzwEErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE0XIErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE0-MUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__setBreakPoint__551">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE0-MErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE1lQErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2MUErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__remBreakPoint__552">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE1lQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE2zYErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE2zYkrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__viewBreakPoints__553">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE2zYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE3acErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE4BgUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgSetExecMode__554">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tE4BgErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tE4okErDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg" source="_tEqmIUrDEem2BZRQc2M93A" target="_tEqmIUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tE52sUrDEem2BZRQc2M93A" name="Debug__ExitPoint1__BeMaster__4__dbg__dbgDeferMsg__555">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tE4okUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE5PoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tE52sErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFOm0ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFPN4ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__varChange__564">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tFOm0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFP08ErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFP08krDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__setBreakPoint__565">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFP08UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFQcAErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRDEErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__remBreakPoint__566">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFQcAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRDEUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFRqIUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__viewBreakPoints__567">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFRqIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFRqIkrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFSRMErDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgSetExecMode__568">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tFRqI0rDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tFSRMUrDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg" source="_tFE10UrDEem2BZRQc2M93A" target="_tFE10UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFS4Q0rDEem2BZRQc2M93A" name="Debug__BeSlave__dbg__dbgDeferMsg__569">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tFSRMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QUrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tFS4QkrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGB4EErDEem2BZRQc2M93A" name="Debug__ServiceRequest__E" source="_tF7xcUrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGB4EUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__E__590">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__ServiceRequest__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tGDtQErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGDtQkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__varChange__592">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tGDtQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGE7YErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGE7YkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__setBreakPoint__593">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGE7YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGFicErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGFickrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__remBreakPoint__594">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGFicUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJgErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGJgkrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__viewBreakPoints__595">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGGJgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGGJg0rDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGGwkUrDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgSetExecMode__596">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tGGwkErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tGHXoErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg" source="_tF58QErDEem2BZRQc2M93A" target="_tF58QErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tGIlwErDEem2BZRQc2M93A" name="Debug__ServiceRequest__dbg__dbgDeferMsg__597">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tGHXoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGHXokrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tGH-sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG1JUErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S" guard="_tG1wYUrDEem2BZRQc2M93A" source="_tGwQ0ErDEem2BZRQc2M93A" target="_tGyGAErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tG1wYUrDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tG1wYErDEem2BZRQc2M93A" name="Debug__GuardStandBy__CheckConfig__6">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBy&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG2XcErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__S__613">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__StandBy__CheckConfig__6__S&quot;,(char *)&quot;Debug__Path__StandBy__CheckConfig__6&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tG6B0ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG6B0krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__varChange__616">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tG6B0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG7P8ErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG7P8krDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__setBreakPoint__617">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG7P8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG8eEErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG8eEkrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__remBreakPoint__618">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG8eEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9FIErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG9sMErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__viewBreakPoints__619">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG9FIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG9sMUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG-TQErDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgSetExecMode__620">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tG9sMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tG-TQUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg" source="_tGw34UrDEem2BZRQc2M93A" target="_tGw34UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tG_hYUrDEem2BZRQc2M93A" name="Debug__StandBy__CheckConfig__6__dbg__dbgDeferMsg__621">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tG-6UErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG-6UkrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tG_hYErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHZxEUrDEem2BZRQc2M93A" name="Debug__KeepAlive" source="_UrcckAlOEea_md0mpENoqg" target="_tHWGsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHaYIErDEem2BZRQc2M93A" name="Debug__KeepAlive__632">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_RAsgEAp1EeaGqPUk-4V4qQ" name="KeppAlive" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHbmQErDEem2BZRQc2M93A" name="Debug__KeepAlive__S" guard="_tHcNUUrDEem2BZRQc2M93A" source="_tHWGsErDEem2BZRQc2M93A" target="_tHX74UrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tHcNUUrDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tHcNUErDEem2BZRQc2M93A" name="Debug__GuardKeepAlive">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHc0YErDEem2BZRQc2M93A" name="Debug__KeepAlive__S__634">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__S&quot;,(char *)&quot;Debug__Path__KeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHdbcErDEem2BZRQc2M93A" name="Debug__KeepAlive__E" source="_tHYi8UrDEem2BZRQc2M93A" target="_UrcckAlOEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHeCgErDEem2BZRQc2M93A" name="Debug__KeepAlive__E__635">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__KeepAlive__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tHfQoErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHf3sUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__varChange__637">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tHf3sErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhF0ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHhF0krDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__setBreakPoint__638">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHhF0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHhs4ErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHiT8UrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__remBreakPoint__639">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHiT8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHi7AErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHjiEErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__viewBreakPoints__640">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHi7AUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHjiEUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHkJIErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgSetExecMode__641">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tHjiEkrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tHkwMErDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg" source="_tHWtwUrDEem2BZRQc2M93A" target="_tHWtwUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHl-UUrDEem2BZRQc2M93A" name="Debug__KeepAlive__dbg__dbgDeferMsg__642">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tHkwMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHkwMkrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHlXQErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tHl-UErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_wdnE0Er4EemA4_kRIR1Qqg" name="Trans__Debug__Path__BeSlave712" source="_tFEOwErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xeG4gEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wdnr4Er4EemA4_kRIR1Qqg" name="Trans__Debug__Path__Recover713" source="_tAaYQErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xW9HoEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wdnr4Ur4EemA4_kRIR1Qqg" name="Trans__Init__State__711714" source="_wdCdEEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xe3tgEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__711&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__711&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_weZvAEr4EemA4_kRIR1Qqg" name="715" source="_tC5EgErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xWf0oEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wea9IEr4EemA4_kRIR1Qqg" name="716" source="_tFEOwErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xWvsQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wegcsEr4EemA4_kRIR1Qqg" name="717" source="_s_-6cErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xfhNwEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_weiR4Er4EemA4_kRIR1Qqg" name="718" source="_tAaYQErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xbFZsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wei48Er4EemA4_kRIR1Qqg" name="719" source="_tBD4gErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xY0I0Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wei48Ur4EemA4_kRIR1Qqg" name="720" source="_s97E8ErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xZOYgEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wejgAEr4EemA4_kRIR1Qqg" name="721" source="_tHWGsErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xef6EEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wekHEEr4EemA4_kRIR1Qqg" name="722" source="_tGwQ0ErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xX6J4Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wekHEUr4EemA4_kRIR1Qqg" name="723" source="_tCc_oErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xgLVEEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wekuIEr4EemA4_kRIR1Qqg" name="724" source="_tEp_EErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xaQ6UEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_weq0wEr4EemA4_kRIR1Qqg" name="From__RunAsMaster__725" source="_UrcckAlOEea_md0mpENoqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xWChoEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_wet4EEr4EemA4_kRIR1Qqg" name="PME_Trig726" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wevGMEr4EemA4_kRIR1Qqg" name="PME_Trig727" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wew7YEr4EemA4_kRIR1Qqg" name="PME_Trig728" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_we0lwEr4EemA4_kRIR1Qqg" name="PME_Trig729" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_we3CAEr4EemA4_kRIR1Qqg" name="PME_Trig730" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_we3pEEr4EemA4_kRIR1Qqg" name="PME_Trig731" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_we43MEr4EemA4_kRIR1Qqg" name="PME_Trig732" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_we5eQEr4EemA4_kRIR1Qqg" name="PME_Trig733" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_we8hkEr4EemA4_kRIR1Qqg" name="PME_Trig734" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_wfCoMEr4EemA4_kRIR1Qqg" name="PME_Trig735" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wfGSkEr4EemA4_kRIR1Qqg" name="PME_Trig736" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_wfHgsEr4EemA4_kRIR1Qqg" name="PME_Trig737" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_wfIu0Er4EemA4_kRIR1Qqg" name="PME_Trig738" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wfLyIEr4EemA4_kRIR1Qqg" name="PME_Trig739" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wfQDkEr4EemA4_kRIR1Qqg" name="PME_Trig740" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_wfR4wEr4EemA4_kRIR1Qqg" name="PME_Trig741" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_wfTt8Er4EemA4_kRIR1Qqg" name="PME_Trig742" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_wfaboEr4EemA4_kRIR1Qqg" name="PME_Trig743" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wfcQ0Er4EemA4_kRIR1Qqg" name="PME_Trig744" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_wfeGAEr4EemA4_kRIR1Qqg" name="PME_Trig745" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_wfgiQEr4EemA4_kRIR1Qqg" name="From__Debug__InitState__746" source="_tJHBQErDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xhGiIEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_wflawEr4EemA4_kRIR1Qqg" name="PME_Trig747" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wfqTQEr4EemA4_kRIR1Qqg" name="PME_Trig748" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wfsIcEr4EemA4_kRIR1Qqg" name="PME_Trig749" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wfzdMEr4EemA4_kRIR1Qqg" name="PME_Trig750" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wf1SYEr4EemA4_kRIR1Qqg" name="PME_Trig751" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wf15cEr4EemA4_kRIR1Qqg" name="PME_Trig752" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_wf6K4Er4EemA4_kRIR1Qqg" name="PME_Trig753" port="_855RMAs1EeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_wf8AEEr4EemA4_kRIR1Qqg" name="PME_Trig754" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wf91QEr4EemA4_kRIR1Qqg" name="PME_Trig755" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
              <trigger xmi:id="_wf_DYEr4EemA4_kRIR1Qqg" name="PME_Trig756" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wgARgEr4EemA4_kRIR1Qqg" name="PME_Trig757" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_wgD74Er4EemA4_kRIR1Qqg" name="PME_Trig758" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_wgI0YEr4EemA4_kRIR1Qqg" name="PME_Trig759" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wgJbcEr4EemA4_kRIR1Qqg" name="PME_Trig760" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wgKpkEr4EemA4_kRIR1Qqg" name="PME_Trig761" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_wgL3sEr4EemA4_kRIR1Qqg" name="PME_Trig762" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_wgRXQEr4EemA4_kRIR1Qqg" name="PME_Trig763" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_wgUakEr4EemA4_kRIR1Qqg" name="PME_Trig764" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_wgW20Er4EemA4_kRIR1Qqg" name="PME_Trig765" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_wgahMEr4EemA4_kRIR1Qqg" name="PME_Trig766" port="_sxfygErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_wgcWYEr4EemA4_kRIR1Qqg" name="PME_Trig767" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_wgeyoEr4EemA4_kRIR1Qqg" name="To__RunAsMaster__768" guard="_xharMUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_UrcckAlOEea_md0mpENoqg">
              <ownedRule xmi:id="_xharMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1863">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xharMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1863">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__RunAsMaster__768&quot;,&quot;RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wgfZsEr4EemA4_kRIR1Qqg" name="To__Debug__InitState__769" guard="_xhlDQUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_tJHBQErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_xhlDQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1868">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhlDQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1868">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__769&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wglgUEr4EemA4_kRIR1Qqg" name="Trans__ex770" source="_s7e08UrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xdWqkEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wgnVgUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ServerFaliure__772" guard="_xhQTIUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_wgmHYEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhQTIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1857">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhQTIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1857">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wgpKsEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ServerFaliure__774" source="_wgn8kEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xXM_QEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wjr3oEr4EemA4_kRIR1Qqg" name="Trans__ExitPoint1829" source="_M8iZcONCEeaTpaLNj-zYpw" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xYYD8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wjxXMUr4EemA4_kRIR1Qqg" name="To__Substates__Backup__831" guard="_xhp7wUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_wjuT4Er4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhp7wUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1872">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhp7wEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1872">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Backup__831&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wjzzcEr4EemA4_kRIR1Qqg" name="From__Substates__Backup__833" source="_wjzMYEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xYIMUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xBZHUEr4EemA4_kRIR1Qqg" name="Trans__ex1286" source="_tF7xcUrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xYk4QEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xBdYwEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ServiceRequest__1288" guard="_xhI-YUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xBZuYEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhI-YUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1856">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhI-YEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1856">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xBgcEUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ServiceRequest__1290" source="_xBfN8Er4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xc2UQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xDjDcUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__PassiveMode__1323" guard="_xhQ6MUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xDicYEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhQ6MUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1858">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhQ6MEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1858">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xDk4oUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__PassiveMode__1325" source="_xDjqgEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xZ1cgEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xEznskr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__StandBy__CheckConfig__6__1357" guard="_xhnfgUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xEznsEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhnfgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1871">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhnfgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1871">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xE1c4Ur4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__StandBy__CheckConfig__6__1359" source="_xE010Er4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xfNEsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xF0UUEr4EemA4_kRIR1Qqg" name="Trans__ex1390" source="_s99hMUrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xVXzQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xF1icEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__initTimer__1392" guard="_xhcgYUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xF0UUUr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhcgYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1865">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhcgYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1865">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__initTimer__1392&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xF7CAUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__initTimer__1394" source="_xF3XoEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xXbBsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xHlO4Er4EemA4_kRIR1Qqg" name="Trans__ex1425" source="_s9MsMUrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xZkWwEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xHnrIUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__purgeotherMessage__1427" guard="_xhm4cUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xHl18Er4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhm4cUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1870">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhm4cEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1870">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xHqHYEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__purgeotherMessage__1429" source="_xHpgUEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xWTAUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xJ0qkEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ActiveMode__1485" guard="_xhSvYUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xJzccEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhSvYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1860">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhSvYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1860">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xJ5jEUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ActiveMode__1487" source="_xJ2fwEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xcgWAEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xLKHUkr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__MasterAnnounce__1519" guard="_xhT9gUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xLKHUEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhT9gUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1861">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhT9gEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1861">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xLLVcUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__MasterAnnounce__1521" source="_xLKuYEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xbY7sEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xMwCwUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Init__StandBy__3__1577" guard="_xhVysUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xMuNkEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhVysUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1862">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhVysEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1862">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xMwp0kr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Init__StandBy__3__1579" source="_xMwp0Er4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xdqMkEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xNu6MEr4EemA4_kRIR1Qqg" name="Trans__ex1610" source="_tHYi8UrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xVoR8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xNvhQUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__KeepAlive__1612" guard="_xhlqUUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xNu6MUr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhlqUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1869">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhlqUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1869">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xNx9gEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__KeepAlive__1614" source="_xNwIUEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xcCb8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xPbjUEr4EemA4_kRIR1Qqg" name="Trans__ex1669" source="_tBIJ8UrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xV1tUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xPd_kUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__BeingMaster__1671" guard="_xhSIUUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xPdYgEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhSIUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1859">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhSIUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1859">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xPfNsUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__BeingMaster__1673" source="_xPemoEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xXt8oEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xQeFIEr4EemA4_kRIR1Qqg" name="Trans__ex1705" source="_tEsbUUrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xg4fsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xQesMkr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707" guard="_xhinAUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xQesMEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhinAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1867">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhinAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1867">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xQf6UUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ExitPoint1__BeMaster__4__1709" source="_xQfTQEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xZA9IEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xSLVUEr4EemA4_kRIR1Qqg" name="Trans__ex1763" source="_tAc0gUrDEem2BZRQc2M93A" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xayewEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xSMjcEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Recover__1765" guard="_xhbSQUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xSL8YEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhbSQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1864">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhbSQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1864">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Recover__1765&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xSSqEEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Recover__1767" source="_xSOYoEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xbr2oEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xUN8sUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__BeSlave__1823" guard="_xhe8oUr4EemA4_kRIR1Qqg" source="_wc89gEr4EemA4_kRIR1Qqg" target="_xUNVoEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_xhe8oUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1866">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_xhe8oEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1866">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BeSlave__1823&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xUPK0Ur4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__BeSlave__1825" source="_xUOjwEr4EemA4_kRIR1Qqg" target="_wc89gEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xf194Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Substates__Debug__C__ServiceRequest__1288&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Substates__Debug__C__ServerFaliure__772&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Substates__Debug__C__PassiveMode__1323&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Substates__Debug__C__BeingMaster__1671&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Substates__Debug__C__ActiveMode__1485&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Substates__Debug__C__MasterAnnounce__1519&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Substates__Debug__C__Init__StandBy__3__1577&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;RunAsMaster&quot;,&quot;To__RunAsMaster__768&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Substates__Debug__C__Recover__1765&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Substates__Debug__C__initTimer__1392&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Substates__Debug__C__BeSlave__1823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Substates__Debug__C__ExitPoint1__BeMaster__4__1707&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__769&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Substates__Debug__C__KeepAlive__1612&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Substates__Debug__C__purgeotherMessage__1427&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Substates__Debug__C__StandBy__CheckConfig__6__1357&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Backup&quot;,&quot;To__Substates__Backup__831&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:State" xmi:id="_UrcckAlOEea_md0mpENoqg" name="RunAsMaster">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_YzyAkAlyEea_md0mpENoqg" name="RunAsMasterEntry">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_cjKg0PMsEeauO5SNGpOV7w" name="startTransition">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
    ts.getclock(ts);
    messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionStart,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     //logfile.flush();
}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_kLngAAp5EeaGqPUk-4V4qQ" name="BeMaster" kind="junction"/>
            <subvertex xmi:type="uml:State" xmi:id="_2g5S0ONBEeaTpaLNj-zYpw" name="Backup">
              <connectionPoint xmi:id="_M8iZcONCEeaTpaLNj-zYpw" name="ExitPoint1" kind="exitPoint"/>
              <connectionPoint xmi:id="_887yAKozEeiNHY6qjNhZ4w" name="Pseudo2" kind="entryPoint"/>
              <connectionPoint xmi:id="_wjuT4Er4EemA4_kRIR1Qqg" name="From__Parent__830" kind="entryPoint"/>
              <connectionPoint xmi:id="_wjzMYEr4EemA4_kRIR1Qqg" name="To__Parent__832" kind="exitPoint"/>
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tJjtMErDEem2BZRQc2M93A" name="Backup__681">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJkUQErDEem2BZRQc2M93A" name="Backup__682">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
              <region xmi:id="_ThAzEONCEeaTpaLNj-zYpw" name="Region1">
                <transition xmi:id="_LmVmEONDEeaTpaLNj-zYpw" name="NokeepAlive" source="_s-oPkErDEem2BZRQc2M93A" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LmWNIONDEeaTpaLNj-zYpw" name="CancellTimer">
                    <language>C++</language>
                    <body>    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: No keep Alive message from Master, Try to be Master-------\n&quot;;
    //TimerId=Timer.informEvery(UMLRTTimespec(2,0),4);
    ConfigComm.QueryConfig().send();
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to be Master\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::NokeepAlive&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_dg_NweNDEeaTpaLNj-zYpw" name="backtoslave" source="_s_WBQErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_9FQErDEem2BZRQc2M93A" name="backtoslave__386">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::backtoslave&quot;,(char *)&quot;Debug__Path__backtoslave&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_mHBPcONDEeaTpaLNj-zYpw" name="KeepAliveMsg" source="_tBq8gErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mHBPceNDEeaTpaLNj-zYpw" name="ProcessKeppAlive">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Keep Alive Message from &quot;&lt;&lt; ServerName&lt;&lt;&quot;\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    //KeepAliveTimerId=KeepAliveTimer.informEvery(UMLRTTimespec(6,0),4);

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::KeepAliveMsg&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_-mdZ0ONDEeaTpaLNj-zYpw" name="Initial1__RunAsSlave__7" source="_tIHiwErDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIv04ErDEem2BZRQc2M93A" name="Initial1__RunAsSlave__7__678">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Initial1__RunAsSlave__7&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_CPd8UONOEeaTpaLNj-zYpw" name="CheckNoMaster" source="_tFdQUErDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tF0csErDEem2BZRQc2M93A" name="CheckNoMaster__585">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::CheckNoMaster&quot;,(char *)&quot;Debug__Path__CheckNoMaster&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s63J4ErDEem2BZRQc2M93A" name="Debug__ReplyConfig" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_s6zfgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s63J4UrDEem2BZRQc2M93A" name="Debug__ReplyConfig__218">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__ReplyConfig&quot;,(char *)&quot;TryBeMaster&quot;,(char *)&quot;Debug__Path__ReplyConfig&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_XafJkeNDEeaTpaLNj-zYpw" name="ConfigReply" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_s8ceQErDEem2BZRQc2M93A" name="Debug__BackToSlave__E" source="_s8WXoUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8ceQUrDEem2BZRQc2M93A" name="Debug__BackToSlave__E__268">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__BackToSlave__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s8dsYErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8eTcErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__varChange__270">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s8dsYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8eTcUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8e6gUrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__setBreakPoint__271">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8e6gErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8fhkErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gIoErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__remBreakPoint__272">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8fhkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8gvsErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8gvskrDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__viewBreakPoints__273">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8gvsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8hWwErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8h90ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgSetExecMode__274">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s8hWwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s8ik4ErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg" source="_s8T7YUrDEem2BZRQc2M93A" target="_s8T7YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8jzAErDEem2BZRQc2M93A" name="Debug__BackToSlave__dbg__dbgDeferMsg__275">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s8ik4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8ik40rDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s8jL8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-r58UrDEem2BZRQc2M93A" name="Debug__NokeepAlive" source="_ZaK1gAlOEea_md0mpENoqg" target="_s-oPkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-shAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__339">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_LmWNIeNDEeaTpaLNj-zYpw" name="KeepAliveTimer" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-tIEErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S" guard="_s-tvIUrDEem2BZRQc2M93A" source="_s-oPkErDEem2BZRQc2M93A" target="_s-qr0UrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_s-tvIUrDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_s-tvIErDEem2BZRQc2M93A" name="Debug__GuardNokeepAlive">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-uWMErDEem2BZRQc2M93A" name="Debug__NokeepAlive__S__341">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__NokeepAlive__S&quot;,(char *)&quot;Debug__Path__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_s-xZgErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-yAkErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__varChange__344">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s-xZgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-ynoErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-ynokrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__setBreakPoint__345">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-ynoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-zOsErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-zOskrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__remBreakPoint__346">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-zOsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-z1wErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-0c0ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__viewBreakPoints__347">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-z1wUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-0c0UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-1D4ErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgSetExecMode__348">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s-0c0krDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s-1D4UrDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg" source="_s-pdsUrDEem2BZRQc2M93A" target="_s-pdsUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-2SAErDEem2BZRQc2M93A" name="Debug__NokeepAlive__dbg__dbgDeferMsg__349">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s-1D4krDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s-1q8krDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_gZUErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hAYErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__varChange__369">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_s_gZUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_hncErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_hnckrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__setBreakPoint__370">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_hncUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_i1kErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_kDsErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__remBreakPoint__371">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_i1kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_kqwErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_lR0ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__viewBreakPoints__372">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_kqwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_l44ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_mf8ErDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgSetExecMode__373">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_s_l44UrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s_mf8UrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg" source="_s_WoUUrDEem2BZRQc2M93A" target="_s_WoUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_nuEkrDEem2BZRQc2M93A" name="Debug__backtoslave__dbg__dbgDeferMsg__374">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_s_nHAErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nHAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_s_nuEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tBtYw0rDEem2BZRQc2M93A" name="Debug__KeepAliveMsg" source="_ZaK1gAlOEea_md0mpENoqg" target="_tBq8gErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBt_0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__445">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_mHBPcuNDEeaTpaLNj-zYpw" name="IAmlive" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                </transition>
                <transition xmi:id="_tBvN8ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S" guard="_tBv1AUrDEem2BZRQc2M93A" source="_tBq8gErDEem2BZRQc2M93A" target="_tBsxsUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_tBv1AUrDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_tBv1AErDEem2BZRQc2M93A" name="Debug__GuardKeepAliveMsg">
                      <language>C++</language>
                      <body>return Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                    </specification>
                  </ownedRule>
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBxDIErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__S__447">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__S&quot;,(char *)&quot;Debug__Path__KeepAliveMsg&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tByRQErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E" source="_tBtYwUrDEem2BZRQc2M93A" target="_ZaK1gAlOEea_md0mpENoqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tBy4UErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__E__448">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__KeepAliveMsg__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tB0GcErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB0GckrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__varChange__450">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tB0GcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB0tgErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB1UkErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__setBreakPoint__451">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB0tgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB17oErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB17okrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__remBreakPoint__452">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB17oUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB2isErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB2iskrDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__viewBreakPoints__453">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB2isUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB3JwErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB3w0ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgSetExecMode__454">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tB3JwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tB4X4ErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg" source="_tBrjkUrDEem2BZRQc2M93A" target="_tBrjkUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tB5mAErDEem2BZRQc2M93A" name="Debug__KeepAliveMsg__dbg__dbgDeferMsg__455">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tB4X4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4X4krDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tB4-8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDuyAErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDuyAkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__varChange__512">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tDuyAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDvZEErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDwAIUrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__setBreakPoint__513">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwAIErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDwnMErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDxOQErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__remBreakPoint__514">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDwnMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDx1UErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDx1UkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__viewBreakPoints__515">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDx1UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDycYErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDycYkrDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgSetExecMode__516">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tDycYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tDzDcErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg" source="_tDjy4UrDEem2BZRQc2M93A" target="_tDjy4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tD04oErDEem2BZRQc2M93A" name="Debug__backtoslave1__dbg__dbgDeferMsg__517">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tDzqgErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tDzqgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tD0RkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFj-AErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E" source="_tFfFgUrDEem2BZRQc2M93A" target="_M8iZcONCEeaTpaLNj-zYpw">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFklEErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__E__576">
                    <language>C++</language>
                    <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__CheckNoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;ExitPoint1&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tFmaQErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFnBUUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__varChange__578">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tFnBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFnoYErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFoPcErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__setBreakPoint__579">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFnoYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFo2gErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFpdkErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__remBreakPoint__580">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFo2gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqEoErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFqrsErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__viewBreakPoints__581">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFqEoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFqrsUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFrSwErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgSetExecMode__582">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tFqrskrDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tFrSwUrDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg" source="_tFd3YUrDEem2BZRQc2M93A" target="_tFd3YUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tFsg4ErDEem2BZRQc2M93A" name="Debug__CheckNoMaster__dbg__dbgDeferMsg__583">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tFr50ErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50UrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr50krDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tFr500rDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tILNIUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7" source="_8WMAUONDEeaTpaLNj-zYpw" target="_tIHiwErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIL0MErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__656">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__Initial1__RunAsSlave__7&quot;,(char *)&quot;Initial1&quot;,(char *)&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tIQFoErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIQssUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__varChange__661">
                    <language>C++</language>
                    <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
                  </effect>
                  <trigger xmi:id="_tIQssErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIRTwErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIR60UrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__setBreakPoint__662">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIR60ErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tITI8ErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tITwAUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__remBreakPoint__663">
                    <language>C++</language>
                    <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tITwAErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIUXEErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIU-IUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__viewBreakPoints__664">
                    <language>C++</language>
                    <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIU-IErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIU-IkrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIVlMUrDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgSetExecMode__665">
                    <language>C++</language>
                    <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
                  </effect>
                  <trigger xmi:id="_tIVlMErDEem2BZRQc2M93A" name="Debug__MSG" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tIWMQErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg" source="_tIIw4UrDEem2BZRQc2M93A" target="_tIIw4UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tIYBcErDEem2BZRQc2M93A" name="Debug__Initial1__RunAsSlave__7__dbg__dbgDeferMsg__666">
                    <language>C++</language>
                    <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
                  </effect>
                  <trigger xmi:id="_tIWzUErDEem2BZRQc2M93A" name="Debug__MSG" port="_rmnI0OM8EeaTpaLNj-zYpw">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIWzUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_-3KD0AgvEea_md0mpENoqg">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYErDEem2BZRQc2M93A" name="Debug__MSG" port="_HIvrsApCEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                  <trigger xmi:id="_tIXaYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_pQ6HcAnMEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wkIjkEr4EemA4_kRIR1Qqg" name="Trans__Debug__Path__ReplyConfig835" source="_s6zfgErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w77_kEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkJKoEr4EemA4_kRIR1Qqg" name="Trans__ExitPoint1836" source="_M8iZcONCEeaTpaLNj-zYpw" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xBE-QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkLm4Er4EemA4_kRIR1Qqg" name="Trans__Pseudo2837" source="_887yAKozEeiNHY6qjNhZ4w" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w7t9IEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkd6wEr4EemA4_kRIR1Qqg" name="838" source="_tIHiwErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w6wT0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkd6wUr4EemA4_kRIR1Qqg" name="839" source="_s6zfgErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xA_esEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReplyConfig&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReplyConfig&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkd6wkr4EemA4_kRIR1Qqg" name="840" source="_s-oPkErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w6f1IEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkeh0Er4EemA4_kRIR1Qqg" name="841" source="_tFdQUErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w7O08Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkeh0Ur4EemA4_kRIR1Qqg" name="842" source="_s_WBQErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xAH8AEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkeh0kr4EemA4_kRIR1Qqg" name="843" source="_tBq8gErDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w6-9UEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wkizQEr4EemA4_kRIR1Qqg" name="From__RunAsSlave__844" source="_ZaK1gAlOEea_md0mpENoqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w_m-oEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;RunAsSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wkl2kEr4EemA4_kRIR1Qqg" name="PME_Trig845" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wknEsEr4EemA4_kRIR1Qqg" name="PME_Trig846" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wktLUEr4EemA4_kRIR1Qqg" name="PME_Trig847" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wkwOoEr4EemA4_kRIR1Qqg" name="PME_Trig848" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wkz5AEr4EemA4_kRIR1Qqg" name="PME_Trig849" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wk5YkEr4EemA4_kRIR1Qqg" name="PME_Trig850" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_wk7NwEr4EemA4_kRIR1Qqg" name="PME_Trig851" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wk9qAEr4EemA4_kRIR1Qqg" name="PME_Trig852" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wlE-wEr4EemA4_kRIR1Qqg" name="PME_Trig853" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wlLscEr4EemA4_kRIR1Qqg" name="PME_Trig854" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wlP94Er4EemA4_kRIR1Qqg" name="PME_Trig855" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wlRzEEr4EemA4_kRIR1Qqg" name="PME_Trig856" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wlZH0Er4EemA4_kRIR1Qqg" name="PME_Trig857" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wlbkEEr4EemA4_kRIR1Qqg" name="PME_Trig858" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wlgckEr4EemA4_kRIR1Qqg" name="PME_Trig859" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wljf4Er4EemA4_kRIR1Qqg" name="PME_Trig860" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wlpmgEr4EemA4_kRIR1Qqg" name="PME_Trig861" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wlsp0Er4EemA4_kRIR1Qqg" name="PME_Trig862" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wlufAEr4EemA4_kRIR1Qqg" name="PME_Trig863" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_wlzXgEr4EemA4_kRIR1Qqg" name="From__TryBeMaster__864" source="_Px2BIAqSEeaGqPUk-4V4qQ" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w9F2IEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;TryBeMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wl3B4Er4EemA4_kRIR1Qqg" name="PME_Trig865" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wl43EEr4EemA4_kRIR1Qqg" name="PME_Trig866" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wl6sQEr4EemA4_kRIR1Qqg" name="PME_Trig867" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wmAy4Er4EemA4_kRIR1Qqg" name="PME_Trig868" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wmCoEEr4EemA4_kRIR1Qqg" name="PME_Trig869" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wmIHoEr4EemA4_kRIR1Qqg" name="PME_Trig870" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_wmKj4Er4EemA4_kRIR1Qqg" name="PME_Trig871" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wmMZEEr4EemA4_kRIR1Qqg" name="PME_Trig872" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_wmQqgEr4EemA4_kRIR1Qqg" name="PME_Trig873" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wmTGwEr4EemA4_kRIR1Qqg" name="PME_Trig874" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wmWxIEr4EemA4_kRIR1Qqg" name="PME_Trig875" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wmbpoEr4EemA4_kRIR1Qqg" name="PME_Trig876" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wmde0Er4EemA4_kRIR1Qqg" name="PME_Trig877" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wmgiIEr4EemA4_kRIR1Qqg" name="PME_Trig878" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wmkzkEr4EemA4_kRIR1Qqg" name="PME_Trig879" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wmn24Er4EemA4_kRIR1Qqg" name="PME_Trig880" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wmq6MEr4EemA4_kRIR1Qqg" name="PME_Trig881" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wmwZwEr4EemA4_kRIR1Qqg" name="PME_Trig882" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wmzdEEr4EemA4_kRIR1Qqg" name="PME_Trig883" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wm1SQEr4EemA4_kRIR1Qqg" name="PME_Trig884" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_wm8nAEr4EemA4_kRIR1Qqg" name="To__RunAsSlave__885" guard="_xBLE4Ur4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_ZaK1gAlOEea_md0mpENoqg">
                  <ownedRule xmi:id="_xBLE4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1278">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBLE4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1278">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__RunAsSlave__885&quot;,&quot;RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wm9OEEr4EemA4_kRIR1Qqg" name="To__TryBeMaster__886" guard="_xBKd0kr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_Px2BIAqSEeaGqPUk-4V4qQ">
                  <ownedRule xmi:id="_xBKd0kr4EemA4_kRIR1Qqg" name="PME_checkDecesion1277">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBKd0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1277">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__TryBeMaster__886&quot;,&quot;TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wnARYEr4EemA4_kRIR1Qqg" name="Trans__ex887" source="_s8WXoUrDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w8n8EEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wnEi0Ur4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__BackToSlave__889" guard="_xBXSIUr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wnCGkEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBXSIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1284">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBXSIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1284">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__BackToSlave__889&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wnFJ4Ur4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__BackToSlave__891" source="_wnEi0kr4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w8MeQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wqzMQEr4EemA4_kRIR1Qqg" name="Trans__ex946" source="_tDloEUrDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w7eFgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wq3dsEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__backtoslave1__948" guard="_xBUO0Er4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wqzzUEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBUO0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1282">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBTnwEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1282">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave1__948&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wq7IEEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__backtoslave1__950" source="_wq558Er4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w_4EYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wuFw0Er4EemA4_kRIR1Qqg" name="Trans__ex1004" source="_tBtYwUrDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xAXzoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wuINEEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__KeepAliveMsg__1006" guard="_xBOIMUr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wuFw0Ur4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBOIMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1280">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBOIMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1280">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wuI0IUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__KeepAliveMsg__1008" source="_wuINEUr4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w-8QQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wwMCkUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__NokeepAlive__1042" guard="_xBNhIUr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wwK0cEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBNhIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1279">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBNhIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1279">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wwMpoUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__NokeepAlive__1044" source="_wwMCkkr4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xAiLsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wy1t8Ur4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__backtoslave__1123" guard="_xBRLgUr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wy1G4Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBRLgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1281">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBRLgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1281">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__backtoslave__1123&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wy2VAUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__backtoslave__1125" source="_wy1t8kr4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w-Hw4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_w0y1wEr4EemA4_kRIR1Qqg" name="Trans__ex1180" source="_tFfFgUrDEem2BZRQc2M93A" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xA1GoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_w00D4Er4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__CheckNoMaster__1182" guard="_xBYgQUr4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_w0zc0Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBYgQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1285">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBYgQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1285">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_w00q8Er4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__CheckNoMaster__1184" source="_w00D4Ur4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w-hZgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_w2A9wUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Initial1__RunAsSlave__7__1217" guard="_xBKd0Er4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_w1_IkEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBKd0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1276">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBJ2wEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1276">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_w2Bk0Er4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Initial1__RunAsSlave__7__1219" source="_w2A9wkr4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w_QZUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_w54xIEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1274" source="_wjuT4Er4EemA4_kRIR1Qqg" target="_wj0agEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xArVoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Substates__Debug__C__Initial1__RunAsSlave__7__1217&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;TryBeMaster&quot;,&quot;To__TryBeMaster__886&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;RunAsSlave&quot;,&quot;To__RunAsSlave__885&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Substates__Debug__C__NokeepAlive__1042&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Substates__Debug__C__KeepAliveMsg__1006&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Substates__Debug__C__backtoslave__1123&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Substates__Debug__C__backtoslave1__948&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Backup&quot;,&quot;To__Parent__ServerStateMachine__1275&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Substates__Debug__C__BackToSlave__889&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Backup&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Substates__Debug__C__CheckNoMaster__1182&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Backup&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_w57NYEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1275" guard="_xBU14Ur4EemA4_kRIR1Qqg" source="_wj0agEr4EemA4_kRIR1Qqg" target="_wjzMYEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xBU14Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1283">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xBU14Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1283">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1275&quot;,&quot;Backup&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_Px2BIAqSEeaGqPUk-4V4qQ" name="TryBeMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_6FKVcAqVEeaGqPUk-4V4qQ" name="trytobemasterinit">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJolsErDEem2BZRQc2M93A" name="TryBeMaster__684">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_ZaK1gAlOEea_md0mpENoqg" name="RunAsSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_JeHBoAlzEea_md0mpENoqg" name="RunAsSlaveEntry">
                    <language>C++</language>
                    <body>if( not Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Running as Slave now\n&quot;;
    //if (KeepAliveTimerId.isValid())
    //	KeepAliveTimer.cancelTimer(KeepAliveTimerId);
    KeepAliveTimerId=KeepAliveTimer.informIn(UMLRTTimespec(6,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tJmJcErDEem2BZRQc2M93A" name="RunAsSlave__683">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_8WMAUONDEeaTpaLNj-zYpw" name="Initial1"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s6zfgErDEem2BZRQc2M93A" name="Debug__Path__ReplyConfig" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s8T7YUrDEem2BZRQc2M93A" name="Debug__C__BackToSlave">
                  <connectionPoint xmi:id="_s8VwkUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_s8WXoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_wnCGkEr4EemA4_kRIR1Qqg" name="From__Parent__888" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wnEi0kr4EemA4_kRIR1Qqg" name="To__Parent__890" kind="exitPoint"/>
                  <region xmi:id="_s8T7YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s8uLEErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave" source="_s8VwkUrDEem2BZRQc2M93A" target="_s8ndYUrDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8-CsErDEem2BZRQc2M93A" name="Debug__init__trans__BackToSlave__281">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__init__trans__BackToSlave&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s8uLEUrDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster" source="_s8ndYUrDEem2BZRQc2M93A" target="_s8pSkErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8_34ErDEem2BZRQc2M93A" name="Debug__Ex__TryBeMaster__283">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s8uyIErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_wnNswEr4EemA4_kRIR1Qqg" name="Trans__Init__State__893894" source="_wnL3kEr4EemA4_kRIR1Qqg" target="_wnFw8Er4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wqsekEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__893&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__939&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__893&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__942&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__893&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__893&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wnOT0Er4EemA4_kRIR1Qqg" name="Trans__ex895" source="_s8WXoUrDEem2BZRQc2M93A" target="_wnFw8Er4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wqlJ0Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__939&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__942&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wnQJAEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__BackToSlave__896" source="_s8pSkErDEem2BZRQc2M93A" target="_wnFw8Er4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wqbY0Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__939&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__942&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wnSlQEr4EemA4_kRIR1Qqg" name="PME_Trig897" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wnW2sEr4EemA4_kRIR1Qqg" name="PME_Trig898" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wnahEEr4EemA4_kRIR1Qqg" name="PME_Trig899" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wndkYEr4EemA4_kRIR1Qqg" name="PME_Trig900" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wnic4Er4EemA4_kRIR1Qqg" name="PME_Trig901" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wnlgMEr4EemA4_kRIR1Qqg" name="PME_Trig902" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wnnVYEr4EemA4_kRIR1Qqg" name="PME_Trig903" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wnsN4Er4EemA4_kRIR1Qqg" name="PME_Trig904" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wnwfUEr4EemA4_kRIR1Qqg" name="PME_Trig905" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wnzioEr4EemA4_kRIR1Qqg" name="PME_Trig906" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wn8FgEr4EemA4_kRIR1Qqg" name="PME_Trig907" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_woCzMEr4EemA4_kRIR1Qqg" name="PME_Trig908" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_woF2gEr4EemA4_kRIR1Qqg" name="PME_Trig909" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_woNLQEr4EemA4_kRIR1Qqg" name="PME_Trig910" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_woRcsEr4EemA4_kRIR1Qqg" name="PME_Trig911" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_woXjUEr4EemA4_kRIR1Qqg" name="PME_Trig912" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wobNsEr4EemA4_kRIR1Qqg" name="PME_Trig913" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_woh7YEr4EemA4_kRIR1Qqg" name="PME_Trig914" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_wollwEr4EemA4_kRIR1Qqg" name="PME_Trig915" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wooCAEr4EemA4_kRIR1Qqg" name="PME_Trig916" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wouvsEr4EemA4_kRIR1Qqg" name="PME_Trig917" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wozoMEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__TryBeMaster__918" source="_s8ndYUrDEem2BZRQc2M93A" target="_wnFw8Er4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wquTwEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__939&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__942&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wo2EcEr4EemA4_kRIR1Qqg" name="PME_Trig919" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wo5u0Er4EemA4_kRIR1Qqg" name="PME_Trig920" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wpCRsEr4EemA4_kRIR1Qqg" name="PME_Trig921" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wpFVAEr4EemA4_kRIR1Qqg" name="PME_Trig922" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wpOe8Er4EemA4_kRIR1Qqg" name="PME_Trig923" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wpVMoEr4EemA4_kRIR1Qqg" name="PME_Trig924" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wpY3AEr4EemA4_kRIR1Qqg" name="PME_Trig925" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wpe9oEr4EemA4_kRIR1Qqg" name="PME_Trig926" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wpioAEr4EemA4_kRIR1Qqg" name="PME_Trig927" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wpouoEr4EemA4_kRIR1Qqg" name="PME_Trig928" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wpsZAEr4EemA4_kRIR1Qqg" name="PME_Trig929" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wpuOMEr4EemA4_kRIR1Qqg" name="PME_Trig930" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wp0U0Er4EemA4_kRIR1Qqg" name="PME_Trig931" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wp2xEEr4EemA4_kRIR1Qqg" name="PME_Trig932" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wp8QoEr4EemA4_kRIR1Qqg" name="PME_Trig933" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wp-F0Er4EemA4_kRIR1Qqg" name="PME_Trig934" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wqBJIEr4EemA4_kRIR1Qqg" name="PME_Trig935" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wqGosEr4EemA4_kRIR1Qqg" name="PME_Trig936" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wqKTEEr4EemA4_kRIR1Qqg" name="PME_Trig937" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wqMIQEr4EemA4_kRIR1Qqg" name="PME_Trig938" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wqTdAEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__BackToSlave__939" guard="_wqu60Ur4EemA4_kRIR1Qqg" source="_wnFw8Er4EemA4_kRIR1Qqg" target="_s8pSkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wqu60Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion943">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wqu60Er4EemA4_kRIR1Qqg" name="PME_checkDecesion943">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__BackToSlave__939&quot;,&quot;Debug__B__Ac__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wqUEEEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__TryBeMaster__940" guard="_wqwwAUr4EemA4_kRIR1Qqg" source="_wnFw8Er4EemA4_kRIR1Qqg" target="_s8ndYUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wqwwAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion945">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wqwwAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion945">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wqVSMEr4EemA4_kRIR1Qqg" name="From__Parnet__Backup__941" source="_wnCGkEr4EemA4_kRIR1Qqg" target="_wnFw8Er4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wqfDMEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ac__BackToSlave&quot;,&quot;To__Debug__B__Ac__BackToSlave__939&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__C__BackToSlave&quot;,&quot;To__Parent__Backup__942&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BackToSlave&quot;,&quot;Debug__B__Ex__TryBeMaster&quot;,&quot;To__Debug__B__Ex__TryBeMaster__940&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BackToSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wqV5QEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__942" guard="_wqwI8Ur4EemA4_kRIR1Qqg" source="_wnFw8Er4EemA4_kRIR1Qqg" target="_wnEi0kr4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_wqwI8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion944">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wqwI8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion944">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__942&quot;,&quot;Debug__C__BackToSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s8ndYUrDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8oEcErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8ycgErDEem2BZRQc2M93A" name="Debug__B__Ex__TryBeMaster__276">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ex__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s8pSkErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s8pSkUrDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;BackToSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s81f0ErDEem2BZRQc2M93A" name="Debug__B__Ac__BackToSlave__277">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__BackToSlave::Region1::Debug__B__Ac__BackToSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wnFw8Er4EemA4_kRIR1Qqg" name="DecesionPoint__892" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wnL3kEr4EemA4_kRIR1Qqg" name="Init__State__893"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s-oPkErDEem2BZRQc2M93A" name="Debug__Path__NokeepAlive" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s-pdsUrDEem2BZRQc2M93A" name="Debug__C__NokeepAlive">
                  <connectionPoint xmi:id="_s-qr0UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wwK0cEr4EemA4_kRIR1Qqg" name="From__Parent__1041" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wwMCkkr4EemA4_kRIR1Qqg" name="To__Parent__1043" kind="exitPoint"/>
                  <region xmi:id="_s-pdskrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_s--N0ErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive" source="_s-qr0UrDEem2BZRQc2M93A" target="_s-5VUErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_MQQErDEem2BZRQc2M93A" name="Debug__init__trans__NokeepAlive__355">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__init__trans__NokeepAlive&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_s_ADAErDEem2BZRQc2M93A" name="Debug__En__TryBeMaster" source="_s-7xkErDEem2BZRQc2M93A" target="_s-8_sErDEem2BZRQc2M93A">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s_AqEErDEem2BZRQc2M93A" name="trytobemasterinit" visibility="public" isReentrant="true">
                        <language>C++</language>
                        <body>    //std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: trying to Be Master ------------\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__En__TryBeMaster&quot;,(char *)&quot;Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;);
</body>
                      </effect>
                      <trigger xmi:id="_s_ADAUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_wwSJMEr4EemA4_kRIR1Qqg" name="Trans__Init__State__10461047" source="_wwOe0Er4EemA4_kRIR1Qqg" target="_wwMpokr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wypgsEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1046&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1046&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1046&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1046&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1046&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wwTXUEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__RunAsSlave__1048" source="_s-5VUErDEem2BZRQc2M93A" target="_wwMpokr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wyl2UEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wwUlcEr4EemA4_kRIR1Qqg" name="PME_Trig1049" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wwXBsEr4EemA4_kRIR1Qqg" name="PME_Trig1050" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wwXowEr4EemA4_kRIR1Qqg" name="PME_Trig1051" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wwZd8Er4EemA4_kRIR1Qqg" name="PME_Trig1052" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wwdvYEr4EemA4_kRIR1Qqg" name="PME_Trig1053" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wwgLoEr4EemA4_kRIR1Qqg" name="PME_Trig1054" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wwjO8Er4EemA4_kRIR1Qqg" name="PME_Trig1055" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wwm5UEr4EemA4_kRIR1Qqg" name="PME_Trig1056" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wwpVkEr4EemA4_kRIR1Qqg" name="PME_Trig1057" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wwrx0Er4EemA4_kRIR1Qqg" name="PME_Trig1058" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wwwqUEr4EemA4_kRIR1Qqg" name="PME_Trig1059" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wwzGkEr4EemA4_kRIR1Qqg" name="PME_Trig1060" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_ww1i0Er4EemA4_kRIR1Qqg" name="PME_Trig1061" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ww2w8Er4EemA4_kRIR1Qqg" name="PME_Trig1062" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_ww4mIEr4EemA4_kRIR1Qqg" name="PME_Trig1063" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ww-swEr4EemA4_kRIR1Qqg" name="PME_Trig1064" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wxAh8Er4EemA4_kRIR1Qqg" name="PME_Trig1065" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wxEMUEr4EemA4_kRIR1Qqg" name="PME_Trig1066" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_wxGokEr4EemA4_kRIR1Qqg" name="PME_Trig1067" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxIdwEr4EemA4_kRIR1Qqg" name="PME_Trig1068" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wxJr4Er4EemA4_kRIR1Qqg" name="PME_Trig1069" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wxLhEEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__NokeepAlive__1070" source="_s-7xkErDEem2BZRQc2M93A" target="_wwMpokr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wyr88Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wxN9UEr4EemA4_kRIR1Qqg" name="PME_Trig1071" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxQZkEr4EemA4_kRIR1Qqg" name="PME_Trig1072" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wxRnsEr4EemA4_kRIR1Qqg" name="PME_Trig1073" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxUD8Er4EemA4_kRIR1Qqg" name="PME_Trig1074" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wxVSEEr4EemA4_kRIR1Qqg" name="PME_Trig1075" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxXuUEr4EemA4_kRIR1Qqg" name="PME_Trig1076" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wxbYsEr4EemA4_kRIR1Qqg" name="PME_Trig1077" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wxecAEr4EemA4_kRIR1Qqg" name="PME_Trig1078" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxfqIEr4EemA4_kRIR1Qqg" name="PME_Trig1079" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wxgRMEr4EemA4_kRIR1Qqg" name="PME_Trig1080" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxkioEr4EemA4_kRIR1Qqg" name="PME_Trig1081" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wxmX0Er4EemA4_kRIR1Qqg" name="PME_Trig1082" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wxoNAEr4EemA4_kRIR1Qqg" name="PME_Trig1083" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxpbIEr4EemA4_kRIR1Qqg" name="PME_Trig1084" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wxqpQEr4EemA4_kRIR1Qqg" name="PME_Trig1085" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wxtFgEr4EemA4_kRIR1Qqg" name="PME_Trig1086" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wxwI0Er4EemA4_kRIR1Qqg" name="PME_Trig1087" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wxylEEr4EemA4_kRIR1Qqg" name="PME_Trig1088" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wxzzMEr4EemA4_kRIR1Qqg" name="PME_Trig1089" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wx1BUEr4EemA4_kRIR1Qqg" name="PME_Trig1090" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wx3dkEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__TryBeMaster__1091" source="_s-8_sErDEem2BZRQc2M93A" target="_wwMpokr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wyvnUEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__TryBeMaster&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__TryBeMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wx5SwEr4EemA4_kRIR1Qqg" name="PME_Trig1092" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wx7vAEr4EemA4_kRIR1Qqg" name="PME_Trig1093" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wx89IEr4EemA4_kRIR1Qqg" name="PME_Trig1094" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wx-LQEr4EemA4_kRIR1Qqg" name="PME_Trig1095" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wyCcsEr4EemA4_kRIR1Qqg" name="PME_Trig1096" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wyDq0Er4EemA4_kRIR1Qqg" name="PME_Trig1097" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wyER4Er4EemA4_kRIR1Qqg" name="PME_Trig1098" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wyGuIEr4EemA4_kRIR1Qqg" name="PME_Trig1099" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wyH8QEr4EemA4_kRIR1Qqg" name="PME_Trig1100" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wyLmoEr4EemA4_kRIR1Qqg" name="PME_Trig1101" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wyM0wEr4EemA4_kRIR1Qqg" name="PME_Trig1102" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wyOC4Er4EemA4_kRIR1Qqg" name="PME_Trig1103" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wyPRAEr4EemA4_kRIR1Qqg" name="PME_Trig1104" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wyRtQEr4EemA4_kRIR1Qqg" name="PME_Trig1105" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wyUwkEr4EemA4_kRIR1Qqg" name="PME_Trig1106" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wyWlwEr4EemA4_kRIR1Qqg" name="PME_Trig1107" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wyXz4Er4EemA4_kRIR1Qqg" name="PME_Trig1108" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wyZCAEr4EemA4_kRIR1Qqg" name="PME_Trig1109" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_wybeQEr4EemA4_kRIR1Qqg" name="PME_Trig1110" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wycsYEr4EemA4_kRIR1Qqg" name="PME_Trig1111" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wyfvsEr4EemA4_kRIR1Qqg" name="PME_Trig1112" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wyiL8Er4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__RunAsSlave__1113" guard="_wyz4wUr4EemA4_kRIR1Qqg" source="_wwMpokr4EemA4_kRIR1Qqg" target="_s-5VUErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wyz4wUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1120">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wyz4wEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1120">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wyiL8Ur4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__NokeepAlive__1114" guard="_wy0f0Ur4EemA4_kRIR1Qqg" source="_wwMpokr4EemA4_kRIR1Qqg" target="_s-7xkErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wy0f0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1121">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wy0f0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1121">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wyizAEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__TryBeMaster__1115" guard="_wyyqoUr4EemA4_kRIR1Qqg" source="_wwMpokr4EemA4_kRIR1Qqg" target="_s-8_sErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wyyqoUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1119">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wyyqoEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1119">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__TryBeMaster__1115&quot;,&quot;Debug__A__En__TryBeMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wykBIEr4EemA4_kRIR1Qqg" name="From__Parnet__Backup__1116" source="_wwK0cEr4EemA4_kRIR1Qqg" target="_wwMpokr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wytLEEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__C__NokeepAlive&quot;,&quot;To__Parent__Backup__1117&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__En__TryBeMaster&quot;,&quot;To__Debug__A__En__TryBeMaster__1115&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__B__Ex__RunAsSlave&quot;,&quot;To__Debug__B__Ex__RunAsSlave__1113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NokeepAlive&quot;,&quot;Debug__A__Ac__NokeepAlive&quot;,&quot;To__Debug__A__Ac__NokeepAlive__1114&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NokeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wykoMEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__1117" guard="_wyxcgUr4EemA4_kRIR1Qqg" source="_wwMpokr4EemA4_kRIR1Qqg" target="_wwMCkkr4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_wyxcgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1118">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wyxcgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1118">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1117&quot;,&quot;Debug__C__NokeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s-5VUErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-5VUUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_CfQErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsSlave__350">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__B__Ex__RunAsSlave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-7xkErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-7xkUrDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;NokeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_H-0ErDEem2BZRQc2M93A" name="Debug__A__Ac__NokeepAlive__352">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__Ac__NokeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s-8_sErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-9mwErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;TryBeMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_J0AErDEem2BZRQc2M93A" name="Debug__A__En__TryBeMaster__353">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__NokeepAlive::Region1::Debug__A__En__TryBeMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wwMpokr4EemA4_kRIR1Qqg" name="DecesionPoint__1045" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wwOe0Er4EemA4_kRIR1Qqg" name="Init__State__1046"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_WBQErDEem2BZRQc2M93A" name="Debug__Path__backtoslave" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_s_WoUUrDEem2BZRQc2M93A" name="Debug__C__backtoslave">
                  <connectionPoint xmi:id="_wy1G4Er4EemA4_kRIR1Qqg" name="From__Parent__1122" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wy1t8kr4EemA4_kRIR1Qqg" name="To__Parent__1124" kind="exitPoint"/>
                  <region xmi:id="_s_XPYErDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_wy5_YEr4EemA4_kRIR1Qqg" name="Trans__Init__State__11271128" source="_wy4xQEr4EemA4_kRIR1Qqg" target="_wy28EEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w0rhAEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1127&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__1174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1127&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1127&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__1173&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1127&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wy7NgEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__backtoslave__1129" source="_s_r_gErDEem2BZRQc2M93A" target="_wy28EEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w0ukUEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__1174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__1173&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wy9CsEr4EemA4_kRIR1Qqg" name="PME_Trig1130" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzAGAEr4EemA4_kRIR1Qqg" name="PME_Trig1131" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wzBUIEr4EemA4_kRIR1Qqg" name="PME_Trig1132" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzCiQEr4EemA4_kRIR1Qqg" name="PME_Trig1133" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wzEXcEr4EemA4_kRIR1Qqg" name="PME_Trig1134" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzIB0Er4EemA4_kRIR1Qqg" name="PME_Trig1135" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wzKeEEr4EemA4_kRIR1Qqg" name="PME_Trig1136" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wzM6UEr4EemA4_kRIR1Qqg" name="PME_Trig1137" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzPWkEr4EemA4_kRIR1Qqg" name="PME_Trig1138" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wzUPEEr4EemA4_kRIR1Qqg" name="PME_Trig1139" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzWrUEr4EemA4_kRIR1Qqg" name="PME_Trig1140" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wzYggEr4EemA4_kRIR1Qqg" name="PME_Trig1141" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wzZuoEr4EemA4_kRIR1Qqg" name="PME_Trig1142" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wzcx8Er4EemA4_kRIR1Qqg" name="PME_Trig1143" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wzhqcEr4EemA4_kRIR1Qqg" name="PME_Trig1144" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wzi4kEr4EemA4_kRIR1Qqg" name="PME_Trig1145" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wznKAEr4EemA4_kRIR1Qqg" name="PME_Trig1146" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wzpmQEr4EemA4_kRIR1Qqg" name="PME_Trig1147" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_wzrbcEr4EemA4_kRIR1Qqg" name="PME_Trig1148" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wztQoEr4EemA4_kRIR1Qqg" name="PME_Trig1149" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wzvs4Er4EemA4_kRIR1Qqg" name="PME_Trig1150" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wzywMEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__backtoslave__1151" source="_s_pjQUrDEem2BZRQc2M93A" target="_wy28EEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w0pEwEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__1174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__1173&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wzz-UEr4EemA4_kRIR1Qqg" name="PME_Trig1152" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wz2akEr4EemA4_kRIR1Qqg" name="PME_Trig1153" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wz4PwEr4EemA4_kRIR1Qqg" name="PME_Trig1154" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wz8hMEr4EemA4_kRIR1Qqg" name="PME_Trig1155" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wz-WYEr4EemA4_kRIR1Qqg" name="PME_Trig1156" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0AyoEr4EemA4_kRIR1Qqg" name="PME_Trig1157" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_w0CAwEr4EemA4_kRIR1Qqg" name="PME_Trig1158" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w0FrIEr4EemA4_kRIR1Qqg" name="PME_Trig1159" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0JVgEr4EemA4_kRIR1Qqg" name="PME_Trig1160" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_w0LKsEr4EemA4_kRIR1Qqg" name="PME_Trig1161" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0MY0Er4EemA4_kRIR1Qqg" name="PME_Trig1162" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_w0Nm8Er4EemA4_kRIR1Qqg" name="PME_Trig1163" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_w0R4YEr4EemA4_kRIR1Qqg" name="PME_Trig1164" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0TtkEr4EemA4_kRIR1Qqg" name="PME_Trig1165" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w0ViwEr4EemA4_kRIR1Qqg" name="PME_Trig1166" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w0WJ0Er4EemA4_kRIR1Qqg" name="PME_Trig1167" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w0XX8Er4EemA4_kRIR1Qqg" name="PME_Trig1168" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_w0bpYEr4EemA4_kRIR1Qqg" name="PME_Trig1169" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_w0c3gEr4EemA4_kRIR1Qqg" name="PME_Trig1170" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0fTwEr4EemA4_kRIR1Qqg" name="PME_Trig1171" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_w0f60Er4EemA4_kRIR1Qqg" name="PME_Trig1172" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_w0hwAEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__backtoslave__1173" guard="_w0xnoUr4EemA4_kRIR1Qqg" source="_wy28EEr4EemA4_kRIR1Qqg" target="_s_r_gErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_w0xnoUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1179">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w0xnoEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1179">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__backtoslave__1173&quot;,&quot;Debug__A__En__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_w0iXEEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__backtoslave__1174" guard="_w0wZgUr4EemA4_kRIR1Qqg" source="_wy28EEr4EemA4_kRIR1Qqg" target="_s_pjQUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_w0wZgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1177">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w0wZgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1177">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave__1174&quot;,&quot;Debug__B__Ac__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_w0mBcEr4EemA4_kRIR1Qqg" name="From__Parnet__Backup__1175" source="_wy1G4Er4EemA4_kRIR1Qqg" target="_wy28EEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w0qS4Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__B__Ac__backtoslave&quot;,&quot;To__Debug__B__Ac__backtoslave__1174&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__C__backtoslave&quot;,&quot;To__Parent__Backup__1176&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave&quot;,&quot;Debug__A__En__backtoslave&quot;,&quot;To__Debug__A__En__backtoslave__1173&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w0mogEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__1176" guard="_w0xAkUr4EemA4_kRIR1Qqg" source="_wy28EEr4EemA4_kRIR1Qqg" target="_wy1t8kr4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_w0xAkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1178">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w0xAkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1178">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1176&quot;,&quot;Debug__C__backtoslave&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_s_pjQUrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_qKUErDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_vp4UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave__375">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__B__Ac__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_s_r_gErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s_r_gUrDEem2BZRQc2M93A" name="Debug__A__En__backtoslave">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s_1wgErDEem2BZRQc2M93A" name="Debug__A__En__backtoslave__377">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__backtoslave::Region1::Debug__A__En__backtoslave&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wy28EEr4EemA4_kRIR1Qqg" name="DecesionPoint__1126" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wy4xQEr4EemA4_kRIR1Qqg" name="Init__State__1127"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBq8gErDEem2BZRQc2M93A" name="Debug__Path__KeepAliveMsg" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tBrjkUrDEem2BZRQc2M93A" name="Debug__C__KeepAliveMsg">
                  <connectionPoint xmi:id="_tBsxsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tBtYwUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_wuFw0Ur4EemA4_kRIR1Qqg" name="From__Parent__1005" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wuINEUr4EemA4_kRIR1Qqg" name="To__Parent__1007" kind="exitPoint"/>
                  <region xmi:id="_tBrjkkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_wuQI4Er4EemA4_kRIR1Qqg" name="Trans__ex1011" source="_tBtYwUrDEem2BZRQc2M93A" target="_wuJbMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wwC4oEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__1038&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wuRXAEr4EemA4_kRIR1Qqg" name="Trans__en1012" source="_tBsxsUrDEem2BZRQc2M93A" target="_wuJbMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wwIYMEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__1038&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wuSlIEr4EemA4_kRIR1Qqg" name="Trans__Init__State__10101013" source="_wuOTsEr4EemA4_kRIR1Qqg" target="_wuJbMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wv_1UEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1010&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1010&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__1038&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1010&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wuTzQEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__KeepAliveMsg__1014" source="_tB-egErDEem2BZRQc2M93A" target="_wuJbMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wwGjAEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__1038&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wuVBYEr4EemA4_kRIR1Qqg" name="PME_Trig1015" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wucWIEr4EemA4_kRIR1Qqg" name="PME_Trig1016" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wuhOoEr4EemA4_kRIR1Qqg" name="PME_Trig1017" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wujq4Er4EemA4_kRIR1Qqg" name="PME_Trig1018" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wumuMEr4EemA4_kRIR1Qqg" name="PME_Trig1019" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wupKcEr4EemA4_kRIR1Qqg" name="PME_Trig1020" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wuuqAEr4EemA4_kRIR1Qqg" name="PME_Trig1021" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wuxGQEr4EemA4_kRIR1Qqg" name="PME_Trig1022" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wuzigEr4EemA4_kRIR1Qqg" name="PME_Trig1023" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wu4bAEr4EemA4_kRIR1Qqg" name="PME_Trig1024" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wu7eUEr4EemA4_kRIR1Qqg" name="PME_Trig1025" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wu9TgEr4EemA4_kRIR1Qqg" name="PME_Trig1026" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wvCzEEr4EemA4_kRIR1Qqg" name="PME_Trig1027" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wvF2YEr4EemA4_kRIR1Qqg" name="PME_Trig1028" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wvISoEr4EemA4_kRIR1Qqg" name="PME_Trig1029" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wvNLIEr4EemA4_kRIR1Qqg" name="PME_Trig1030" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wvQOcEr4EemA4_kRIR1Qqg" name="PME_Trig1031" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wvVuAEr4EemA4_kRIR1Qqg" name="PME_Trig1032" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_wvYxUEr4EemA4_kRIR1Qqg" name="PME_Trig1033" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wvbNkEr4EemA4_kRIR1Qqg" name="PME_Trig1034" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wvzoEEr4EemA4_kRIR1Qqg" name="PME_Trig1035" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wv1dQEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__KeepAliveMsg__1036" guard="_wwI_QUr4EemA4_kRIR1Qqg" source="_wuJbMEr4EemA4_kRIR1Qqg" target="_tB-egErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wwI_QUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1039">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wwI_QEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1039">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wv35gEr4EemA4_kRIR1Qqg" name="From__Parnet__Backup__1037" source="_wuFw0Ur4EemA4_kRIR1Qqg" target="_wuJbMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wv680Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__A__Ac__KeepAliveMsg&quot;,&quot;To__Debug__A__Ac__KeepAliveMsg__1036&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAliveMsg&quot;,&quot;Debug__C__KeepAliveMsg&quot;,&quot;To__Parent__Backup__1038&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAliveMsg&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wv4gkEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__1038" guard="_wwJmUUr4EemA4_kRIR1Qqg" source="_wuJbMEr4EemA4_kRIR1Qqg" target="_wuINEUr4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_wwJmUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1040">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wwJmUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1040">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1038&quot;,&quot;Debug__C__KeepAliveMsg&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tB-egErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tB_FkErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;KeepAliveMsg&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tCL54UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAliveMsg__458">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__KeepAliveMsg::Region1::Debug__A__Ac__KeepAliveMsg&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wuJbMEr4EemA4_kRIR1Qqg" name="DecesionPoint__1009" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wuOTsEr4EemA4_kRIR1Qqg" name="Init__State__1010"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tDjy4UrDEem2BZRQc2M93A" name="Debug__C__backtoslave1">
                  <connectionPoint xmi:id="_tDlBAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
                  <connectionPoint xmi:id="_tDloEUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_wqzzUEr4EemA4_kRIR1Qqg" name="From__Parent__947" kind="entryPoint"/>
                  <connectionPoint xmi:id="_wq558Er4EemA4_kRIR1Qqg" name="To__Parent__949" kind="exitPoint"/>
                  <region xmi:id="_tDjy4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_tD6YMErDEem2BZRQc2M93A" name="Debug__init__trans__backtoslave1" source="_tDlBAErDEem2BZRQc2M93A" target="_tD378UrDEem2BZRQc2M93A"/>
                    <transition xmi:id="_tD6YMUrDEem2BZRQc2M93A" name="Debug__Ac__backtoslave1" source="_tD378UrDEem2BZRQc2M93A" target="_tD5KEErDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6YMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_tD6_QErDEem2BZRQc2M93A" name="Debug__end__trans__backtoslave1" source="_tD5KEErDEem2BZRQc2M93A" target="_tDloEUrDEem2BZRQc2M93A">
                      <trigger xmi:id="_tD6_QUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                    </transition>
                    <transition xmi:id="_wrDq8Er4EemA4_kRIR1Qqg" name="Trans__Init__State__952953" source="_wq-LYEr4EemA4_kRIR1Qqg" target="_wq8WMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wt-cEEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__952&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__997&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__952&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__952&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__952&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wrESAEr4EemA4_kRIR1Qqg" name="Trans__ex954" source="_tDloEUrDEem2BZRQc2M93A" target="_wq8WMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wt7YwEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__997&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wrJKgEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__backtoslave1__955" source="_tD5KEErDEem2BZRQc2M93A" target="_wq8WMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wtrhIEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__997&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wrM04Er4EemA4_kRIR1Qqg" name="PME_Trig956" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wrPRIEr4EemA4_kRIR1Qqg" name="PME_Trig957" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wrVXwEr4EemA4_kRIR1Qqg" name="PME_Trig958" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wrX0AEr4EemA4_kRIR1Qqg" name="PME_Trig959" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wrbeYEr4EemA4_kRIR1Qqg" name="PME_Trig960" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wrd6oEr4EemA4_kRIR1Qqg" name="PME_Trig961" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wrizIEr4EemA4_kRIR1Qqg" name="PME_Trig962" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wrmdgEr4EemA4_kRIR1Qqg" name="PME_Trig963" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wrskIEr4EemA4_kRIR1Qqg" name="PME_Trig964" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_wrvncEr4EemA4_kRIR1Qqg" name="PME_Trig965" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wryqwEr4EemA4_kRIR1Qqg" name="PME_Trig966" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wr28MEr4EemA4_kRIR1Qqg" name="PME_Trig967" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wr5_gEr4EemA4_kRIR1Qqg" name="PME_Trig968" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wr70sEr4EemA4_kRIR1Qqg" name="PME_Trig969" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wsBUQEr4EemA4_kRIR1Qqg" name="PME_Trig970" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wsDwgEr4EemA4_kRIR1Qqg" name="PME_Trig971" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wsHa4Er4EemA4_kRIR1Qqg" name="PME_Trig972" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wsLsUEr4EemA4_kRIR1Qqg" name="PME_Trig973" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wsPWsEr4EemA4_kRIR1Qqg" name="PME_Trig974" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wsUPMEr4EemA4_kRIR1Qqg" name="PME_Trig975" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wsWEYEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__backtoslave1__976" source="_tD378UrDEem2BZRQc2M93A" target="_wq8WMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wtxnwEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__997&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_wsYgoEr4EemA4_kRIR1Qqg" name="PME_Trig977" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wsa84Er4EemA4_kRIR1Qqg" name="PME_Trig978" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wshqkEr4EemA4_kRIR1Qqg" name="PME_Trig979" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wskG0Er4EemA4_kRIR1Qqg" name="PME_Trig980" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wsnKIEr4EemA4_kRIR1Qqg" name="PME_Trig981" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wsspsEr4EemA4_kRIR1Qqg" name="PME_Trig982" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_wsyJQEr4EemA4_kRIR1Qqg" name="PME_Trig983" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_ws1zoEr4EemA4_kRIR1Qqg" name="PME_Trig984" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_ws4P4Er4EemA4_kRIR1Qqg" name="PME_Trig985" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_ws9vcEr4EemA4_kRIR1Qqg" name="PME_Trig986" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wtALsEr4EemA4_kRIR1Qqg" name="PME_Trig987" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_wtD2EEr4EemA4_kRIR1Qqg" name="PME_Trig988" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_wtIHgEr4EemA4_kRIR1Qqg" name="PME_Trig989" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wtJ8sEr4EemA4_kRIR1Qqg" name="PME_Trig990" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_wtNAAEr4EemA4_kRIR1Qqg" name="PME_Trig991" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wtQqYEr4EemA4_kRIR1Qqg" name="PME_Trig992" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_wtU70Er4EemA4_kRIR1Qqg" name="PME_Trig993" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_wtXYEEr4EemA4_kRIR1Qqg" name="PME_Trig994" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_wtdesEr4EemA4_kRIR1Qqg" name="PME_Trig995" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_wtgiAEr4EemA4_kRIR1Qqg" name="PME_Trig996" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_wtkMYEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__backtoslave1__997" guard="_wt_qMUr4EemA4_kRIR1Qqg" source="_wq8WMEr4EemA4_kRIR1Qqg" target="_tD5KEErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wt_qMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1001">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wt_qMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1001">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__backtoslave1__997&quot;,&quot;Debug__A__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wtlagEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__backtoslave1__998" guard="_wuBfYUr4EemA4_kRIR1Qqg" source="_wq8WMEr4EemA4_kRIR1Qqg" target="_tD378UrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_wuBfYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1002">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wuBfYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1002">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__backtoslave1__998&quot;,&quot;Debug__B__Ac__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_wtpE4Er4EemA4_kRIR1Qqg" name="From__Parnet__Backup__999" source="_wqzzUEr4EemA4_kRIR1Qqg" target="_wq8WMEr4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wt1SIEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__A__Ac__backtoslave1&quot;,&quot;To__Debug__A__Ac__backtoslave1__997&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__B__Ac__backtoslave1&quot;,&quot;To__Debug__B__Ac__backtoslave1__998&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__backtoslave1&quot;,&quot;Debug__C__backtoslave1&quot;,&quot;To__Parent__Backup__1000&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__backtoslave1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_wtpr8Er4EemA4_kRIR1Qqg" name="To__Parent__Backup__1000" guard="_wuEisUr4EemA4_kRIR1Qqg" source="_wq8WMEr4EemA4_kRIR1Qqg" target="_wq558Er4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_wuEisUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1003">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_wuEisEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1003">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1000&quot;,&quot;Debug__C__backtoslave1&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tD378UrDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD378krDEem2BZRQc2M93A" name="Debug__B__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tD5KEErDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tD5KEUrDEem2BZRQc2M93A" name="Debug__A__Ac__backtoslave1">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;backtoslave1&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wq8WMEr4EemA4_kRIR1Qqg" name="DecesionPoint__951" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_wq-LYEr4EemA4_kRIR1Qqg" name="Init__State__952"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFdQUErDEem2BZRQc2M93A" name="Debug__Path__CheckNoMaster" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tFd3YUrDEem2BZRQc2M93A" name="Debug__C__CheckNoMaster">
                  <connectionPoint xmi:id="_tFfFgUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
                  <connectionPoint xmi:id="_w0zc0Er4EemA4_kRIR1Qqg" name="From__Parent__1181" kind="entryPoint"/>
                  <connectionPoint xmi:id="_w00D4Ur4EemA4_kRIR1Qqg" name="To__Parent__1183" kind="exitPoint"/>
                  <region xmi:id="_tFd3YkrDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_w05jcEr4EemA4_kRIR1Qqg" name="Trans__ex1187" source="_tFfFgUrDEem2BZRQc2M93A" target="_w00q8Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w17eMEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1211&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1213&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w06KgEr4EemA4_kRIR1Qqg" name="Trans__Init__State__11861188" source="_w02gIEr4EemA4_kRIR1Qqg" target="_w00q8Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w11-oEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1186&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1211&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1186&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1213&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1186&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w06xkEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__CheckNoMaster__1189" source="_tFvkMErDEem2BZRQc2M93A" target="_w00q8Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w1xtMEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1211&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1213&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_w08mwEr4EemA4_kRIR1Qqg" name="PME_Trig1190" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w0904Er4EemA4_kRIR1Qqg" name="PME_Trig1191" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w0_DAEr4EemA4_kRIR1Qqg" name="PME_Trig1192" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1A4MEr4EemA4_kRIR1Qqg" name="PME_Trig1193" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w1EikEr4EemA4_kRIR1Qqg" name="PME_Trig1194" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1G-0Er4EemA4_kRIR1Qqg" name="PME_Trig1195" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_w1IM8Er4EemA4_kRIR1Qqg" name="PME_Trig1196" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w1JbEEr4EemA4_kRIR1Qqg" name="PME_Trig1197" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1NsgEr4EemA4_kRIR1Qqg" name="PME_Trig1198" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_w1O6oEr4EemA4_kRIR1Qqg" name="PME_Trig1199" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1QIwEr4EemA4_kRIR1Qqg" name="PME_Trig1200" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_w1SlAEr4EemA4_kRIR1Qqg" name="PME_Trig1201" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_w1TzIEr4EemA4_kRIR1Qqg" name="PME_Trig1202" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1Z5wEr4EemA4_kRIR1Qqg" name="PME_Trig1203" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w1c9EEr4EemA4_kRIR1Qqg" name="PME_Trig1204" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w1gncEr4EemA4_kRIR1Qqg" name="PME_Trig1205" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w1kR0Er4EemA4_kRIR1Qqg" name="PME_Trig1206" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_w1muEEr4EemA4_kRIR1Qqg" name="PME_Trig1207" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_w1nVIEr4EemA4_kRIR1Qqg" name="PME_Trig1208" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w1ojQEr4EemA4_kRIR1Qqg" name="PME_Trig1209" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_w1sNoEr4EemA4_kRIR1Qqg" name="PME_Trig1210" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_w1up4Er4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__CheckNoMaster__1211" guard="_w18FQUr4EemA4_kRIR1Qqg" source="_w00q8Ur4EemA4_kRIR1Qqg" target="_tFvkMErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_w18FQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1214">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w18FQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1214">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__CheckNoMaster__1211&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_w1vQ8Er4EemA4_kRIR1Qqg" name="From__Parnet__Backup__1212" source="_w0zc0Er4EemA4_kRIR1Qqg" target="_w00q8Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w13z0Er4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__B__Ac__CheckNoMaster&quot;,&quot;To__Debug__B__Ac__CheckNoMaster__1211&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__CheckNoMaster&quot;,&quot;Debug__C__CheckNoMaster&quot;,&quot;To__Parent__Backup__1213&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__CheckNoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w1v4AEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__1213" guard="_w196cEr4EemA4_kRIR1Qqg" source="_w00q8Ur4EemA4_kRIR1Qqg" target="_w00D4Ur4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_w196cEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1215">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w19TYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1215">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1213&quot;,&quot;Debug__C__CheckNoMaster&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tFvkMErDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFvkMUrDEem2BZRQc2M93A" name="Debug__B__Ac__CheckNoMaster">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;CheckNoMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                      </entry>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_w00q8Ur4EemA4_kRIR1Qqg" name="DecesionPoint__1185" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_w02gIEr4EemA4_kRIR1Qqg" name="Init__State__1186"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_tIHiwErDEem2BZRQc2M93A" name="Debug__Path__Initial1__RunAsSlave__7" kind="choice"/>
                <subvertex xmi:type="uml:State" xmi:id="_tIIw4UrDEem2BZRQc2M93A" name="Debug__C__Initial1__RunAsSlave__7">
                  <connectionPoint xmi:id="_w1_IkEr4EemA4_kRIR1Qqg" name="From__Parent__1216" kind="entryPoint"/>
                  <connectionPoint xmi:id="_w2A9wkr4EemA4_kRIR1Qqg" name="To__Parent__1218" kind="exitPoint"/>
                  <region xmi:id="_tIIw4krDEem2BZRQc2M93A" name="Region1">
                    <transition xmi:id="_w2FPMEr4EemA4_kRIR1Qqg" name="Trans__Init__State__12211222" source="_w2Cy8Er4EemA4_kRIR1Qqg" target="_w2Bk0Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w5fIgEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1221&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1270&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1221&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1268&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1221&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1221&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w2F2QEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Initial1__RunAsSlave__7__1223" source="_tIc58ErDEem2BZRQc2M93A" target="_w2Bk0Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w5wOQEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1270&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1268&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_w2GdUEr4EemA4_kRIR1Qqg" name="PME_Trig1224" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2KuwEr4EemA4_kRIR1Qqg" name="PME_Trig1225" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w2L84Er4EemA4_kRIR1Qqg" name="PME_Trig1226" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2OZIEr4EemA4_kRIR1Qqg" name="PME_Trig1227" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w2PnQEr4EemA4_kRIR1Qqg" name="PME_Trig1228" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2RccEr4EemA4_kRIR1Qqg" name="PME_Trig1229" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_w2bNcEr4EemA4_kRIR1Qqg" name="PME_Trig1230" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w2fe4Er4EemA4_kRIR1Qqg" name="PME_Trig1231" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2gtAEr4EemA4_kRIR1Qqg" name="PME_Trig1232" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_w2iiMEr4EemA4_kRIR1Qqg" name="PME_Trig1233" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2jwUEr4EemA4_kRIR1Qqg" name="PME_Trig1234" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_w2k-cEr4EemA4_kRIR1Qqg" name="PME_Trig1235" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_w2mzoEr4EemA4_kRIR1Qqg" name="PME_Trig1236" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2p28Er4EemA4_kRIR1Qqg" name="PME_Trig1237" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w2rsIEr4EemA4_kRIR1Qqg" name="PME_Trig1238" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w2thUEr4EemA4_kRIR1Qqg" name="PME_Trig1239" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w2uvcEr4EemA4_kRIR1Qqg" name="PME_Trig1240" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_w2xLsEr4EemA4_kRIR1Qqg" name="PME_Trig1241" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_w235YEr4EemA4_kRIR1Qqg" name="PME_Trig1242" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w2_OIEr4EemA4_kRIR1Qqg" name="PME_Trig1243" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_w3HJ8Er4EemA4_kRIR1Qqg" name="PME_Trig1244" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_w3Q68Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__Initial1__RunAsSlave__7__1245" source="_tIbEwUrDEem2BZRQc2M93A" target="_w2Bk0Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w5l2MEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1270&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1268&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                      <trigger xmi:id="_w3TXMEr4EemA4_kRIR1Qqg" name="PME_Trig1246" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w3bTAEr4EemA4_kRIR1Qqg" name="PME_Trig1247" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w3jO0Er4EemA4_kRIR1Qqg" name="PME_Trig1248" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w3rKoEr4EemA4_kRIR1Qqg" name="PME_Trig1249" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w3tm4Er4EemA4_kRIR1Qqg" name="PME_Trig1250" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w3xRQEr4EemA4_kRIR1Qqg" name="PME_Trig1251" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                      <trigger xmi:id="_w32w0Er4EemA4_kRIR1Qqg" name="PME_Trig1252" port="_855RMAs1EeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w350IEr4EemA4_kRIR1Qqg" name="PME_Trig1253" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w4Ah0Er4EemA4_kRIR1Qqg" name="PME_Trig1254" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                      <trigger xmi:id="_w4EMMEr4EemA4_kRIR1Qqg" name="PME_Trig1255" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w4JrwEr4EemA4_kRIR1Qqg" name="PME_Trig1256" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                      </trigger>
                      <trigger xmi:id="_w4NWIEr4EemA4_kRIR1Qqg" name="PME_Trig1257" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                      <trigger xmi:id="_w4SOoEr4EemA4_kRIR1Qqg" name="PME_Trig1258" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w4Uq4Er4EemA4_kRIR1Qqg" name="PME_Trig1259" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                      </trigger>
                      <trigger xmi:id="_w4ZjYEr4EemA4_kRIR1Qqg" name="PME_Trig1260" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w4d00Er4EemA4_kRIR1Qqg" name="PME_Trig1261" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                        <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                      </trigger>
                      <trigger xmi:id="_w4gREEr4EemA4_kRIR1Qqg" name="PME_Trig1262" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                      </trigger>
                      <trigger xmi:id="_w4mXsEr4EemA4_kRIR1Qqg" name="PME_Trig1263" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                      </trigger>
                      <trigger xmi:id="_w4oM4Er4EemA4_kRIR1Qqg" name="PME_Trig1264" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                      <trigger xmi:id="_w4u6kEr4EemA4_kRIR1Qqg" name="PME_Trig1265" port="_sxfygErDEem2BZRQc2M93A">
                        <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                      </trigger>
                      <trigger xmi:id="_w41oQEr4EemA4_kRIR1Qqg" name="PME_Trig1266" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                    </transition>
                    <transition xmi:id="_w5BOcEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Initial1__RunAsSlave__7__1267" guard="_w5zRkUr4EemA4_kRIR1Qqg" source="_w2Bk0Ur4EemA4_kRIR1Qqg" target="_tIc58ErDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_w5zRkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1273">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w5zRkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1273">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1267&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_w5DDoEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__Initial1__RunAsSlave__7__1268" guard="_w5yDcUr4EemA4_kRIR1Qqg" source="_w2Bk0Ur4EemA4_kRIR1Qqg" target="_tIbEwUrDEem2BZRQc2M93A">
                      <ownedRule xmi:id="_w5yDcUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1272">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w5yDcEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1272">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1268&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <transition xmi:id="_w5IjMEr4EemA4_kRIR1Qqg" name="From__Parnet__Backup__1269" source="_w1_IkEr4EemA4_kRIR1Qqg" target="_w2Bk0Ur4EemA4_kRIR1Qqg">
                      <effect xmi:type="uml:OpaqueBehavior" xmi:id="_w5WloEr4EemA4_kRIR1Qqg">
                        <language>C++</language>
                        <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;To__Parent__Backup__1270&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__B__Ac__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__B__Ac__Initial1__RunAsSlave__7__1268&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Initial1__RunAsSlave__7&quot;,&quot;Debug__A__En__Initial1__RunAsSlave__7&quot;,&quot;To__Debug__A__En__Initial1__RunAsSlave__7__1267&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Initial1__RunAsSlave__7&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                      </effect>
                    </transition>
                    <transition xmi:id="_w5KYYEr4EemA4_kRIR1Qqg" name="To__Parent__Backup__1270" guard="_w5xcYUr4EemA4_kRIR1Qqg" source="_w2Bk0Ur4EemA4_kRIR1Qqg" target="_w2A9wkr4EemA4_kRIR1Qqg">
                      <ownedRule xmi:id="_w5xcYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1271">
                        <specification xmi:type="uml:OpaqueExpression" xmi:id="_w5xcYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1271">
                          <language>C++</language>
                          <body>return execContext.checkUserDecesion({&quot;To__Parent__Backup__1270&quot;,&quot;Debug__C__Initial1__RunAsSlave__7&quot;, execContext.getExecLocation().locName});
</body>
                        </specification>
                      </ownedRule>
                    </transition>
                    <subvertex xmi:type="uml:State" xmi:id="_tIbEwUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIbEwkrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;Initial1__RunAsSlave__7&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tIhLYUrDEem2BZRQc2M93A" name="Debug__B__Ac__Initial1__RunAsSlave__7__667">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__B__Ac__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:State" xmi:id="_tIc58ErDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                      <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tIc58UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7">
                        <language>C++</language>
                        <body>if (not(Debug__SRO.checkDebug(&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </entry>
                      <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tImD4UrDEem2BZRQc2M93A" name="Debug__A__En__Initial1__RunAsSlave__7__669">
                        <language>C++</language>
                        <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Backup::Region1::Debug__C__Initial1__RunAsSlave__7::Region1::Debug__A__En__Initial1__RunAsSlave__7&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                      </exit>
                    </subvertex>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_w2Bk0Ur4EemA4_kRIR1Qqg" name="DecesionPoint__1220" kind="choice"/>
                    <subvertex xmi:type="uml:Pseudostate" xmi:id="_w2Cy8Er4EemA4_kRIR1Qqg" name="Init__State__1221"/>
                  </region>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wj0agEr4EemA4_kRIR1Qqg" name="DecesionPoint__834" kind="choice"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s7dm0UrDEem2BZRQc2M93A" name="Debug__C__ServerFaliure">
              <connectionPoint xmi:id="_s7eN4UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_s7e08UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wgmHYEr4EemA4_kRIR1Qqg" name="From__Parent__771" kind="entryPoint"/>
              <connectionPoint xmi:id="_wgn8kEr4EemA4_kRIR1Qqg" name="To__Parent__773" kind="exitPoint"/>
              <region xmi:id="_s7dm0krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s76SwUrDEem2BZRQc2M93A" name="Debug__En__Failure" source="_s71aQErDEem2BZRQc2M93A" target="_s73PcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s7650ErDEem2BZRQc2M93A" name="SetTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    //------

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__En__Failure&quot;,(char *)&quot;Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s76SwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_s7650UrDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure" source="_s73PcErDEem2BZRQc2M93A" target="_s7e08UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s8Pp8ErDEem2BZRQc2M93A" name="Debug__end__trans__ServerFaliure__262">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__end__trans__ServerFaliure&quot;,(char *)&quot;Debug__A__En__Failure&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s7650krDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wg0J0Er4EemA4_kRIR1Qqg" name="Trans__en777" source="_s7eN4UrDEem2BZRQc2M93A" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjJsIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wg3NIEr4EemA4_kRIR1Qqg" name="Trans__Init__State__776778" source="_wgwfcEr4EemA4_kRIR1Qqg" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjcnEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__776&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__776&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__776&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__776&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wg4bQEr4EemA4_kRIR1Qqg" name="Trans__ex779" source="_s7e08UrDEem2BZRQc2M93A" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjUEMEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wg8FoEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__ServerFaliure__780" source="_s71aQErDEem2BZRQc2M93A" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjHP4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wg8ssEr4EemA4_kRIR1Qqg" name="PME_Trig781" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whAXEEr4EemA4_kRIR1Qqg" name="PME_Trig782" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_whCzUEr4EemA4_kRIR1Qqg" name="PME_Trig783" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whF2oEr4EemA4_kRIR1Qqg" name="PME_Trig784" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_whHEwEr4EemA4_kRIR1Qqg" name="PME_Trig785" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whL9QEr4EemA4_kRIR1Qqg" name="PME_Trig786" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_whNLYEr4EemA4_kRIR1Qqg" name="PME_Trig787" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_whPnoEr4EemA4_kRIR1Qqg" name="PME_Trig788" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whRc0Er4EemA4_kRIR1Qqg" name="PME_Trig789" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_whXjcEr4EemA4_kRIR1Qqg" name="PME_Trig790" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whamwEr4EemA4_kRIR1Qqg" name="PME_Trig791" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_whcb8Er4EemA4_kRIR1Qqg" name="PME_Trig792" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_whgGUEr4EemA4_kRIR1Qqg" name="PME_Trig793" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whkXwEr4EemA4_kRIR1Qqg" name="PME_Trig794" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_whll4Er4EemA4_kRIR1Qqg" name="PME_Trig795" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_whopMEr4EemA4_kRIR1Qqg" name="PME_Trig796" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_whrsgEr4EemA4_kRIR1Qqg" name="PME_Trig797" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_whuIwEr4EemA4_kRIR1Qqg" name="PME_Trig798" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_whvW4Er4EemA4_kRIR1Qqg" name="PME_Trig799" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_whwlAEr4EemA4_kRIR1Qqg" name="PME_Trig800" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_whzBQEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Failure__801" source="_s73PcErDEem2BZRQc2M93A" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjWgcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Failure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wh35wEr4EemA4_kRIR1Qqg" name="PME_Trig802" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wh6WAEr4EemA4_kRIR1Qqg" name="PME_Trig803" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wh_1kEr4EemA4_kRIR1Qqg" name="PME_Trig804" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wiDf8Er4EemA4_kRIR1Qqg" name="PME_Trig805" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wiEuEEr4EemA4_kRIR1Qqg" name="PME_Trig806" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wiHKUEr4EemA4_kRIR1Qqg" name="PME_Trig807" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_wiNQ8Er4EemA4_kRIR1Qqg" name="PME_Trig808" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wiOfEEr4EemA4_kRIR1Qqg" name="PME_Trig809" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wiQ7UEr4EemA4_kRIR1Qqg" name="PME_Trig810" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_wiXB8Er4EemA4_kRIR1Qqg" name="PME_Trig811" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wiZeMEr4EemA4_kRIR1Qqg" name="PME_Trig812" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wigL4Er4EemA4_kRIR1Qqg" name="PME_Trig813" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wiioIEr4EemA4_kRIR1Qqg" name="PME_Trig814" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wingoEr4EemA4_kRIR1Qqg" name="PME_Trig815" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wiouwEr4EemA4_kRIR1Qqg" name="PME_Trig816" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_wirLAEr4EemA4_kRIR1Qqg" name="PME_Trig817" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_witAMEr4EemA4_kRIR1Qqg" name="PME_Trig818" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wiyfwEr4EemA4_kRIR1Qqg" name="PME_Trig819" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_wi2KIEr4EemA4_kRIR1Qqg" name="PME_Trig820" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wi3_UEr4EemA4_kRIR1Qqg" name="PME_Trig821" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_wi-F8Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__ServerFaliure__822" guard="_wjfDUUr4EemA4_kRIR1Qqg" source="_wgs1EEr4EemA4_kRIR1Qqg" target="_s71aQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wjfDUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion827">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wjfDUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion827">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wi_7IEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Failure__823" guard="_wjd1MUr4EemA4_kRIR1Qqg" source="_wgs1EEr4EemA4_kRIR1Qqg" target="_s73PcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wjd1MUr4EemA4_kRIR1Qqg" name="PME_checkDecesion826">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wjd1MEr4EemA4_kRIR1Qqg" name="PME_checkDecesion826">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Failure__823&quot;,&quot;Debug__A__En__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wjBJQEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__824" source="_wgmHYEr4EemA4_kRIR1Qqg" target="_wgs1EEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wjK6QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__En__Failure&quot;,&quot;To__Debug__A__En__Failure__823&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__A__Ac__ServerFaliure&quot;,&quot;To__Debug__A__Ac__ServerFaliure__822&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServerFaliure&quot;,&quot;Debug__C__ServerFaliure&quot;,&quot;To__Parent__ServerStateMachine__825&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServerFaliure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wjBJQUr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__825" guard="_wjfqYUr4EemA4_kRIR1Qqg" source="_wgs1EEr4EemA4_kRIR1Qqg" target="_wgn8kEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wjfqYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion828">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wjfqYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion828">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__825&quot;,&quot;Debug__C__ServerFaliure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s71aQErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s71aQUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServerFaliure&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8DcsErDEem2BZRQc2M93A" name="Debug__A__Ac__ServerFaliure__254">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__Ac__ServerFaliure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s73PcErDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s73PcUrDEem2BZRQc2M93A" name="Debug__A__En__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s8FR4ErDEem2BZRQc2M93A" name="Debug__A__En__Failure__255">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServerFaliure::Region1::Debug__A__En__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wgs1EEr4EemA4_kRIR1Qqg" name="DecesionPoint__775" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wgwfcEr4EemA4_kRIR1Qqg" name="Init__State__776"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_s9K3AUrDEem2BZRQc2M93A" name="Debug__C__purgeotherMessage">
              <connectionPoint xmi:id="_s9MsMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xHl18Er4EemA4_kRIR1Qqg" name="From__Parent__1426" kind="entryPoint"/>
              <connectionPoint xmi:id="_xHpgUEr4EemA4_kRIR1Qqg" name="To__Parent__1428" kind="exitPoint"/>
              <region xmi:id="_s9K3AkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s9iDYErDEem2BZRQc2M93A" name="Debug__Ex__Failure" source="_s9dx8ErDEem2BZRQc2M93A" target="_s9fAEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s9x7AErDEem2BZRQc2M93A" name="Debug__Ex__Failure__308">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__Ex__Failure&quot;,(char *)&quot;Debug__B__Ex__Failure&quot;,(char *)&quot;Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s9iDYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xHsjoEr4EemA4_kRIR1Qqg" name="Trans__ex1432" source="_s9MsMUrDEem2BZRQc2M93A" target="_xHqHYUr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xJpEYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xHtKsEr4EemA4_kRIR1Qqg" name="Trans__Init__State__14311433" source="_xHrVgEr4EemA4_kRIR1Qqg" target="_xHqHYUr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xJmBEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1431&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1431&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1431&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1431&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xHvm8Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Failure__1434" source="_s9dx8ErDEem2BZRQc2M93A" target="_xHqHYUr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xJuj8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xHw1EEr4EemA4_kRIR1Qqg" name="PME_Trig1435" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xHz4YEr4EemA4_kRIR1Qqg" name="PME_Trig1436" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xH1GgEr4EemA4_kRIR1Qqg" name="PME_Trig1437" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xH2UoEr4EemA4_kRIR1Qqg" name="PME_Trig1438" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xH3iwEr4EemA4_kRIR1Qqg" name="PME_Trig1439" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xH5X8Er4EemA4_kRIR1Qqg" name="PME_Trig1440" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xH70MEr4EemA4_kRIR1Qqg" name="PME_Trig1441" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xIAssEr4EemA4_kRIR1Qqg" name="PME_Trig1442" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIGMQEr4EemA4_kRIR1Qqg" name="PME_Trig1443" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xIIogEr4EemA4_kRIR1Qqg" name="PME_Trig1444" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIJ2oEr4EemA4_kRIR1Qqg" name="PME_Trig1445" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xIKdsEr4EemA4_kRIR1Qqg" name="PME_Trig1446" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xIMS4Er4EemA4_kRIR1Qqg" name="PME_Trig1447" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIP9QEr4EemA4_kRIR1Qqg" name="PME_Trig1448" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xISZgEr4EemA4_kRIR1Qqg" name="PME_Trig1449" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xITnoEr4EemA4_kRIR1Qqg" name="PME_Trig1450" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xIUOsEr4EemA4_kRIR1Qqg" name="PME_Trig1451" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xIVc0Er4EemA4_kRIR1Qqg" name="PME_Trig1452" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIX5EEr4EemA4_kRIR1Qqg" name="PME_Trig1453" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xIaVUEr4EemA4_kRIR1Qqg" name="PME_Trig1454" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xIfN0Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__purgeotherMessage__1455" source="_s9fAEErDEem2BZRQc2M93A" target="_xHqHYUr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xJvyEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xIiRIEr4EemA4_kRIR1Qqg" name="PME_Trig1456" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xInwsEr4EemA4_kRIR1Qqg" name="PME_Trig1457" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xIo-0Er4EemA4_kRIR1Qqg" name="PME_Trig1458" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIq0AEr4EemA4_kRIR1Qqg" name="PME_Trig1459" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xItQQEr4EemA4_kRIR1Qqg" name="PME_Trig1460" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xIyv0Er4EemA4_kRIR1Qqg" name="PME_Trig1461" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xI0lAEr4EemA4_kRIR1Qqg" name="PME_Trig1462" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xI2aMEr4EemA4_kRIR1Qqg" name="PME_Trig1463" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xI9H4Er4EemA4_kRIR1Qqg" name="PME_Trig1464" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xJALMEr4EemA4_kRIR1Qqg" name="PME_Trig1465" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xJD1kEr4EemA4_kRIR1Qqg" name="PME_Trig1466" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xJGR0Er4EemA4_kRIR1Qqg" name="PME_Trig1467" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xJHf8Er4EemA4_kRIR1Qqg" name="PME_Trig1468" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xJJVIEr4EemA4_kRIR1Qqg" name="PME_Trig1469" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xJLKUEr4EemA4_kRIR1Qqg" name="PME_Trig1470" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xJM_gEr4EemA4_kRIR1Qqg" name="PME_Trig1471" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xJPbwEr4EemA4_kRIR1Qqg" name="PME_Trig1472" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xJQp4Er4EemA4_kRIR1Qqg" name="PME_Trig1473" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xJR4AEr4EemA4_kRIR1Qqg" name="PME_Trig1474" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xJTtMEr4EemA4_kRIR1Qqg" name="PME_Trig1475" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xJU7UEr4EemA4_kRIR1Qqg" name="PME_Trig1476" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xJbpAEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Failure__1477" guard="_xJwZIUr4EemA4_kRIR1Qqg" source="_xHqHYUr4EemA4_kRIR1Qqg" target="_s9dx8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xJwZIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1481">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xJwZIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1481">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__1477&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xJcQEEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__purgeotherMessage__1478" guard="_xJy1YUr4EemA4_kRIR1Qqg" source="_xHqHYUr4EemA4_kRIR1Qqg" target="_s9fAEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xJy1YUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1483">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xJy1YEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1483">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xJesUEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1479" source="_xHl18Er4EemA4_kRIR1Qqg" target="_xHqHYUr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xJkL4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1477&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__C__purgeotherMessage&quot;,&quot;To__Parent__ServerStateMachine__1480&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__purgeotherMessage&quot;,&quot;Debug__B__Ac__purgeotherMessage&quot;,&quot;To__Debug__B__Ac__purgeotherMessage__1478&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__purgeotherMessage&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xJfTYEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1480" guard="_xJxAMUr4EemA4_kRIR1Qqg" source="_xHqHYUr4EemA4_kRIR1Qqg" target="_xHpgUEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xJxAMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1482">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xJxAMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1482">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1480&quot;,&quot;Debug__C__purgeotherMessage&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s9dx8ErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9dx8UrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9ltwUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__301">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_s9fAEErDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s9fAEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;purgeotherMessage&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s9oxEUrDEem2BZRQc2M93A" name="Debug__B__Ac__purgeotherMessage__302">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__purgeotherMessage::Region1::Debug__B__Ac__purgeotherMessage&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xHqHYUr4EemA4_kRIR1Qqg" name="DecesionPoint__1430" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xHrVgEr4EemA4_kRIR1Qqg" name="Init__State__1431"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s97E8ErDEem2BZRQc2M93A" name="Debug__Path__initTimer" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_s97sAUrDEem2BZRQc2M93A" name="Debug__C__initTimer">
              <connectionPoint xmi:id="_s99hMUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xF0UUUr4EemA4_kRIR1Qqg" name="From__Parent__1391" kind="entryPoint"/>
              <connectionPoint xmi:id="_xF3XoEr4EemA4_kRIR1Qqg" name="To__Parent__1393" kind="exitPoint"/>
              <region xmi:id="_s98TEErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_s-S4YUrDEem2BZRQc2M93A" name="Debug__end__trans__initTimer" source="_s-QcIErDEem2BZRQc2M93A" target="_s99hMUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_s-jXEErDEem2BZRQc2M93A" name="Debug__end__trans__initTimer__336">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__end__trans__initTimer&quot;,(char *)&quot;Debug__A__En__initTimer&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_s-S4YkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xGAhkEr4EemA4_kRIR1Qqg" name="Trans__Init__State__13961397" source="_xF-sYEr4EemA4_kRIR1Qqg" target="_xF7pEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xHaPwEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1396&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1396&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1420&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1396&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xGBIoEr4EemA4_kRIR1Qqg" name="Trans__ex1398" source="_s99hMUrDEem2BZRQc2M93A" target="_xF7pEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xHg9cEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1420&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xGH2UEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__initTimer__1399" source="_s-QcIErDEem2BZRQc2M93A" target="_xF7pEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xHXMcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1420&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xGMHwEr4EemA4_kRIR1Qqg" name="PME_Trig1400" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xGQZMEr4EemA4_kRIR1Qqg" name="PME_Trig1401" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xGUDkEr4EemA4_kRIR1Qqg" name="PME_Trig1402" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xGZjIEr4EemA4_kRIR1Qqg" name="PME_Trig1403" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xGbYUEr4EemA4_kRIR1Qqg" name="PME_Trig1404" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xGitEEr4EemA4_kRIR1Qqg" name="PME_Trig1405" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xGkiQEr4EemA4_kRIR1Qqg" name="PME_Trig1406" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xGnlkEr4EemA4_kRIR1Qqg" name="PME_Trig1407" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xGqo4Er4EemA4_kRIR1Qqg" name="PME_Trig1408" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xGvhYEr4EemA4_kRIR1Qqg" name="PME_Trig1409" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xGyksEr4EemA4_kRIR1Qqg" name="PME_Trig1410" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xG2PEEr4EemA4_kRIR1Qqg" name="PME_Trig1411" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xG5SYEr4EemA4_kRIR1Qqg" name="PME_Trig1412" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xG6ggEr4EemA4_kRIR1Qqg" name="PME_Trig1413" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xHB1QEr4EemA4_kRIR1Qqg" name="PME_Trig1414" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xHDqcEr4EemA4_kRIR1Qqg" name="PME_Trig1415" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xHGtwEr4EemA4_kRIR1Qqg" name="PME_Trig1416" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xHJxEEr4EemA4_kRIR1Qqg" name="PME_Trig1417" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xHM0YEr4EemA4_kRIR1Qqg" name="PME_Trig1418" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xHOCgEr4EemA4_kRIR1Qqg" name="PME_Trig1419" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xHQewEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__initTimer__1420" guard="_xHjZsUr4EemA4_kRIR1Qqg" source="_xF7pEEr4EemA4_kRIR1Qqg" target="_s-QcIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xHjZsUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1424">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xHjZsEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1424">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__initTimer__1420&quot;,&quot;Debug__A__En__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xHUJIEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1421" source="_xF0UUUr4EemA4_kRIR1Qqg" target="_xF7pEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xHWlYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__C__initTimer&quot;,&quot;To__Parent__ServerStateMachine__1422&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__initTimer&quot;,&quot;Debug__A__En__initTimer&quot;,&quot;To__Debug__A__En__initTimer__1420&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__initTimer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xHVXQEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1422" guard="_xHiLkUr4EemA4_kRIR1Qqg" source="_xF7pEEr4EemA4_kRIR1Qqg" target="_xF3XoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xHiLkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1423">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xHiLkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1423">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1422&quot;,&quot;Debug__C__initTimer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_s-QcIErDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_s-QcIUrDEem2BZRQc2M93A" name="Debug__A__En__initTimer">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_s-bbQErDEem2BZRQc2M93A" name="Debug__A__En__initTimer__330">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__initTimer::Region1::Debug__A__En__initTimer&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xF7pEEr4EemA4_kRIR1Qqg" name="DecesionPoint__1395" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xF-sYEr4EemA4_kRIR1Qqg" name="Init__State__1396"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_s_-6cErDEem2BZRQc2M93A" name="Debug__Path__ActiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAAIkErDEem2BZRQc2M93A" name="Debug__C__ActiveMode">
              <connectionPoint xmi:id="_xJzccEr4EemA4_kRIR1Qqg" name="From__Parent__1484" kind="entryPoint"/>
              <connectionPoint xmi:id="_xJ2fwEr4EemA4_kRIR1Qqg" name="To__Parent__1486" kind="exitPoint"/>
              <region xmi:id="_tAAIkUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xKCtAEr4EemA4_kRIR1Qqg" name="Trans__Init__State__14891490" source="_xJ90gEr4EemA4_kRIR1Qqg" target="_xJ6xMEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xLCLgEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1489&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1515&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1489&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1513&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1489&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xKDUEEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__ActiveMode__1491" source="_tATDgErDEem2BZRQc2M93A" target="_xJ6xMEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xLEnwEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1515&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1513&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xKD7IEr4EemA4_kRIR1Qqg" name="PME_Trig1492" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKFwUEr4EemA4_kRIR1Qqg" name="PME_Trig1493" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xKHlgEr4EemA4_kRIR1Qqg" name="PME_Trig1494" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKKo0Er4EemA4_kRIR1Qqg" name="PME_Trig1495" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xKNFEEr4EemA4_kRIR1Qqg" name="PME_Trig1496" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKNsIEr4EemA4_kRIR1Qqg" name="PME_Trig1497" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xKO6QEr4EemA4_kRIR1Qqg" name="PME_Trig1498" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xKQvcEr4EemA4_kRIR1Qqg" name="PME_Trig1499" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKR9kEr4EemA4_kRIR1Qqg" name="PME_Trig1500" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xKYrQEr4EemA4_kRIR1Qqg" name="PME_Trig1501" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKbukEr4EemA4_kRIR1Qqg" name="PME_Trig1502" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xKeK0Er4EemA4_kRIR1Qqg" name="PME_Trig1503" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xKgnEEr4EemA4_kRIR1Qqg" name="PME_Trig1504" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKicQEr4EemA4_kRIR1Qqg" name="PME_Trig1505" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xKjqYEr4EemA4_kRIR1Qqg" name="PME_Trig1506" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xKlfkEr4EemA4_kRIR1Qqg" name="PME_Trig1507" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xKn70Er4EemA4_kRIR1Qqg" name="PME_Trig1508" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xKrmMEr4EemA4_kRIR1Qqg" name="PME_Trig1509" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xKs0UEr4EemA4_kRIR1Qqg" name="PME_Trig1510" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xKvQkEr4EemA4_kRIR1Qqg" name="PME_Trig1511" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xKxs0Er4EemA4_kRIR1Qqg" name="PME_Trig1512" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xK3zcEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__ActiveMode__1513" guard="_xLI5MUr4EemA4_kRIR1Qqg" source="_xJ6xMEr4EemA4_kRIR1Qqg" target="_tATDgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xLI5MUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1517">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xLI5MEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1517">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ActiveMode__1513&quot;,&quot;Debug__B__Ac__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xK5ooEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1514" source="_xJzccEr4EemA4_kRIR1Qqg" target="_xJ6xMEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xK_vQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__C__ActiveMode&quot;,&quot;To__Parent__ServerStateMachine__1515&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ActiveMode&quot;,&quot;Debug__B__Ac__ActiveMode&quot;,&quot;To__Debug__B__Ac__ActiveMode__1513&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ActiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xK6PsEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1515" guard="_xLHEAUr4EemA4_kRIR1Qqg" source="_xJ6xMEr4EemA4_kRIR1Qqg" target="_xJ2fwEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xLHEAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1516">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xLHEAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1516">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1515&quot;,&quot;Debug__C__ActiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tATDgErDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tATDgUrDEem2BZRQc2M93A" name="Debug__B__Ac__ActiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ActiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xJ6xMEr4EemA4_kRIR1Qqg" name="DecesionPoint__1488" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xJ90gEr4EemA4_kRIR1Qqg" name="Init__State__1489"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tAaYQErDEem2BZRQc2M93A" name="Debug__Path__Recover" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tAa_UUrDEem2BZRQc2M93A" name="Debug__C__Recover">
              <connectionPoint xmi:id="_tAc0gUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xSL8YEr4EemA4_kRIR1Qqg" name="From__Parent__1764" kind="entryPoint"/>
              <connectionPoint xmi:id="_xSOYoEr4EemA4_kRIR1Qqg" name="To__Parent__1766" kind="exitPoint"/>
              <region xmi:id="_tAa_UkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tAxko0rDEem2BZRQc2M93A" name="Debug__end__trans__Recover" source="_tAvvcErDEem2BZRQc2M93A" target="_tAc0gUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tA_AAErDEem2BZRQc2M93A" name="Debug__end__trans__Recover__420">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__end__trans__Recover&quot;,(char *)&quot;Debug__A__Ac__Recover&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tAxkpErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xSdpMEr4EemA4_kRIR1Qqg" name="Trans__ex1770" source="_tAc0gUrDEem2BZRQc2M93A" target="_xSUfQEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xUGn8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1815&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xSeQQEr4EemA4_kRIR1Qqg" name="Trans__Init__State__17691771" source="_xSWUcEr4EemA4_kRIR1Qqg" target="_xSUfQEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xT-sIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1769&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1769&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1769&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1815&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1769&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xSfeYEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__Recover__1772" source="_tAvvcErDEem2BZRQc2M93A" target="_xSUfQEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xUELsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1815&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xSgFcEr4EemA4_kRIR1Qqg" name="PME_Trig1773" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xSjv0Er4EemA4_kRIR1Qqg" name="PME_Trig1774" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xSooUEr4EemA4_kRIR1Qqg" name="PME_Trig1775" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xSp2cEr4EemA4_kRIR1Qqg" name="PME_Trig1776" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xSs5wEr4EemA4_kRIR1Qqg" name="PME_Trig1777" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xSyZUEr4EemA4_kRIR1Qqg" name="PME_Trig1778" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xS3R0Er4EemA4_kRIR1Qqg" name="PME_Trig1779" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xS6VIEr4EemA4_kRIR1Qqg" name="PME_Trig1780" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xS8xYEr4EemA4_kRIR1Qqg" name="PME_Trig1781" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xS9YcEr4EemA4_kRIR1Qqg" name="PME_Trig1782" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xS-mkEr4EemA4_kRIR1Qqg" name="PME_Trig1783" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xTAbwEr4EemA4_kRIR1Qqg" name="PME_Trig1784" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xTEGIEr4EemA4_kRIR1Qqg" name="PME_Trig1785" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTGiYEr4EemA4_kRIR1Qqg" name="PME_Trig1786" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xTHJcEr4EemA4_kRIR1Qqg" name="PME_Trig1787" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xTIXkEr4EemA4_kRIR1Qqg" name="PME_Trig1788" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xTKz0Er4EemA4_kRIR1Qqg" name="PME_Trig1789" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xTN3IEr4EemA4_kRIR1Qqg" name="PME_Trig1790" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTQTYEr4EemA4_kRIR1Qqg" name="PME_Trig1791" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xTRhgEr4EemA4_kRIR1Qqg" name="PME_Trig1792" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xTSvoEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Failure__1793" source="_tAt6QErDEem2BZRQc2M93A" target="_xSUfQEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xUFZ0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Failure&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1815&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Failure&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xTTWsEr4EemA4_kRIR1Qqg" name="PME_Trig1794" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTVy8Er4EemA4_kRIR1Qqg" name="PME_Trig1795" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xTZdUEr4EemA4_kRIR1Qqg" name="PME_Trig1796" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTbSgEr4EemA4_kRIR1Qqg" name="PME_Trig1797" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xTcgoEr4EemA4_kRIR1Qqg" name="PME_Trig1798" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTdHsEr4EemA4_kRIR1Qqg" name="PME_Trig1799" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xTfj8Er4EemA4_kRIR1Qqg" name="PME_Trig1800" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xTgyEEr4EemA4_kRIR1Qqg" name="PME_Trig1801" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTiAMEr4EemA4_kRIR1Qqg" name="PME_Trig1802" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xTlqkEr4EemA4_kRIR1Qqg" name="PME_Trig1803" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTmRoEr4EemA4_kRIR1Qqg" name="PME_Trig1804" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xTnfwEr4EemA4_kRIR1Qqg" name="PME_Trig1805" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xTp8AEr4EemA4_kRIR1Qqg" name="PME_Trig1806" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xTs_UEr4EemA4_kRIR1Qqg" name="PME_Trig1807" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xTu0gEr4EemA4_kRIR1Qqg" name="PME_Trig1808" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xTwCoEr4EemA4_kRIR1Qqg" name="PME_Trig1809" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xTxQwEr4EemA4_kRIR1Qqg" name="PME_Trig1810" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xTye4Er4EemA4_kRIR1Qqg" name="PME_Trig1811" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xT2JQEr4EemA4_kRIR1Qqg" name="PME_Trig1812" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xT4lgEr4EemA4_kRIR1Qqg" name="PME_Trig1813" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xT5zoEr4EemA4_kRIR1Qqg" name="PME_Trig1814" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xT7BwEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__Recover__1815" guard="_xUK5YUr4EemA4_kRIR1Qqg" source="_xSUfQEr4EemA4_kRIR1Qqg" target="_tAvvcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xUK5YUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1821">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xUK5YEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1821">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__Recover__1815&quot;,&quot;Debug__A__Ac__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xT7BwUr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Failure__1816" guard="_xUHPAUr4EemA4_kRIR1Qqg" source="_xSUfQEr4EemA4_kRIR1Qqg" target="_tAt6QErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xUHPAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1819">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xUHPAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1819">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Failure__1816&quot;,&quot;Debug__B__Ex__Failure&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xT8P4Er4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1817" source="_xSL8YEr4EemA4_kRIR1Qqg" target="_xSUfQEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xUC9kEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__B__Ex__Failure&quot;,&quot;To__Debug__B__Ex__Failure__1816&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__C__Recover&quot;,&quot;To__Parent__ServerStateMachine__1818&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Recover&quot;,&quot;Debug__A__Ac__Recover&quot;,&quot;To__Debug__A__Ac__Recover__1815&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Recover&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xT8P4Ur4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1818" guard="_xUJEMUr4EemA4_kRIR1Qqg" source="_xSUfQEr4EemA4_kRIR1Qqg" target="_xSOYoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xUJEMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1820">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xUJEMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1820">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1818&quot;,&quot;Debug__C__Recover&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tAt6QErDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAt6QUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Failure&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tAyywUrDEem2BZRQc2M93A" name="Debug__B__Ex__Failure__413">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__B__Ex__Failure&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tAvvcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tAwWgErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Recover&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tA5gcErDEem2BZRQc2M93A" name="Debug__A__Ac__Recover__415">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Recover::Region1::Debug__A__Ac__Recover&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xSUfQEr4EemA4_kRIR1Qqg" name="DecesionPoint__1768" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xSWUcEr4EemA4_kRIR1Qqg" name="Init__State__1769"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tBD4gErDEem2BZRQc2M93A" name="Debug__Path__BeingMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tBFGoUrDEem2BZRQc2M93A" name="Debug__C__BeingMaster">
              <connectionPoint xmi:id="_tBIJ8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xPdYgEr4EemA4_kRIR1Qqg" name="From__Parent__1670" kind="entryPoint"/>
              <connectionPoint xmi:id="_xPemoEr4EemA4_kRIR1Qqg" name="To__Parent__1672" kind="exitPoint"/>
              <region xmi:id="_tBFGokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xPi4EEr4EemA4_kRIR1Qqg" name="Trans__ex1676" source="_tBIJ8UrDEem2BZRQc2M93A" target="_xPhC4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xQU7MEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1702&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xPi4EUr4EemA4_kRIR1Qqg" name="Trans__Init__State__16751677" source="_xPhp8Ur4EemA4_kRIR1Qqg" target="_xPhC4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xQaawEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1675&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1675&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1702&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1675&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xPkGMEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__BeingMaster__1678" source="_tBWzcErDEem2BZRQc2M93A" target="_xPhC4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xQbo4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1702&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xPl7YEr4EemA4_kRIR1Qqg" name="PME_Trig1679" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xPplwEr4EemA4_kRIR1Qqg" name="PME_Trig1680" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xPsCAEr4EemA4_kRIR1Qqg" name="PME_Trig1681" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xPvsYEr4EemA4_kRIR1Qqg" name="PME_Trig1682" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xPyIoEr4EemA4_kRIR1Qqg" name="PME_Trig1683" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xPzWwEr4EemA4_kRIR1Qqg" name="PME_Trig1684" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xP1zAEr4EemA4_kRIR1Qqg" name="PME_Trig1685" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xP5dYEr4EemA4_kRIR1Qqg" name="PME_Trig1686" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xP7SkEr4EemA4_kRIR1Qqg" name="PME_Trig1687" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xP8gsEr4EemA4_kRIR1Qqg" name="PME_Trig1688" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xP9u0Er4EemA4_kRIR1Qqg" name="PME_Trig1689" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xP_kAEr4EemA4_kRIR1Qqg" name="PME_Trig1690" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xQCnUEr4EemA4_kRIR1Qqg" name="PME_Trig1691" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xQFDkEr4EemA4_kRIR1Qqg" name="PME_Trig1692" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xQFqoEr4EemA4_kRIR1Qqg" name="PME_Trig1693" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xQG4wEr4EemA4_kRIR1Qqg" name="PME_Trig1694" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xQHf0Er4EemA4_kRIR1Qqg" name="PME_Trig1695" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xQIt8Er4EemA4_kRIR1Qqg" name="PME_Trig1696" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xQLxQEr4EemA4_kRIR1Qqg" name="PME_Trig1697" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xQPboEr4EemA4_kRIR1Qqg" name="PME_Trig1698" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xQQCsEr4EemA4_kRIR1Qqg" name="PME_Trig1699" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xQRQ0Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__BeingMaster__1700" guard="_xQbo4kr4EemA4_kRIR1Qqg" source="_xPhC4Er4EemA4_kRIR1Qqg" target="_tBWzcErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xQbo4kr4EemA4_kRIR1Qqg" name="PME_checkDecesion1703">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xQbo4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1703">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeingMaster__1700&quot;,&quot;Debug__A__Ac__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xQSe8Er4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1701" source="_xPdYgEr4EemA4_kRIR1Qqg" target="_xPhC4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xQXXcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__A__Ac__BeingMaster&quot;,&quot;To__Debug__A__Ac__BeingMaster__1700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeingMaster&quot;,&quot;Debug__C__BeingMaster&quot;,&quot;To__Parent__ServerStateMachine__1702&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeingMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xQTtEEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1702" guard="_xQdeEUr4EemA4_kRIR1Qqg" source="_xPhC4Er4EemA4_kRIR1Qqg" target="_xPemoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xQdeEUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1704">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xQdeEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1704">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1702&quot;,&quot;Debug__C__BeingMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tBWzcErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tBWzcUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeingMaster&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tBfWUErDEem2BZRQc2M93A" name="Debug__A__Ac__BeingMaster__435">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__BeingMaster::Region1::Debug__A__Ac__BeingMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xPhC4Er4EemA4_kRIR1Qqg" name="DecesionPoint__1674" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xPhp8Ur4EemA4_kRIR1Qqg" name="Init__State__1675"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tCc_oErDEem2BZRQc2M93A" name="Debug__Path__PassiveMode" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tCdmsUrDEem2BZRQc2M93A" name="Debug__C__PassiveMode">
              <connectionPoint xmi:id="_xDicYEr4EemA4_kRIR1Qqg" name="From__Parent__1322" kind="entryPoint"/>
              <connectionPoint xmi:id="_xDjqgEr4EemA4_kRIR1Qqg" name="To__Parent__1324" kind="exitPoint"/>
              <region xmi:id="_tCdmskrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xDtbgEr4EemA4_kRIR1Qqg" name="Trans__Init__State__13271328" source="_xDpxIEr4EemA4_kRIR1Qqg" target="_xDmGwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xErE0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1327&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__1353&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1327&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__1351&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1327&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xDwe0Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__PassiveMode__1329" source="_tCwhoUrDEem2BZRQc2M93A" target="_xDmGwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xEkXIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__1353&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__1351&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xDxs8Er4EemA4_kRIR1Qqg" name="PME_Trig1330" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xD1XUEr4EemA4_kRIR1Qqg" name="PME_Trig1331" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xD2lcEr4EemA4_kRIR1Qqg" name="PME_Trig1332" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xD3zkEr4EemA4_kRIR1Qqg" name="PME_Trig1333" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xD4aoEr4EemA4_kRIR1Qqg" name="PME_Trig1334" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xD624Er4EemA4_kRIR1Qqg" name="PME_Trig1335" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xD9TIEr4EemA4_kRIR1Qqg" name="PME_Trig1336" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xEBkkEr4EemA4_kRIR1Qqg" name="PME_Trig1337" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xECLoEr4EemA4_kRIR1Qqg" name="PME_Trig1338" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xEEn4Er4EemA4_kRIR1Qqg" name="PME_Trig1339" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xEISQEr4EemA4_kRIR1Qqg" name="PME_Trig1340" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xENKwEr4EemA4_kRIR1Qqg" name="PME_Trig1341" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xEPnAEr4EemA4_kRIR1Qqg" name="PME_Trig1342" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xET4cEr4EemA4_kRIR1Qqg" name="PME_Trig1343" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xEVGkEr4EemA4_kRIR1Qqg" name="PME_Trig1344" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xEWUsEr4EemA4_kRIR1Qqg" name="PME_Trig1345" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xEYJ4Er4EemA4_kRIR1Qqg" name="PME_Trig1346" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xEZ_EEr4EemA4_kRIR1Qqg" name="PME_Trig1347" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xEb0QEr4EemA4_kRIR1Qqg" name="PME_Trig1348" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xEe3kEr4EemA4_kRIR1Qqg" name="PME_Trig1349" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xEfeoEr4EemA4_kRIR1Qqg" name="PME_Trig1350" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xEgswEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__PassiveMode__1351" guard="_xExygUr4EemA4_kRIR1Qqg" source="_xDmGwEr4EemA4_kRIR1Qqg" target="_tCwhoUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xExygUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1355">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xExygEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1355">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__PassiveMode__1351&quot;,&quot;Debug__B__Ac__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xEih8Er4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1352" source="_xDicYEr4EemA4_kRIR1Qqg" target="_xDmGwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xEuIIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__C__PassiveMode&quot;,&quot;To__Parent__ServerStateMachine__1353&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__PassiveMode&quot;,&quot;Debug__B__Ac__PassiveMode&quot;,&quot;To__Debug__B__Ac__PassiveMode__1351&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__PassiveMode&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xEjJAEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1353" guard="_xEvWQUr4EemA4_kRIR1Qqg" source="_xDmGwEr4EemA4_kRIR1Qqg" target="_xDjqgEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xEvWQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1354">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xEvWQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1354">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1353&quot;,&quot;Debug__C__PassiveMode&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tCwhoUrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tCwhokrDEem2BZRQc2M93A" name="Debug__B__Ac__PassiveMode">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xDmGwEr4EemA4_kRIR1Qqg" name="DecesionPoint__1326" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xDpxIEr4EemA4_kRIR1Qqg" name="Init__State__1327"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tC5EgErDEem2BZRQc2M93A" name="Debug__Path__Init__StandBy__3" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tC6SoUrDEem2BZRQc2M93A" name="Debug__C__Init__StandBy__3">
              <connectionPoint xmi:id="_tC7gwErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_xMuNkEr4EemA4_kRIR1Qqg" name="From__Parent__1576" kind="entryPoint"/>
              <connectionPoint xmi:id="_xMwp0Er4EemA4_kRIR1Qqg" name="To__Parent__1578" kind="exitPoint"/>
              <region xmi:id="_tC6SokrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tDQ38ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3" source="_tC7gwErDEem2BZRQc2M93A" target="_tDN0oUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tDZa0ErDEem2BZRQc2M93A" name="Debug__init__trans__Init__StandBy__3__499">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__init__trans__Init__StandBy__3&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xM07QEr4EemA4_kRIR1Qqg" name="Trans__Init__State__15811582" source="_xMztIEr4EemA4_kRIR1Qqg" target="_xMx38Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xNtFAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1581&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1581&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1607&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1581&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xM2wcEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__Init__StandBy__3__1583" source="_tDN0oUrDEem2BZRQc2M93A" target="_xMx38Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xNnlcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1607&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xM5MsEr4EemA4_kRIR1Qqg" name="PME_Trig1584" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xM6a0Er4EemA4_kRIR1Qqg" name="PME_Trig1585" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xM7o8Er4EemA4_kRIR1Qqg" name="PME_Trig1586" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xM-FMEr4EemA4_kRIR1Qqg" name="PME_Trig1587" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xM_6YEr4EemA4_kRIR1Qqg" name="PME_Trig1588" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xNC9sEr4EemA4_kRIR1Qqg" name="PME_Trig1589" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xNEL0Er4EemA4_kRIR1Qqg" name="PME_Trig1590" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xNEy4Er4EemA4_kRIR1Qqg" name="PME_Trig1591" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xNGBAEr4EemA4_kRIR1Qqg" name="PME_Trig1592" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xNHPIEr4EemA4_kRIR1Qqg" name="PME_Trig1593" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xNJrYEr4EemA4_kRIR1Qqg" name="PME_Trig1594" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xNOj4Er4EemA4_kRIR1Qqg" name="PME_Trig1595" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xNPK8Er4EemA4_kRIR1Qqg" name="PME_Trig1596" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xNQZEEr4EemA4_kRIR1Qqg" name="PME_Trig1597" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xNUqgEr4EemA4_kRIR1Qqg" name="PME_Trig1598" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xNY78Er4EemA4_kRIR1Qqg" name="PME_Trig1599" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xNZjAEr4EemA4_kRIR1Qqg" name="PME_Trig1600" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xNbYMEr4EemA4_kRIR1Qqg" name="PME_Trig1601" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xNebgEr4EemA4_kRIR1Qqg" name="PME_Trig1602" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xNhe0Er4EemA4_kRIR1Qqg" name="PME_Trig1603" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xNjUAEr4EemA4_kRIR1Qqg" name="PME_Trig1604" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xNkiIEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__Init__StandBy__3__1605" guard="_xNtsEUr4EemA4_kRIR1Qqg" source="_xMx38Er4EemA4_kRIR1Qqg" target="_tDN0oUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xNtsEUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1608">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xNtsEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1608">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__Init__StandBy__3__1605&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xNlJMEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1606" source="_xMuNkEr4EemA4_kRIR1Qqg" target="_xMx38Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xNrP0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__B__Ac__Init__StandBy__3&quot;,&quot;To__Debug__B__Ac__Init__StandBy__3__1605&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Init__StandBy__3&quot;,&quot;Debug__C__Init__StandBy__3&quot;,&quot;To__Parent__ServerStateMachine__1607&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Init__StandBy__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xNlJMUr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1607" guard="_xNtsE0r4EemA4_kRIR1Qqg" source="_xMx38Er4EemA4_kRIR1Qqg" target="_xMwp0Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xNtsE0r4EemA4_kRIR1Qqg" name="PME_checkDecesion1609">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xNtsEkr4EemA4_kRIR1Qqg" name="PME_checkDecesion1609">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1607&quot;,&quot;Debug__C__Init__StandBy__3&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tDN0oUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tDObsErDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Init__StandBy__3&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tDTUMUrDEem2BZRQc2M93A" name="Debug__B__Ac__Init__StandBy__3__495">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__Init__StandBy__3::Region1::Debug__B__Ac__Init__StandBy__3&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xMx38Er4EemA4_kRIR1Qqg" name="DecesionPoint__1580" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xMztIEr4EemA4_kRIR1Qqg" name="Init__State__1581"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tEBF4UrDEem2BZRQc2M93A" name="Debug__C__MasterAnnounce">
              <connectionPoint xmi:id="_tECUAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_xLKHUEr4EemA4_kRIR1Qqg" name="From__Parent__1518" kind="entryPoint"/>
              <connectionPoint xmi:id="_xLKuYEr4EemA4_kRIR1Qqg" name="To__Parent__1520" kind="exitPoint"/>
              <region xmi:id="_tEBs8ErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tEV2AUrDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tESysErDEem2BZRQc2M93A" target="_tEUA0ErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tEWdEErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tEV2AkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xLO_0Er4EemA4_kRIR1Qqg" name="Trans__en1524" source="_tECUAUrDEem2BZRQc2M93A" target="_xLL8gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xMgyMEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1570&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1572&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xLPm4Er4EemA4_kRIR1Qqg" name="Trans__Init__State__15231525" source="_xLMjkEr4EemA4_kRIR1Qqg" target="_xLL8gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xMm40Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1523&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1570&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1523&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1572&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1523&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1523&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xLUfYEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__MasterAnnounce__1526" source="_tESysErDEem2BZRQc2M93A" target="_xLL8gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xMp8IEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1570&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1572&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xLVtgEr4EemA4_kRIR1Qqg" name="PME_Trig1527" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLWUkEr4EemA4_kRIR1Qqg" name="PME_Trig1528" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xLZX4Er4EemA4_kRIR1Qqg" name="PME_Trig1529" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLamAEr4EemA4_kRIR1Qqg" name="PME_Trig1530" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xLdpUEr4EemA4_kRIR1Qqg" name="PME_Trig1531" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLe3cEr4EemA4_kRIR1Qqg" name="PME_Trig1532" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xLgFkEr4EemA4_kRIR1Qqg" name="PME_Trig1533" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xLgsoEr4EemA4_kRIR1Qqg" name="PME_Trig1534" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLjI4Er4EemA4_kRIR1Qqg" name="PME_Trig1535" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xLk-EEr4EemA4_kRIR1Qqg" name="PME_Trig1536" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLoBYEr4EemA4_kRIR1Qqg" name="PME_Trig1537" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xLpPgEr4EemA4_kRIR1Qqg" name="PME_Trig1538" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xLqdoEr4EemA4_kRIR1Qqg" name="PME_Trig1539" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xLrrwEr4EemA4_kRIR1Qqg" name="PME_Trig1540" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xLtg8Er4EemA4_kRIR1Qqg" name="PME_Trig1541" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xLuIAEr4EemA4_kRIR1Qqg" name="PME_Trig1542" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xLv9MEr4EemA4_kRIR1Qqg" name="PME_Trig1543" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xLzAgEr4EemA4_kRIR1Qqg" name="PME_Trig1544" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xL0OoEr4EemA4_kRIR1Qqg" name="PME_Trig1545" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xL1cwEr4EemA4_kRIR1Qqg" name="PME_Trig1546" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xL3R8Er4EemA4_kRIR1Qqg" name="From__Debug__A__En__RunAsMaster__1547" source="_tEUA0ErDEem2BZRQc2M93A" target="_xLL8gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xMoG8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1570&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1572&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xL4gEEr4EemA4_kRIR1Qqg" name="PME_Trig1548" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xL8KcEr4EemA4_kRIR1Qqg" name="PME_Trig1549" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xL9YkEr4EemA4_kRIR1Qqg" name="PME_Trig1550" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xL-msEr4EemA4_kRIR1Qqg" name="PME_Trig1551" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xMAb4Er4EemA4_kRIR1Qqg" name="PME_Trig1552" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xMBqAEr4EemA4_kRIR1Qqg" name="PME_Trig1553" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xMCREEr4EemA4_kRIR1Qqg" name="PME_Trig1554" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xMEtUEr4EemA4_kRIR1Qqg" name="PME_Trig1555" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xMHwoEr4EemA4_kRIR1Qqg" name="PME_Trig1556" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xMIXsEr4EemA4_kRIR1Qqg" name="PME_Trig1557" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xMJl0Er4EemA4_kRIR1Qqg" name="PME_Trig1558" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xMMCEEr4EemA4_kRIR1Qqg" name="PME_Trig1559" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xMNQMEr4EemA4_kRIR1Qqg" name="PME_Trig1560" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xMQTgEr4EemA4_kRIR1Qqg" name="PME_Trig1561" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xMRhoEr4EemA4_kRIR1Qqg" name="PME_Trig1562" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xMSvwEr4EemA4_kRIR1Qqg" name="PME_Trig1563" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xMTW0Er4EemA4_kRIR1Qqg" name="PME_Trig1564" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xMVzEEr4EemA4_kRIR1Qqg" name="PME_Trig1565" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xMXoQEr4EemA4_kRIR1Qqg" name="PME_Trig1566" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xMarkEr4EemA4_kRIR1Qqg" name="PME_Trig1567" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xMb5sEr4EemA4_kRIR1Qqg" name="PME_Trig1568" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xMdH0Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__MasterAnnounce__1569" guard="_xMsYYUr4EemA4_kRIR1Qqg" source="_xLL8gEr4EemA4_kRIR1Qqg" target="_tESysErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xMsYYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1575">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xMsYYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1575">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xMdH0Ur4EemA4_kRIR1Qqg" name="To__Debug__A__En__RunAsMaster__1570" guard="_xMqjMUr4EemA4_kRIR1Qqg" source="_xLL8gEr4EemA4_kRIR1Qqg" target="_tEUA0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xMqjMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1573">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xMqjMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1573">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1570&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xMe9AEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1571" source="_xLKHUEr4EemA4_kRIR1Qqg" target="_xLL8gEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xMlqsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1570&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__C__MasterAnnounce&quot;,&quot;To__Parent__ServerStateMachine__1572&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__MasterAnnounce&quot;,&quot;Debug__A__Ac__MasterAnnounce&quot;,&quot;To__Debug__A__Ac__MasterAnnounce__1569&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__MasterAnnounce&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xMfkEEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1572" guard="_xMrKQUr4EemA4_kRIR1Qqg" source="_xLL8gEr4EemA4_kRIR1Qqg" target="_xLKuYEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xMrKQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1574">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xMrKQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1574">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1572&quot;,&quot;Debug__C__MasterAnnounce&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tESysErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tESysUrDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;MasterAnnounce&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEcjsErDEem2BZRQc2M93A" name="Debug__A__Ac__MasterAnnounce__534">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__Ac__MasterAnnounce&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tEUA0ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tEUA0UrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tEeY4ErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__535">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__MasterAnnounce::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xLL8gEr4EemA4_kRIR1Qqg" name="DecesionPoint__1522" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xLMjkEr4EemA4_kRIR1Qqg" name="Init__State__1523"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tEp_EErDEem2BZRQc2M93A" name="Debug__Path__ExitPoint1__BeMaster__4" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tEqmIUrDEem2BZRQc2M93A" name="Debug__C__ExitPoint1__BeMaster__4">
              <connectionPoint xmi:id="_tEr0QUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tEsbUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xQesMEr4EemA4_kRIR1Qqg" name="From__Parent__1706" kind="entryPoint"/>
              <connectionPoint xmi:id="_xQfTQEr4EemA4_kRIR1Qqg" name="To__Parent__1708" kind="exitPoint"/>
              <region xmi:id="_tErNMErDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tE-vMErDEem2BZRQc2M93A" name="Debug__init__trans__ExitPoint1__BeMaster__4" source="_tEr0QUrDEem2BZRQc2M93A" target="_tE86AErDEem2BZRQc2M93A"/>
                <transition xmi:id="_tE-vMUrDEem2BZRQc2M93A" name="Debug__Ac__ExitPoint1__BeMaster__4" source="_tE86AErDEem2BZRQc2M93A" target="_tE9hEErDEem2BZRQc2M93A">
                  <trigger xmi:id="_tE-vMkrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tE-vM0rDEem2BZRQc2M93A" name="Debug__end__trans__ExitPoint1__BeMaster__4" source="_tE9hEErDEem2BZRQc2M93A" target="_tEsbUUrDEem2BZRQc2M93A">
                  <trigger xmi:id="_tE-vNErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xQmA8Er4EemA4_kRIR1Qqg" name="Trans__Init__State__17111712" source="_xQiWkEr4EemA4_kRIR1Qqg" target="_xQf6Ukr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xSCLYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1711&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__1759&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1711&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1711&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1711&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xQmoAEr4EemA4_kRIR1Qqg" name="Trans__ex1713" source="_tEsbUUrDEem2BZRQc2M93A" target="_xQf6Ukr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xSEnoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__1759&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xQt8wEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__ExitPoint1__BeMaster__4__1714" source="_tE9hEErDEem2BZRQc2M93A" target="_xQf6Ukr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xSHD4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__1759&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xQuj0Er4EemA4_kRIR1Qqg" name="PME_Trig1715" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xQvx8Er4EemA4_kRIR1Qqg" name="PME_Trig1716" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xQyOMEr4EemA4_kRIR1Qqg" name="PME_Trig1717" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xQ1RgEr4EemA4_kRIR1Qqg" name="PME_Trig1718" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xQ474Er4EemA4_kRIR1Qqg" name="PME_Trig1719" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xQ6KAEr4EemA4_kRIR1Qqg" name="PME_Trig1720" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xQ7YIEr4EemA4_kRIR1Qqg" name="PME_Trig1721" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xQ9NUEr4EemA4_kRIR1Qqg" name="PME_Trig1722" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRAQoEr4EemA4_kRIR1Qqg" name="PME_Trig1723" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xRCs4Er4EemA4_kRIR1Qqg" name="PME_Trig1724" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRD7AEr4EemA4_kRIR1Qqg" name="PME_Trig1725" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xRFwMEr4EemA4_kRIR1Qqg" name="PME_Trig1726" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xRHlYEr4EemA4_kRIR1Qqg" name="PME_Trig1727" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRKosEr4EemA4_kRIR1Qqg" name="PME_Trig1728" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xRMd4Er4EemA4_kRIR1Qqg" name="PME_Trig1729" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xRNsAEr4EemA4_kRIR1Qqg" name="PME_Trig1730" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xRO6IEr4EemA4_kRIR1Qqg" name="PME_Trig1731" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xRQvUEr4EemA4_kRIR1Qqg" name="PME_Trig1732" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRTLkEr4EemA4_kRIR1Qqg" name="PME_Trig1733" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xRVn0Er4EemA4_kRIR1Qqg" name="PME_Trig1734" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xRW18Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__ExitPoint1__BeMaster__4__1735" source="_tE86AErDEem2BZRQc2M93A" target="_xQf6Ukr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xR_vIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__1759&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xRXdAEr4EemA4_kRIR1Qqg" name="PME_Trig1736" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRYrIEr4EemA4_kRIR1Qqg" name="PME_Trig1737" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xRagUEr4EemA4_kRIR1Qqg" name="PME_Trig1738" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRdjoEr4EemA4_kRIR1Qqg" name="PME_Trig1739" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xRf_4Er4EemA4_kRIR1Qqg" name="PME_Trig1740" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRhOAEr4EemA4_kRIR1Qqg" name="PME_Trig1741" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xRicIEr4EemA4_kRIR1Qqg" name="PME_Trig1742" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xRjDMEr4EemA4_kRIR1Qqg" name="PME_Trig1743" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRlfcEr4EemA4_kRIR1Qqg" name="PME_Trig1744" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xRnUoEr4EemA4_kRIR1Qqg" name="PME_Trig1745" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRqX8Er4EemA4_kRIR1Qqg" name="PME_Trig1746" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xRrmEEr4EemA4_kRIR1Qqg" name="PME_Trig1747" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xRsNIEr4EemA4_kRIR1Qqg" name="PME_Trig1748" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xRtbQEr4EemA4_kRIR1Qqg" name="PME_Trig1749" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xRvQcEr4EemA4_kRIR1Qqg" name="PME_Trig1750" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xRwekEr4EemA4_kRIR1Qqg" name="PME_Trig1751" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xRzh4Er4EemA4_kRIR1Qqg" name="PME_Trig1752" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xR1XEEr4EemA4_kRIR1Qqg" name="PME_Trig1753" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xR2lMEr4EemA4_kRIR1Qqg" name="PME_Trig1754" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xR3zUEr4EemA4_kRIR1Qqg" name="PME_Trig1755" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xR6PkEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756" guard="_xSKuQUr4EemA4_kRIR1Qqg" source="_xQf6Ukr4EemA4_kRIR1Qqg" target="_tE9hEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xSKuQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1762">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xSKuQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1762">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xR6PkUr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757" guard="_xSKHMUr4EemA4_kRIR1Qqg" source="_xQf6Ukr4EemA4_kRIR1Qqg" target="_tE86AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xSKHMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1761">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xSKHMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1761">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xR8EwEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1758" source="_xQesMEr4EemA4_kRIR1Qqg" target="_xQf6Ukr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xSA9QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;To__Parent__ServerStateMachine__1759&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__B__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__B__Ac__ExitPoint1__BeMaster__4__1757&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ExitPoint1__BeMaster__4&quot;,&quot;Debug__A__Ac__ExitPoint1__BeMaster__4&quot;,&quot;To__Debug__A__Ac__ExitPoint1__BeMaster__4__1756&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xR8r0Er4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1759" guard="_xSJgIUr4EemA4_kRIR1Qqg" source="_xQf6Ukr4EemA4_kRIR1Qqg" target="_xQfTQEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xSJgIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1760">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xSJgIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1760">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1759&quot;,&quot;Debug__C__ExitPoint1__BeMaster__4&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tE86AErDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE86AUrDEem2BZRQc2M93A" name="Debug__B__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tE9hEErDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tE9hEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ExitPoint1__BeMaster__4">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ExitPoint1__BeMaster__4&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xQf6Ukr4EemA4_kRIR1Qqg" name="DecesionPoint__1710" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xQiWkEr4EemA4_kRIR1Qqg" name="Init__State__1711"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tFEOwErDEem2BZRQc2M93A" name="Debug__Path__BeSlave" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tFE10UrDEem2BZRQc2M93A" name="Debug__C__BeSlave">
              <connectionPoint xmi:id="_xUNVoEr4EemA4_kRIR1Qqg" name="From__Parent__1822" kind="entryPoint"/>
              <connectionPoint xmi:id="_xUOjwEr4EemA4_kRIR1Qqg" name="To__Parent__1824" kind="exitPoint"/>
              <region xmi:id="_tFE10krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xUS1MEr4EemA4_kRIR1Qqg" name="Trans__Init__State__18271828" source="_xUQY8Ur4EemA4_kRIR1Qqg" target="_xUPx4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xVCcEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1827&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1827&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1851&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1827&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xUUqYEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__BeSlave__1829" source="_tFWioErDEem2BZRQc2M93A" target="_xUPx4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xVE4UEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1851&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xUWfkEr4EemA4_kRIR1Qqg" name="PME_Trig1830" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUYUwEr4EemA4_kRIR1Qqg" name="PME_Trig1831" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xUZi4Er4EemA4_kRIR1Qqg" name="PME_Trig1832" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUaxAEr4EemA4_kRIR1Qqg" name="PME_Trig1833" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xUd0UEr4EemA4_kRIR1Qqg" name="PME_Trig1834" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUhesEr4EemA4_kRIR1Qqg" name="PME_Trig1835" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xUiFwEr4EemA4_kRIR1Qqg" name="PME_Trig1836" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xUjT4Er4EemA4_kRIR1Qqg" name="PME_Trig1837" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUkiAEr4EemA4_kRIR1Qqg" name="PME_Trig1838" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xUmXMEr4EemA4_kRIR1Qqg" name="PME_Trig1839" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUpagEr4EemA4_kRIR1Qqg" name="PME_Trig1840" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xUsd0Er4EemA4_kRIR1Qqg" name="PME_Trig1841" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xUtr8Er4EemA4_kRIR1Qqg" name="PME_Trig1842" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xUuTAEr4EemA4_kRIR1Qqg" name="PME_Trig1843" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xUwIMEr4EemA4_kRIR1Qqg" name="PME_Trig1844" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xUxWUEr4EemA4_kRIR1Qqg" name="PME_Trig1845" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xUzykEr4EemA4_kRIR1Qqg" name="PME_Trig1846" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xU214Er4EemA4_kRIR1Qqg" name="PME_Trig1847" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xU3c8Er4EemA4_kRIR1Qqg" name="PME_Trig1848" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xU4rEEr4EemA4_kRIR1Qqg" name="PME_Trig1849" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xU55MEr4EemA4_kRIR1Qqg" name="PME_Trig1850" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xU9jkEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__BeSlave__1851" guard="_xVGtgUr4EemA4_kRIR1Qqg" source="_xUPx4Er4EemA4_kRIR1Qqg" target="_tFWioErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xVGtgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1855">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xVGtgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1855">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__BeSlave__1851&quot;,&quot;Debug__A__Ac__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xU__0Er4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1852" source="_xUNVoEr4EemA4_kRIR1Qqg" target="_xUPx4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xVBN8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__C__BeSlave&quot;,&quot;To__Parent__ServerStateMachine__1853&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__BeSlave&quot;,&quot;Debug__A__Ac__BeSlave&quot;,&quot;To__Debug__A__Ac__BeSlave__1851&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__BeSlave&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xVAm4Er4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1853" guard="_xVFfYUr4EemA4_kRIR1Qqg" source="_xUPx4Er4EemA4_kRIR1Qqg" target="_xUOjwEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xVFfYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1854">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xVFfYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1854">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1853&quot;,&quot;Debug__C__BeSlave&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tFWioErDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tFWioUrDEem2BZRQc2M93A" name="Debug__A__Ac__BeSlave">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}
</body>
                  </entry>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xUPx4Er4EemA4_kRIR1Qqg" name="DecesionPoint__1826" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xUQY8Ur4EemA4_kRIR1Qqg" name="Init__State__1827"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tF58QErDEem2BZRQc2M93A" name="Debug__C__ServiceRequest">
              <connectionPoint xmi:id="_tF7xcUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xBZuYEr4EemA4_kRIR1Qqg" name="From__Parent__1287" kind="entryPoint"/>
              <connectionPoint xmi:id="_xBfN8Er4EemA4_kRIR1Qqg" name="To__Parent__1289" kind="exitPoint"/>
              <region xmi:id="_tF58QUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xBqNEEr4EemA4_kRIR1Qqg" name="Trans__ex1293" source="_tF7xcUrDEem2BZRQc2M93A" target="_xBktgEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xDeK8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1319&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xBqNEUr4EemA4_kRIR1Qqg" name="Trans__Init__State__12921294" source="_xBoX4Er4EemA4_kRIR1Qqg" target="_xBktgEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xDZScEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1292&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1319&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1292&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1292&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xBtQYEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__RunAsMaster__1295" source="_tGLCAUrDEem2BZRQc2M93A" target="_xBktgEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xDYEUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1319&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xBuegEr4EemA4_kRIR1Qqg" name="PME_Trig1296" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xB0lIEr4EemA4_kRIR1Qqg" name="PME_Trig1297" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xB6EsEr4EemA4_kRIR1Qqg" name="PME_Trig1298" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xCAyYEr4EemA4_kRIR1Qqg" name="PME_Trig1299" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xCIHIEr4EemA4_kRIR1Qqg" name="PME_Trig1300" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xCLKcEr4EemA4_kRIR1Qqg" name="PME_Trig1301" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xCSfMEr4EemA4_kRIR1Qqg" name="PME_Trig1302" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xCWJkEr4EemA4_kRIR1Qqg" name="PME_Trig1303" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xCcQMEr4EemA4_kRIR1Qqg" name="PME_Trig1304" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xCfTgEr4EemA4_kRIR1Qqg" name="PME_Trig1305" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xClaIEr4EemA4_kRIR1Qqg" name="PME_Trig1306" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xCn2YEr4EemA4_kRIR1Qqg" name="PME_Trig1307" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xCprkEr4EemA4_kRIR1Qqg" name="PME_Trig1308" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xCwZQEr4EemA4_kRIR1Qqg" name="PME_Trig1309" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xC4VEEr4EemA4_kRIR1Qqg" name="PME_Trig1310" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xC6xUEr4EemA4_kRIR1Qqg" name="PME_Trig1311" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xC90oEr4EemA4_kRIR1Qqg" name="PME_Trig1312" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xDCtIEr4EemA4_kRIR1Qqg" name="PME_Trig1313" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xDEiUEr4EemA4_kRIR1Qqg" name="PME_Trig1314" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xDFwcEr4EemA4_kRIR1Qqg" name="PME_Trig1315" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xDIMsEr4EemA4_kRIR1Qqg" name="PME_Trig1316" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xDR9sEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__RunAsMaster__1317" guard="_xDh1UUr4EemA4_kRIR1Qqg" source="_xBktgEr4EemA4_kRIR1Qqg" target="_tGLCAUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xDh1UUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1321">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xDh1UEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1321">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__RunAsMaster__1317&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xDWPIEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1318" source="_xBZuYEr4EemA4_kRIR1Qqg" target="_xBktgEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xDbusEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__C__ServiceRequest&quot;,&quot;To__Parent__ServerStateMachine__1319&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceRequest&quot;,&quot;Debug__B__Ex__RunAsMaster&quot;,&quot;To__Debug__B__Ex__RunAsMaster__1317&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceRequest&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xDW2MEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1319" guard="_xDhOQUr4EemA4_kRIR1Qqg" source="_xBktgEr4EemA4_kRIR1Qqg" target="_xBfN8Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xDhOQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1320">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xDhOQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1320">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1319&quot;,&quot;Debug__C__ServiceRequest&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tGLCAUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tGLpEErDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tGa5oUrDEem2BZRQc2M93A" name="Debug__B__Ex__RunAsMaster__598">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__ServiceRequest::Region1::Debug__B__Ex__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xBktgEr4EemA4_kRIR1Qqg" name="DecesionPoint__1291" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xBoX4Er4EemA4_kRIR1Qqg" name="Init__State__1292"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tGwQ0ErDEem2BZRQc2M93A" name="Debug__Path__StandBy__CheckConfig__6" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tGw34UrDEem2BZRQc2M93A" name="Debug__C__StandBy__CheckConfig__6">
              <connectionPoint xmi:id="_tGyGAErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_xEznsEr4EemA4_kRIR1Qqg" name="From__Parent__1356" kind="entryPoint"/>
              <connectionPoint xmi:id="_xE010Er4EemA4_kRIR1Qqg" name="To__Parent__1358" kind="exitPoint"/>
              <region xmi:id="_tGw34krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHFoAErDEem2BZRQc2M93A" name="Debug__init__trans__StandBy__CheckConfig__6" source="_tGyGAErDEem2BZRQc2M93A" target="_tHDLwUrDEem2BZRQc2M93A"/>
                <transition xmi:id="_xE9_wEr4EemA4_kRIR1Qqg" name="Trans__Init__State__13611362" source="_xE68cEr4EemA4_kRIR1Qqg" target="_xE3SEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xFwp8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1361&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1361&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1361&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xE_N4Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__StandBy__1363" source="_tHDLwUrDEem2BZRQc2M93A" target="_xE3SEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xFuNsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__StandBy&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__StandBy&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xFAcAEr4EemA4_kRIR1Qqg" name="PME_Trig1364" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFC4QEr4EemA4_kRIR1Qqg" name="PME_Trig1365" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xFHwwEr4EemA4_kRIR1Qqg" name="PME_Trig1366" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFI-4Er4EemA4_kRIR1Qqg" name="PME_Trig1367" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xFLbIEr4EemA4_kRIR1Qqg" name="PME_Trig1368" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFMpQEr4EemA4_kRIR1Qqg" name="PME_Trig1369" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xFOecEr4EemA4_kRIR1Qqg" name="PME_Trig1370" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xFQ6sEr4EemA4_kRIR1Qqg" name="PME_Trig1371" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFSI0Er4EemA4_kRIR1Qqg" name="PME_Trig1372" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xFTW8Er4EemA4_kRIR1Qqg" name="PME_Trig1373" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFVMIEr4EemA4_kRIR1Qqg" name="PME_Trig1374" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xFWaQEr4EemA4_kRIR1Qqg" name="PME_Trig1375" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xFZdkEr4EemA4_kRIR1Qqg" name="PME_Trig1376" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFb50Er4EemA4_kRIR1Qqg" name="PME_Trig1377" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xFdH8Er4EemA4_kRIR1Qqg" name="PME_Trig1378" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xFdvAEr4EemA4_kRIR1Qqg" name="PME_Trig1379" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xFe9IEr4EemA4_kRIR1Qqg" name="PME_Trig1380" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xFgyUEr4EemA4_kRIR1Qqg" name="PME_Trig1381" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xFj1oEr4EemA4_kRIR1Qqg" name="PME_Trig1382" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xFm48Er4EemA4_kRIR1Qqg" name="PME_Trig1383" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xFngAEr4EemA4_kRIR1Qqg" name="PME_Trig1384" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xFp8QEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__StandBy__1385" guard="_xFx4EUr4EemA4_kRIR1Qqg" source="_xE3SEEr4EemA4_kRIR1Qqg" target="_tHDLwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xFx4EUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1388">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xFx4EEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1388">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__StandBy__1385&quot;,&quot;Debug__B__Ex__StandBy&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xFrKYEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1386" source="_xEznsEr4EemA4_kRIR1Qqg" target="_xE3SEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xFxRAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__B__Ex__StandBy&quot;,&quot;To__Debug__B__Ex__StandBy__1385&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;,&quot;To__Parent__ServerStateMachine__1387&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StandBy__CheckConfig__6&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xFrxcEr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1387" guard="_xFyfIUr4EemA4_kRIR1Qqg" source="_xE3SEEr4EemA4_kRIR1Qqg" target="_xE010Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xFyfIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1389">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xFyfIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1389">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1387&quot;,&quot;Debug__C__StandBy__CheckConfig__6&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHDLwUrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHDLwkrDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tHIEQErDEem2BZRQc2M93A" name="Debug__B__Ex__StandBy__622">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__StandBy__CheckConfig__6::Region1::Debug__B__Ex__StandBy&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xE3SEEr4EemA4_kRIR1Qqg" name="DecesionPoint__1360" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xE68cEr4EemA4_kRIR1Qqg" name="Init__State__1361"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tHWGsErDEem2BZRQc2M93A" name="Debug__Path__KeepAlive" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tHWtwUrDEem2BZRQc2M93A" name="Debug__C__KeepAlive">
              <connectionPoint xmi:id="_tHX74UrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tHYi8UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xNu6MUr4EemA4_kRIR1Qqg" name="From__Parent__1611" kind="entryPoint"/>
              <connectionPoint xmi:id="_xNwIUEr4EemA4_kRIR1Qqg" name="To__Parent__1613" kind="exitPoint"/>
              <region xmi:id="_tHWtwkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tHwWYErDEem2BZRQc2M93A" name="Debug__En__RunAsMaster" source="_tHsE8ErDEem2BZRQc2M93A" target="_tHt6IErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tHw9cErDEem2BZRQc2M93A" name="RunAsMasterEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Run as Master now\n&quot;;
    ConfigComm.IAMMaster((char *)this->getName()).send();
    ts.getclock(ts);
    //messageID=messageID+1;
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,TranstionEnd,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
     logfile.flush();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__En__RunAsMaster&quot;,(char *)&quot;Debug__A__Ac__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHwWYUrDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tHw9cUrDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive" source="_tHt6IErDEem2BZRQc2M93A" target="_tHYi8UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tICqQErDEem2BZRQc2M93A" name="Debug__end__trans__KeepAlive__653">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__end__trans__KeepAlive&quot;,(char *)&quot;Debug__A__En__RunAsMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tHxkgErDEem2BZRQc2M93A" name="Debug__Exec" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xN3dEEr4EemA4_kRIR1Qqg" name="Trans__Init__State__16161617" source="_xN0ZwEr4EemA4_kRIR1Qqg" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPTngEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1616&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1616&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xN3dEUr4EemA4_kRIR1Qqg" name="Trans__en1618" source="_tHX74UrDEem2BZRQc2M93A" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPU1oEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xN4EIEr4EemA4_kRIR1Qqg" name="Trans__ex1619" source="_tHYi8UrDEem2BZRQc2M93A" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPP9IEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xN5SQEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__KeepAlive__1620" source="_tHsE8ErDEem2BZRQc2M93A" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPXR4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xN7HcEr4EemA4_kRIR1Qqg" name="PME_Trig1621" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xN8VkEr4EemA4_kRIR1Qqg" name="PME_Trig1622" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xN_Y4Er4EemA4_kRIR1Qqg" name="PME_Trig1623" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOBOEEr4EemA4_kRIR1Qqg" name="PME_Trig1624" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xOCcMEr4EemA4_kRIR1Qqg" name="PME_Trig1625" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xODqUEr4EemA4_kRIR1Qqg" name="PME_Trig1626" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xOHUsEr4EemA4_kRIR1Qqg" name="PME_Trig1627" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xOKYAEr4EemA4_kRIR1Qqg" name="PME_Trig1628" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOLmIEr4EemA4_kRIR1Qqg" name="PME_Trig1629" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xOMNMEr4EemA4_kRIR1Qqg" name="PME_Trig1630" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xONbUEr4EemA4_kRIR1Qqg" name="PME_Trig1631" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xOPQgEr4EemA4_kRIR1Qqg" name="PME_Trig1632" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xORFsEr4EemA4_kRIR1Qqg" name="PME_Trig1633" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOUwEEr4EemA4_kRIR1Qqg" name="PME_Trig1634" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xOV-MEr4EemA4_kRIR1Qqg" name="PME_Trig1635" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xOXMUEr4EemA4_kRIR1Qqg" name="PME_Trig1636" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xOZBgEr4EemA4_kRIR1Qqg" name="PME_Trig1637" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xOdS8Er4EemA4_kRIR1Qqg" name="PME_Trig1638" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOgWQEr4EemA4_kRIR1Qqg" name="PME_Trig1639" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xOhkYEr4EemA4_kRIR1Qqg" name="PME_Trig1640" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xOiLcEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__RunAsMaster__1641" source="_tHt6IErDEem2BZRQc2M93A" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPSZYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__RunAsMaster&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__RunAsMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xOkAoEr4EemA4_kRIR1Qqg" name="PME_Trig1642" event="_OMBm8AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOlOwEr4EemA4_kRIR1Qqg" name="PME_Trig1643" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xOoSEEr4EemA4_kRIR1Qqg" name="PME_Trig1644" event="_mLvIYAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOqHQEr4EemA4_kRIR1Qqg" name="PME_Trig1645" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xOrVYEr4EemA4_kRIR1Qqg" name="PME_Trig1646" event="_GvF7UAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOtxoEr4EemA4_kRIR1Qqg" name="PME_Trig1647" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_HIvrsApCEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xOu_wEr4EemA4_kRIR1Qqg" name="PME_Trig1648" port="_855RMAs1EeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xOw08Er4EemA4_kRIR1Qqg" name="PME_Trig1649" event="_Iv3CQAl4Eea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xOz4QEr4EemA4_kRIR1Qqg" name="PME_Trig1650" event="_xM6tkApBEeaGqPUk-4V4qQ" port="_rmnI0OM8EeaTpaLNj-zYpw"/>
                  <trigger xmi:id="_xO1GYEr4EemA4_kRIR1Qqg" name="PME_Trig1651" event="_MnkAAAgtEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xO1tcEr4EemA4_kRIR1Qqg" name="PME_Trig1652" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xO27kEr4EemA4_kRIR1Qqg" name="PME_Trig1653" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wYQDsEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xO4wwEr4EemA4_kRIR1Qqg" name="PME_Trig1654" event="_MloQ4AguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xO8bIEr4EemA4_kRIR1Qqg" name="PME_Trig1655" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xO-QUEr4EemA4_kRIR1Qqg" name="PME_Trig1656" port="_Vj1U4ApFEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xO_ecEr4EemA4_kRIR1Qqg" name="PME_Trig1657" port="_ZDrx0ApDEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xPAFgEr4EemA4_kRIR1Qqg" name="PME_Trig1658" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xPChwEr4EemA4_kRIR1Qqg" name="PME_Trig1659" event="_QoLgUAguEea_md0mpENoqg" port="_-3KD0AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xPDv4Er4EemA4_kRIR1Qqg" name="PME_Trig1660" port="_sxfygErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_xPHaQEr4EemA4_kRIR1Qqg" name="PME_Trig1661" event="_G3K7UAnFEeaGqPUk-4V4qQ" port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
                </transition>
                <transition xmi:id="_xPJPcEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__KeepAlive__1662" guard="_xPYgAUr4EemA4_kRIR1Qqg" source="_xNykkEr4EemA4_kRIR1Qqg" target="_tHsE8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xPYgAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion1668">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xPYgAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion1668">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,&quot;Debug__A__Ac__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xPJPcUr4EemA4_kRIR1Qqg" name="To__Debug__A__En__RunAsMaster__1663" guard="_xPX48Ur4EemA4_kRIR1Qqg" source="_xNykkEr4EemA4_kRIR1Qqg" target="_tHt6IErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xPX48Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion1666">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xPX48Er4EemA4_kRIR1Qqg" name="PME_checkDecesion1666">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__RunAsMaster__1663&quot;,&quot;Debug__A__En__RunAsMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xPKdkEr4EemA4_kRIR1Qqg" name="From__Parnet__ServerStateMachine__1664" source="_xNu6MUr4EemA4_kRIR1Qqg" target="_xNykkEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xPM50Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__En__RunAsMaster&quot;,&quot;To__Debug__A__En__RunAsMaster__1663&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__C__KeepAlive&quot;,&quot;To__Parent__ServerStateMachine__1665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__KeepAlive&quot;,&quot;Debug__A__Ac__KeepAlive&quot;,&quot;To__Debug__A__Ac__KeepAlive__1662&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__KeepAlive&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xPKdkUr4EemA4_kRIR1Qqg" name="To__Parent__ServerStateMachine__1665" guard="_xPX480r4EemA4_kRIR1Qqg" source="_xNykkEr4EemA4_kRIR1Qqg" target="_xNwIUEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xPX480r4EemA4_kRIR1Qqg" name="PME_checkDecesion1667">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xPX48kr4EemA4_kRIR1Qqg" name="PME_checkDecesion1667">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ServerStateMachine__1665&quot;,&quot;Debug__C__KeepAlive&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tHsE8ErDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHsE8UrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;KeepAlive&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH3rIUrDEem2BZRQc2M93A" name="Debug__A__Ac__KeepAlive__645">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__Ac__KeepAlive&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tHt6IErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tHt6IUrDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tH6HYErDEem2BZRQc2M93A" name="Debug__A__En__RunAsMaster__646">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Server::ServerStateMachine::Region1::Debug__C__KeepAlive::Region1::Debug__A__En__RunAsMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xNykkEr4EemA4_kRIR1Qqg" name="DecesionPoint__1615" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xN0ZwEr4EemA4_kRIR1Qqg" name="Init__State__1616"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tJHBQErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_wc89gEr4EemA4_kRIR1Qqg" name="DecesionPoint__710" kind="choice"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_wdCdEEr4EemA4_kRIR1Qqg" name="Init__State__711"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxfLcUrDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_sxfLcErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Slave.recallAll();
ConfigComm.recallAll();
Master.recallAll();
ServerComm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxvDEErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sxucAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
tempS.append(&quot;KeepAliveTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(KeepAliveTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,KeepAliveTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
tempS.append(&quot;AnnouncementTimeOut,&quot;);
tempS.append(&quot;Integer,&quot;);
if(AnnouncementTimeOut!=0){
    char tempR[10];
    sprintf(tempR,&quot;%d&quot;,AnnouncementTimeOut);
    tempS.append(tempR);
    tempS.append(&quot;\n&quot;);
}else {
    tempS.append(&quot;0&quot;);
    tempS.append(&quot;\n&quot;);
};
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxzUgUrDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxyGYErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);
if (&quot;KeepAliveTimeOut&quot;==tempVarName){
    KeepAliveTimeOut=atoi(varValue);
    return true;
}else if (&quot;AnnouncementTimeOut&quot;==tempVarName){
    AnnouncementTimeOut=atoi(varValue);
    return true;
}else 
    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_syDzMErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sx6CMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wbXCEUr4EemA4_kRIR1Qqg" name="loadHeap" specification="_wbXCEEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.KeepAliveTimeOut&quot;,this->KeepAliveTimeOut);
heap.setVarValue(&quot;this.AnnouncementTimeOut&quot;,this->AnnouncementTimeOut);
heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wbY3QUr4EemA4_kRIR1Qqg" name="unLoadHeap" specification="_wbY3QEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.KeepAliveTimeOut&quot;,&amp;this->KeepAliveTimeOut);
heap.loadVarFromHeap(&quot;this.AnnouncementTimeOut&quot;,&amp;this->AnnouncementTimeOut);
heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wb2xUEr4EemA4_kRIR1Qqg" name="sendMessage" specification="_wb2KQEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;ServerComm&quot;) {
  if(message.signal==&quot;Reply&quot;) {
   if(message.payload.size()==1){
    ServerComm.Reply( boost::any_cast&lt;int>(message.payload[&quot;Result&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Master&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Master.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Slave&quot;) {
  if(message.signal==&quot;IAmAlive&quot;) {
   if(message.payload.size()==1){
    Slave.IAmAlive( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wb5NkUr4EemA4_kRIR1Qqg" name="sendInternalMessage" specification="_wb5NkEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wcpbgUr4EemA4_kRIR1Qqg" name="initForPMD" specification="_wcpbgEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Server::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Server::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ServerComm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;ServerComm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Master&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;KeepAliveTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;MasterAnnounceTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Slave&quot;,&quot;IAmAlive&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForServer&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_sxfLcErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_sxfLcUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxucAErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sxvDEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxyGYErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxzUgUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxytcErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxytcUrDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxzUgErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sx6CMErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_syDzMErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sx7QUErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx8ecUrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx9skErDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-ToUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sx-6sErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syAI0ErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8ErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syBW8UrDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syClEErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_syDMIErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wbXCEEr4EemA4_kRIR1Qqg" name="loadHeap" visibility="private" method="_wbXCEUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_wbY3QEr4EemA4_kRIR1Qqg" name="unLoadHeap" visibility="private" method="_wbY3QUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_wb2KQEr4EemA4_kRIR1Qqg" name="sendMessage" visibility="private" method="_wb2xUEr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_wb3YYEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wb3YYUr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wb5NkEr4EemA4_kRIR1Qqg" name="sendInternalMessage" visibility="private" method="_wb5NkUr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_wb6bsEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wb-GEEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wcpbgEr4EemA4_kRIR1Qqg" name="initForPMD" visibility="private" method="_wcpbgUr4EemA4_kRIR1Qqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_zpdLYAgmEea_md0mpENoqg" name="Client" classifierBehavior="_BKT8EAlKEea_md0mpENoqg" isActive="true">
        <generalization xmi:id="_5utSYAgmEea_md0mpENoqg" general="_4_oYIAghEea_md0mpENoqg"/>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_g3nG4AgvEea_md0mpENoqg" name="ConfigComm" visibility="protected" type="_v000cAgsEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_kSO0IAliEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kSfS0AliEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_iLeRcAmuEea_md0mpENoqg" name="RequestTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_oWg3YAmuEea_md0mpENoqg" name="ConfigTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_tP9SkAmuEea_md0mpENoqg" name="ResponseTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_fL3OQAnFEeaGqPUk-4V4qQ" name="Server1Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_jNC1oAnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNNNsAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_lRZpIAnFEeaGqPUk-4V4qQ" name="Server2Comm" visibility="public" type="_4--ccAnEEeaGqPUk-4V4qQ" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_pIHs8AnOEeaGqPUk-4V4qQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_pIOaoAnOEeaGqPUk-4V4qQ" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_8sGy4AovEeaGqPUk-4V4qQ" name="Timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
          <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swu9gErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swxZwUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swyA0ErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8ErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxGw8UrDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxH_EErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_sxJNMUrDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_xkWqcEr4EemA4_kRIR1Qqg" name="dbgPortForClient" visibility="protected" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xkXRgEr4EemA4_kRIR1Qqg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_xkX4kEr4EemA4_kRIR1Qqg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_BKT8EAlKEea_md0mpENoqg" name="ClientStateMachine">
          <region xmi:id="_Bk0GwAlKEea_md0mpENoqg" name="Region1">
            <transition xmi:id="_xsxFAAnCEeaGqPUk-4V4qQ" name="NoMaster" source="_tLzI4ErDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMXJkErDEem2BZRQc2M93A" name="NoMaster__760">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::NoMaster&quot;,(char *)&quot;Debug__Path__NoMaster&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_6NrWIAnCEeaGqPUk-4V4qQ" name="reqService" source="_tOHdEErDEem2BZRQc2M93A" target="_fO-gkAmtEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvuAcAnEEeaGqPUk-4V4qQ" name="requestserive">
                <language>C++</language>
                <body>    
    messageID=messageID+1;
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,SendingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;
    if (hostConfig.MasterList[0] &amp;&amp; hostConfig.MasterList[1])
    {
    int r=rand()%2;
    if (r==0)
    {
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else{
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }
    }
    else if (hostConfig.MasterList[0]){
    Server1Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server1\n&quot;;
    }
    else
    {
    Server2Comm.Request(0).send();
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: sending Request to Server2\n&quot;;
    }

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::reqService&quot;,(char *)&quot;Debug__Path__reqService&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL7rwErDEem2BZRQc2M93A" name="Debug__NoMaster__E" source="_tL1lIUrDEem2BZRQc2M93A" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL8S0ErDEem2BZRQc2M93A" name="Debug__NoMaster__E__741">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__NoMaster__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;Retry&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tL854ErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL9g8UrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__varChange__743">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tL9g8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL-IAErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL-vEErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__setBreakPoint__744">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL-IAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_WIErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tL_WIkrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__remBreakPoint__745">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_WIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tL_9MErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMAkQErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__viewBreakPoints__746">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tL_9MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMAkQUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMBLUErDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgSetExecMode__747">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMAkQkrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMBLUUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg" source="_tLzv8UrDEem2BZRQc2M93A" target="_tLzv8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMCZcUrDEem2BZRQc2M93A" name="Debug__NoMaster__dbg__dbgDeferMsg__748">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMByYErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMByYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMCZcErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMiIsErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMivwErDEem2BZRQc2M93A" name="Debug__Retry__dbg__varChange__767">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tMiIsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMj94ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMkk8ErDEem2BZRQc2M93A" name="Debug__Retry__dbg__setBreakPoint__768">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMj94UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMlzEErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMmaIErDEem2BZRQc2M93A" name="Debug__Retry__dbg__remBreakPoint__769">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMlzEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnBMErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMnoQErDEem2BZRQc2M93A" name="Debug__Retry__dbg__viewBreakPoints__770">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMnBMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMnoQUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMoPUUrDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgSetExecMode__771">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tMoPUErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tMo2YErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg" source="_tMaM4ErDEem2BZRQc2M93A" target="_tMaM4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMqEgErDEem2BZRQc2M93A" name="Debug__Retry__dbg__dbgDeferMsg__772">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tMo2YUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tMpdcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNP6YUrDEem2BZRQc2M93A" name="Debug__ServiceResult" source="_fO-gkAmtEea_md0mpENoqg" target="_tNLo8ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNP6YkrDEem2BZRQc2M93A" name="Debug__ServiceResult__789">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult&quot;,(char *)&quot;WaitingForReply&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_DEh6sAnGEeaGqPUk-4V4qQ" name="Result" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ _lRZpIAnFEeaGqPUk-4V4qQ"/>
            </transition>
            <transition xmi:id="_tNRIgErDEem2BZRQc2M93A" name="Debug__ServiceResult__S" guard="_tNSWoUrDEem2BZRQc2M93A" source="_tNLo8ErDEem2BZRQc2M93A" target="_tNOFMErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tNSWoUrDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tNSWoErDEem2BZRQc2M93A" name="Debug__GuardServiceResult">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNS9sErDEem2BZRQc2M93A" name="Debug__ServiceResult__S__791">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__ServiceResult__S&quot;,(char *)&quot;Debug__Path__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tNWBAErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNWoEErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__varChange__794">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tNWBAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNXPIErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNYdQErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__setBreakPoint__795">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNXPIUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNZrYErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNZrYkrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__remBreakPoint__796">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNZrYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNaScErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNa5gErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__viewBreakPoints__797">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNaScUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNa5gUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNbgkUrDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgSetExecMode__798">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tNbgkErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tNdVwErDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg" source="_tNMQAUrDEem2BZRQc2M93A" target="_tNMQAUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNd80krDEem2BZRQc2M93A" name="Debug__ServiceResult__dbg__dbgDeferMsg__799">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tNdVwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tNd80UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOsE0ErDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOsr4UrDEem2BZRQc2M93A" name="Debug__reqService__dbg__varChange__818">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tOsr4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOvvMErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOwWQErDEem2BZRQc2M93A" name="Debug__reqService__dbg__setBreakPoint__819">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOvvMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOw9UErDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOw9UkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__remBreakPoint__820">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOw9UUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOxkYErDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOxkYkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__viewBreakPoints__821">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOxkYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyLcErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOyLckrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgSetExecMode__822">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tOyLcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tOyygErDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg" source="_tOXUsErDEem2BZRQc2M93A" target="_tOXUsErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tOzZkkrDEem2BZRQc2M93A" name="Debug__reqService__dbg__dbgDeferMsg__823">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tOyygUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tOzZkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPOQUErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S" guard="_tPO3YErDEem2BZRQc2M93A" source="_tPJ-4ErDEem2BZRQc2M93A" target="_tPLNAUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tPO3YErDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tPOQUUrDEem2BZRQc2M93A" name="Debug__GuardgetMasterName__checkConfig__9">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;getMasterName&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPPecErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__S__837">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__getMasterName__checkConfig__9__S&quot;,(char *)&quot;Debug__Path__getMasterName__checkConfig__9&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tPShwErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTI0ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__varChange__840">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tPShwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPTv4ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPTv4krDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__setBreakPoint__841">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPTv4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPUW8ErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPU-AUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__remBreakPoint__842">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPU-AErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPVlEErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWMIUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__viewBreakPoints__843">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPWMIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPWzMErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPWzMkrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgSetExecMode__844">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tPWzMUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tPXaQErDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg" source="_tPKl8UrDEem2BZRQc2M93A" target="_tPKl8UrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPYoYUrDEem2BZRQc2M93A" name="Debug__getMasterName__checkConfig__9__dbg__dbgDeferMsg__845">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tPXaQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYBUErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tPYoYErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP5lwErDEem2BZRQc2M93A" name="Debug__inittrans__E" source="_tP1UUUrDEem2BZRQc2M93A" target="_Q5-S4AlKEea_md0mpENoqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP5lwUrDEem2BZRQc2M93A" name="Debug__inittrans__E__861">
                <language>C++</language>
                <body>this->Debug__recallAllMsg();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__inittrans__E&quot;,(char *)&quot;ex&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tP7a8ErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP7a8krDEem2BZRQc2M93A" name="Debug__inittrans__dbg__varChange__863">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tP7a8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP8pEErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP8pEkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__setBreakPoint__864">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP8pEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP9QIErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP93MUrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__remBreakPoint__865">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP93MErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP-eQErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP-eQkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__viewBreakPoints__866">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tP-eQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_FUErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tP_FUkrDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgSetExecMode__867">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tP_FUUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tP_sYErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg" source="_tPy4EErDEem2BZRQc2M93A" target="_tPy4EErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQA6gErDEem2BZRQc2M93A" name="Debug__inittrans__dbg__dbgDeferMsg__868">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQATcErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQATckrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQmJUErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQmwYUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__varChange__886">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tQmwYErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQnXcErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQn-gErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__setBreakPoint__887">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQnXcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQolkErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQolkkrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__remBreakPoint__888">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQolkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQpzsErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQqawErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__viewBreakPoints__889">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQpzsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQqawUrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQrB0UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgSetExecMode__890">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tQrB0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tQro4ErDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg" source="_tQW4wUrDEem2BZRQc2M93A" target="_tQW4wUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQsP8UrDEem2BZRQc2M93A" name="Debug__ReqFlowDone__dbg__dbgDeferMsg__891">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tQro4UrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQro4krDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tQsP8ErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRYzgErDEem2BZRQc2M93A" name="Debug__StarupTransition" source="_Q5-S4AlKEea_md0mpENoqg" target="_tRT7AErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRYzgUrDEem2BZRQc2M93A" name="Debug__StarupTransition__906">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition&quot;,(char *)&quot;StandBY&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
              </effect>
              <trigger xmi:id="_TP2tsAlhEea_md0mpENoqg" name="startUp" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_tRfhMErDEem2BZRQc2M93A" name="Debug__StarupTransition__S" guard="_tRhWYErDEem2BZRQc2M93A" source="_tRT7AErDEem2BZRQc2M93A" target="_tRVwMUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tRhWYErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tRgvUErDEem2BZRQc2M93A" name="Debug__GuardStarupTransition">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;StandBY&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRh9cErDEem2BZRQc2M93A" name="Debug__StarupTransition__S__908">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__StarupTransition__S&quot;,(char *)&quot;Debug__Path__StarupTransition&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tRmO4ErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRm18UrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__varChange__911">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tRm18ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRndAErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRoEEUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__setBreakPoint__912">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRoEEErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRorIErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRpSMUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__remBreakPoint__913">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRpSMErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRrHYErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRrucErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__viewBreakPoints__914">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRrHYUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRsVgErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRs8kErDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgSetExecMode__915">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tRsVgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tRs8kUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg" source="_tRUiEUrDEem2BZRQc2M93A" target="_tRUiEUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tRuKsUrDEem2BZRQc2M93A" name="Debug__StarupTransition__dbg__dbgDeferMsg__916">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tRtjoErDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRtjoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tRuKsErDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSWc0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S" guard="_tSXD4UrDEem2BZRQc2M93A" source="_tSQ9QErDEem2BZRQc2M93A" target="_tSSycUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tSXD4UrDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tSXD4ErDEem2BZRQc2M93A" name="Debug__GuardreqFlowInit">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;Ready&quot;,msg->destPort->role()->protocol,msg->getSignalName(),1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSYSAErDEem2BZRQc2M93A" name="Debug__reqFlowInit__S__933">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__reqFlowInit__S&quot;,(char *)&quot;Debug__Path__reqFlowInit&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tScjcErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSdKgErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__varChange__936">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tScjcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSeYoErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSe_sUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__setBreakPoint__937">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSe_sErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSfmwErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSgN0ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__remBreakPoint__938">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSfmwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tShb8ErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSiqEErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__viewBreakPoints__939">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tShb8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSiqEUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSjRIUrDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgSetExecMode__940">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tSjRIErDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tSj4MErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg" source="_tSRkUUrDEem2BZRQc2M93A" target="_tSRkUUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSlGUErDEem2BZRQc2M93A" name="Debug__reqFlowInit__dbg__dbgDeferMsg__941">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tSj4MUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tSkfQUrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTNYcErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTNYckrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__varChange__963">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tTNYcUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTN_gErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTN_gkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__setBreakPoint__964">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTN_gUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTOmkErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTOmkkrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__remBreakPoint__965">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTOmkUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTPNoErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTPNokrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__viewBreakPoints__966">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTPNoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTP0sErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTP0skrDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgSetExecMode__967">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tTP0sUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tTQbwErDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg" source="_tTEOgUrDEem2BZRQc2M93A" target="_tTEOgUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tTRC0krDEem2BZRQc2M93A" name="Debug__NoResponseFromServer__dbg__dbgDeferMsg__968">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tTQbwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_fL3OQAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_g3nG4AgvEea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
              <trigger xmi:id="_tTRC0UrDEem2BZRQc2M93A" name="Debug__MSG" port="_lRZpIAnFEeaGqPUk-4V4qQ">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tUApsErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_Oll1cAlKEea_md0mpENoqg" target="_tT_bkErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tUApsUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_xm3L4Er4EemA4_kRIR1Qqg" name="Trans__Debug__Path__ReqFlowDone1874" source="_tQWRsErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yDdoUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xneP4Er4EemA4_kRIR1Qqg" name="1875" source="_tLzI4ErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yFUCcEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xne28Er4EemA4_kRIR1Qqg" name="1876" source="_tSQ9QErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x_1skEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xnfeAEr4EemA4_kRIR1Qqg" name="1877" source="_tRT7AErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yFrO0Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xnfeAUr4EemA4_kRIR1Qqg" name="1878" source="_tQWRsErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yEEFQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xngFEEr4EemA4_kRIR1Qqg" name="1879" source="_tOHdEErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yHXQ4Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xngFEUr4EemA4_kRIR1Qqg" name="1880" source="_tNLo8ErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yAGyUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xngsIEr4EemA4_kRIR1Qqg" name="1881" source="_tPJ-4ErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yGXLUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xnoA4Er4EemA4_kRIR1Qqg" name="From__WaitingForReply__1882" source="_fO-gkAmtEea_md0mpENoqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yCFvUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitingForReply&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_xnqdIEr4EemA4_kRIR1Qqg" name="PME_Trig1883" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xnxx4Er4EemA4_kRIR1Qqg" name="PME_Trig1884" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xnznEEr4EemA4_kRIR1Qqg" name="PME_Trig1885" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xn01MEr4EemA4_kRIR1Qqg" name="PME_Trig1886" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xn7i4Er4EemA4_kRIR1Qqg" name="PME_Trig1887" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xn8xAEr4EemA4_kRIR1Qqg" name="PME_Trig1888" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xn9_IEr4EemA4_kRIR1Qqg" name="PME_Trig1889" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xn_0UEr4EemA4_kRIR1Qqg" name="PME_Trig1890" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xoC3oEr4EemA4_kRIR1Qqg" name="PME_Trig1891" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xoF68Er4EemA4_kRIR1Qqg" name="PME_Trig1892" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_xoGiAEr4EemA4_kRIR1Qqg" name="PME_Trig1893" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xoHJEEr4EemA4_kRIR1Qqg" name="PME_Trig1894" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_xoIXMEr4EemA4_kRIR1Qqg" name="PME_Trig1895" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xoKzcEr4EemA4_kRIR1Qqg" name="PME_Trig1896" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xoMBkEr4EemA4_kRIR1Qqg" name="PME_Trig1897" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xoPE4Er4EemA4_kRIR1Qqg" name="PME_Trig1898" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_xoRhIEr4EemA4_kRIR1Qqg" name="PME_Trig1899" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_xoSvQEr4EemA4_kRIR1Qqg" name="PME_Trig1900" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xoVLgEr4EemA4_kRIR1Qqg" name="PME_Trig1901" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_xoXnwEr4EemA4_kRIR1Qqg" name="From__Retry__1902" source="_KwFHIAo0EeaGqPUk-4V4qQ" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yAWp8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_xobSIEr4EemA4_kRIR1Qqg" name="PME_Trig1903" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xocgQEr4EemA4_kRIR1Qqg" name="PME_Trig1904" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xodHUEr4EemA4_kRIR1Qqg" name="PME_Trig1905" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xogKoEr4EemA4_kRIR1Qqg" name="PME_Trig1906" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xokcEEr4EemA4_kRIR1Qqg" name="PME_Trig1907" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xolDIEr4EemA4_kRIR1Qqg" name="PME_Trig1908" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xolqMEr4EemA4_kRIR1Qqg" name="PME_Trig1909" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xom4UEr4EemA4_kRIR1Qqg" name="PME_Trig1910" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xooGcEr4EemA4_kRIR1Qqg" name="PME_Trig1911" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xorw0Er4EemA4_kRIR1Qqg" name="PME_Trig1912" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xou0IEr4EemA4_kRIR1Qqg" name="PME_Trig1913" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_xowCQEr4EemA4_kRIR1Qqg" name="PME_Trig1914" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xowpUEr4EemA4_kRIR1Qqg" name="PME_Trig1915" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_xox3cEr4EemA4_kRIR1Qqg" name="PME_Trig1916" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xo2I4Er4EemA4_kRIR1Qqg" name="PME_Trig1917" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xo5MMEr4EemA4_kRIR1Qqg" name="PME_Trig1918" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xo6aUEr4EemA4_kRIR1Qqg" name="PME_Trig1919" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xo7BYEr4EemA4_kRIR1Qqg" name="PME_Trig1920" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_xo9doEr4EemA4_kRIR1Qqg" name="PME_Trig1921" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_xo-rwEr4EemA4_kRIR1Qqg" name="PME_Trig1922" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpC9MEr4EemA4_kRIR1Qqg" name="PME_Trig1923" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_xpELUEr4EemA4_kRIR1Qqg" name="From__StandBY__1924" source="_Q5-S4AlKEea_md0mpENoqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yEXAMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StandBY&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StandBY&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_xpGnkEr4EemA4_kRIR1Qqg" name="PME_Trig1925" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpJD0Er4EemA4_kRIR1Qqg" name="PME_Trig1926" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xpK5AEr4EemA4_kRIR1Qqg" name="PME_Trig1927" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpPKcEr4EemA4_kRIR1Qqg" name="PME_Trig1928" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xpSNwEr4EemA4_kRIR1Qqg" name="PME_Trig1929" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpV4IEr4EemA4_kRIR1Qqg" name="PME_Trig1930" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xpXtUEr4EemA4_kRIR1Qqg" name="PME_Trig1931" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpY7cEr4EemA4_kRIR1Qqg" name="PME_Trig1932" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xpZigEr4EemA4_kRIR1Qqg" name="PME_Trig1933" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xpawoEr4EemA4_kRIR1Qqg" name="PME_Trig1934" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xpcl0Er4EemA4_kRIR1Qqg" name="PME_Trig1935" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_xpgQMEr4EemA4_kRIR1Qqg" name="PME_Trig1936" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xpheUEr4EemA4_kRIR1Qqg" name="PME_Trig1937" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_xpiscEr4EemA4_kRIR1Qqg" name="PME_Trig1938" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xpjTgEr4EemA4_kRIR1Qqg" name="PME_Trig1939" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xpkhoEr4EemA4_kRIR1Qqg" name="PME_Trig1940" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xpm94Er4EemA4_kRIR1Qqg" name="PME_Trig1941" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_xprPUEr4EemA4_kRIR1Qqg" name="PME_Trig1942" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_xpsdcEr4EemA4_kRIR1Qqg" name="PME_Trig1943" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xptEgEr4EemA4_kRIR1Qqg" name="PME_Trig1944" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_xpuSoEr4EemA4_kRIR1Qqg" name="From__Debug__InitState__1945" source="_tT_bkErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yG1scEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_xpykEEr4EemA4_kRIR1Qqg" name="PME_Trig1946" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xp1nYEr4EemA4_kRIR1Qqg" name="PME_Trig1947" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xp21gEr4EemA4_kRIR1Qqg" name="PME_Trig1948" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xp3ckEr4EemA4_kRIR1Qqg" name="PME_Trig1949" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xp4qsEr4EemA4_kRIR1Qqg" name="PME_Trig1950" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xp7G8Er4EemA4_kRIR1Qqg" name="PME_Trig1951" port="_8sGy4AovEeaGqPUk-4V4qQ">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xp-KQEr4EemA4_kRIR1Qqg" name="PME_Trig1952" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xqAmgEr4EemA4_kRIR1Qqg" name="PME_Trig1953" port="_iLeRcAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xqBNkEr4EemA4_kRIR1Qqg" name="PME_Trig1954" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xqCbsEr4EemA4_kRIR1Qqg" name="PME_Trig1955" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xqDCwEr4EemA4_kRIR1Qqg" name="PME_Trig1956" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_xqGtIEr4EemA4_kRIR1Qqg" name="PME_Trig1957" port="_oWg3YAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xqJwcEr4EemA4_kRIR1Qqg" name="PME_Trig1958" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_xqK-kEr4EemA4_kRIR1Qqg" name="PME_Trig1959" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xqLloEr4EemA4_kRIR1Qqg" name="PME_Trig1960" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
              <trigger xmi:id="_xqMzwEr4EemA4_kRIR1Qqg" name="PME_Trig1961" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_xqPQAEr4EemA4_kRIR1Qqg" name="PME_Trig1962" port="_tP9SkAmuEea_md0mpENoqg">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
              </trigger>
              <trigger xmi:id="_xqThcEr4EemA4_kRIR1Qqg" name="PME_Trig1963" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_xqUvkEr4EemA4_kRIR1Qqg" name="PME_Trig1964" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_xqV9sEr4EemA4_kRIR1Qqg" name="PME_Trig1965" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
              <trigger xmi:id="_xqWkwEr4EemA4_kRIR1Qqg" name="PME_Trig1966" port="_swu9gErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
            </transition>
            <transition xmi:id="_xqa2MEr4EemA4_kRIR1Qqg" name="To__WaitingForReply__1967" guard="_yJ8q0Ur4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_fO-gkAmtEea_md0mpENoqg">
              <ownedRule xmi:id="_yJ8q0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2541">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJ8q0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2541">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__WaitingForReply__1967&quot;,&quot;WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xqcrYEr4EemA4_kRIR1Qqg" name="To__Retry__1968" guard="_yJpI0Ur4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_KwFHIAo0EeaGqPUk-4V4qQ">
              <ownedRule xmi:id="_yJpI0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2532">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJpI0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2532">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Retry__1968&quot;,&quot;Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xqd5gEr4EemA4_kRIR1Qqg" name="To__StandBY__1969" guard="_yKBjUUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_Q5-S4AlKEea_md0mpENoqg">
              <ownedRule xmi:id="_yKBjUUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2544">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yKBjUEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2544">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__StandBY__1969&quot;,&quot;StandBY&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xqegkEr4EemA4_kRIR1Qqg" name="To__Debug__InitState__1970" guard="_yKFNsUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_tT_bkErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_yKFNsUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2545">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yKFNsEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2545">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__1970&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xqgVwEr4EemA4_kRIR1Qqg" name="Trans__ex1971" source="_tRYMcErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yJhNAEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xqg80Ur4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__StarupTransition__1973" guard="_yKAVMUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_xqgVwUr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yKAVMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2543">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yKAVMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2543">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xqhj4kr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__StarupTransition__1975" source="_xqhj4Er4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yEs-cEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xtYDkUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__Retry__2054" guard="_yJ0vAUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_xtXcgEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJ0vAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2538">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJ0vAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2538">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__Retry__2054&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xtbG4Ur4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__Retry__2056" source="_xtYqoEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x_jYsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xvTWMEr4EemA4_kRIR1Qqg" name="Trans__ex2111" source="_tPMbIErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yDxKUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xvVycEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__getMasterName__checkConfig__9__2113" guard="_yJzg4Ur4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_xvT9QEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJzg4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2537">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJzg4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2537">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xvZc0Ur4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__getMasterName__checkConfig__9__2115" source="_xvXAkEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yIt7wEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xxfukEr4EemA4_kRIR1Qqg" name="Trans__ex2170" source="_tL1lIUrDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yCibQEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xxg8sEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__NoMaster__2172" guard="_yJ19IUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_xxgVoEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJ19IUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2539">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJ19IEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2539">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoMaster__2172&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xxhjwUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__NoMaster__2174" source="_xxg8sUr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yJOSEEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_xynv8kr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ReqFlowDone__2206" guard="_yJ3LQUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_xynv8Er4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJ3LQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2540">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJ3LQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2540">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_xyo-EUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ReqFlowDone__2208" source="_xyoXAEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yBU6UEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x0pJMEr4EemA4_kRIR1Qqg" name="Trans__ex2262" source="_tNOsQUrDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yBAKMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x0pwQkr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__ServiceResult__2264" guard="_yJsMIUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_x0pwQEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJsMIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2535">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJsMIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2535">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_x0qXUkr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__ServiceResult__2266" source="_x0qXUEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yDA8YEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x3trUEr4EemA4_kRIR1Qqg" name="Trans__ex2344" source="_tP1UUUrDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yJA2sEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x3uSYUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__inittrans__2346" guard="_yJszMUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_x3trUUr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJszMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2536">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJszMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2536">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__inittrans__2346&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_x3x8wEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__inittrans__2348" source="_x3wHkEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yE-EMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x4-2oEr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__reqService__2381" guard="_yJq-AUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_x4-PkEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJq-AUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2534">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJq-AEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2534">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqService__2381&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_x4_dsUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__reqService__2383" source="_x4-2oUr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x_V9UEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x647IEr4EemA4_kRIR1Qqg" name="Trans__ex2437" source="_tTGqwErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yB5iEEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x65iMUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__NoResponseFromServer__2439" guard="_yJ_HEUr4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_x647IUr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJ_HEUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2542">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJ_HEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2542">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_x67-cUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__NoResponseFromServer__2441" source="_x66JQEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yBnOMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x8HDIEr4EemA4_kRIR1Qqg" name="Trans__ex2473" source="_tSUAkErDEem2BZRQc2M93A" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yFm9YEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_x8IRQUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__reqFlowInit__2475" guard="_yJqW8Ur4EemA4_kRIR1Qqg" source="_xmqXkEr4EemA4_kRIR1Qqg" target="_x8HqMEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_yJqW8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2533">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_yJqW8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2533">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_x8I4Ukr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__reqFlowInit__2477" source="_x8I4UEr4EemA4_kRIR1Qqg" target="_xmqXkEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yAqL8Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Retry&quot;,&quot;To__Retry__1968&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Substates__Debug__C__reqFlowInit__2475&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Substates__Debug__C__reqService__2381&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Substates__Debug__C__ServiceResult__2264&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Substates__Debug__C__inittrans__2346&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Substates__Debug__C__getMasterName__checkConfig__9__2113&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Substates__Debug__C__Retry__2054&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Substates__Debug__C__NoMaster__2172&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Substates__Debug__C__ReqFlowDone__2206&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;WaitingForReply&quot;,&quot;To__WaitingForReply__1967&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Substates__Debug__C__NoResponseFromServer__2439&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Substates__Debug__C__StarupTransition__1973&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;StandBY&quot;,&quot;To__StandBY__1969&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__1970&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_Oll1cAlKEea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_Q5-S4AlKEea_md0mpENoqg" name="StandBY">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYErDEem2BZRQc2M93A" name="StandBY__984">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tU4MYUrDEem2BZRQc2M93A" name="StandBY__985">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::StandBY&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_fO-gkAmtEea_md0mpENoqg" name="WaitingForReply">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_SJEfMAo6EeaGqPUk-4V4qQ" name="WaitForReply">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_r05c0Ao9EeaGqPUk-4V4qQ" name="CancellTimer">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,msg->destPort->role()->protocol,msg->getSignalName(),0,StateExitBreakPoint,0)) {
ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_KwFHIAo0EeaGqPUk-4V4qQ" name="Retry">
              <entry xmi:type="uml:OpaqueBehavior" xmi:id="_1CJTsAo2EeaGqPUk-4V4qQ" name="RetryConfig">
                <language>C++</language>
                <body>if( not Debug__SRO.checkDebug(&quot;Retry&quot;,msg->destPort->role()->protocol,msg->getSignalName(),5,StateEntryBreakPoint,0)) {
    int r=rand()%5;
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: The master is not available, retry in &quot;&lt;&lt;r&lt;&lt; &quot; second\n&quot;;
    Timer.informIn(UMLRTTimespec(r,0),4);

}
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </entry>
              <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tUyFwErDEem2BZRQc2M93A" name="Retry__982">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
              </exit>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tLzI4ErDEem2BZRQc2M93A" name="Debug__Path__NoMaster" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tLzv8UrDEem2BZRQc2M93A" name="Debug__C__NoMaster">
              <connectionPoint xmi:id="_tL1lIUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xxgVoEr4EemA4_kRIR1Qqg" name="From__Parent__2171" kind="entryPoint"/>
              <connectionPoint xmi:id="_xxg8sUr4EemA4_kRIR1Qqg" name="To__Parent__2173" kind="exitPoint"/>
              <region xmi:id="_tLzv8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tMKVQErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster" source="_tMH5AErDEem2BZRQc2M93A" target="_tL1lIUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tMWigErDEem2BZRQc2M93A" name="Debug__end__trans__NoMaster__758">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__end__trans__NoMaster&quot;,(char *)&quot;Debug__A__En__NoMaster&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tMKVQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xxo4gEr4EemA4_kRIR1Qqg" name="Trans__ex2177" source="_tL1lIUrDEem2BZRQc2M93A" target="_xxix4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xyd-8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2200&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2202&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xxpfkEr4EemA4_kRIR1Qqg" name="Trans__Init__State__21762178" source="_xxnDUEr4EemA4_kRIR1Qqg" target="_xxix4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xykFkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2176&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2200&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2176&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2202&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2176&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xxqtsEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__NoMaster__2179" source="_tMH5AErDEem2BZRQc2M93A" target="_xxix4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xyemAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2200&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2202&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xxrUwEr4EemA4_kRIR1Qqg" name="PME_Trig2180" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xxwNQEr4EemA4_kRIR1Qqg" name="PME_Trig2181" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xxypgEr4EemA4_kRIR1Qqg" name="PME_Trig2182" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xxz3oEr4EemA4_kRIR1Qqg" name="PME_Trig2183" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xx1FwEr4EemA4_kRIR1Qqg" name="PME_Trig2184" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xx4JEEr4EemA4_kRIR1Qqg" name="PME_Trig2185" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xx8agEr4EemA4_kRIR1Qqg" name="PME_Trig2186" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xx9ooEr4EemA4_kRIR1Qqg" name="PME_Trig2187" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xx-2wEr4EemA4_kRIR1Qqg" name="PME_Trig2188" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xyAr8Er4EemA4_kRIR1Qqg" name="PME_Trig2189" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xyE9YEr4EemA4_kRIR1Qqg" name="PME_Trig2190" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xyGykEr4EemA4_kRIR1Qqg" name="PME_Trig2191" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xyIAsEr4EemA4_kRIR1Qqg" name="PME_Trig2192" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xyJO0Er4EemA4_kRIR1Qqg" name="PME_Trig2193" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xyJ14Er4EemA4_kRIR1Qqg" name="PME_Trig2194" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xyOHUEr4EemA4_kRIR1Qqg" name="PME_Trig2195" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xyRKoEr4EemA4_kRIR1Qqg" name="PME_Trig2196" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xySYwEr4EemA4_kRIR1Qqg" name="PME_Trig2197" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xyTm4Er4EemA4_kRIR1Qqg" name="PME_Trig2198" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xyWDIEr4EemA4_kRIR1Qqg" name="PME_Trig2199" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xya7oEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__NoMaster__2200" guard="_xymh0Ur4EemA4_kRIR1Qqg" source="_xxix4Er4EemA4_kRIR1Qqg" target="_tMH5AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xymh0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2203">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xymh0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2203">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__NoMaster__2200&quot;,&quot;Debug__A__En__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xycJwEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2201" source="_xxgVoEr4EemA4_kRIR1Qqg" target="_xxix4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xyl6wEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__A__En__NoMaster&quot;,&quot;To__Debug__A__En__NoMaster__2200&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoMaster&quot;,&quot;Debug__C__NoMaster&quot;,&quot;To__Parent__ClientStateMachine__2202&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoMaster&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xycJwUr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2202" guard="_xynI4Ur4EemA4_kRIR1Qqg" source="_xxix4Er4EemA4_kRIR1Qqg" target="_xxg8sUr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xynI4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2204">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xynI4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2204">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2202&quot;,&quot;Debug__C__NoMaster&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMH5AErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMIgEErDEem2BZRQc2M93A" name="Debug__A__En__NoMaster">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tMRC8UrDEem2BZRQc2M93A" name="Debug__A__En__NoMaster__751">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoMaster::Region1::Debug__A__En__NoMaster&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xxix4Er4EemA4_kRIR1Qqg" name="DecesionPoint__2175" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xxnDUEr4EemA4_kRIR1Qqg" name="Init__State__2176"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tMaM4ErDEem2BZRQc2M93A" name="Debug__C__Retry">
              <connectionPoint xmi:id="_xtXcgEr4EemA4_kRIR1Qqg" name="From__Parent__2053" kind="entryPoint"/>
              <connectionPoint xmi:id="_xtYqoEr4EemA4_kRIR1Qqg" name="To__Parent__2055" kind="exitPoint"/>
              <region xmi:id="_tMaM4UrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_xth0kEr4EemA4_kRIR1Qqg" name="Trans__Init__State__20582059" source="_xtgmcEr4EemA4_kRIR1Qqg" target="_xtcVAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvIXEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2058&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2058&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2058&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2104&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2058&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xtiboEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__getMasterName__2060" source="_tMxZQErDEem2BZRQc2M93A" target="_xtcVAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvHI8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2104&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xtjCsEr4EemA4_kRIR1Qqg" name="PME_Trig2061" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xtle8Er4EemA4_kRIR1Qqg" name="PME_Trig2062" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xtq-gEr4EemA4_kRIR1Qqg" name="PME_Trig2063" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xtsMoEr4EemA4_kRIR1Qqg" name="PME_Trig2064" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xtuo4Er4EemA4_kRIR1Qqg" name="PME_Trig2065" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xtxsMEr4EemA4_kRIR1Qqg" name="PME_Trig2066" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xt0IcEr4EemA4_kRIR1Qqg" name="PME_Trig2067" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xt1WkEr4EemA4_kRIR1Qqg" name="PME_Trig2068" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xt19oEr4EemA4_kRIR1Qqg" name="PME_Trig2069" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xt3y0Er4EemA4_kRIR1Qqg" name="PME_Trig2070" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xt6PEEr4EemA4_kRIR1Qqg" name="PME_Trig2071" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xt9SYEr4EemA4_kRIR1Qqg" name="PME_Trig2072" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xt_uoEr4EemA4_kRIR1Qqg" name="PME_Trig2073" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xuA8wEr4EemA4_kRIR1Qqg" name="PME_Trig2074" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xuCK4Er4EemA4_kRIR1Qqg" name="PME_Trig2075" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xuFOMEr4EemA4_kRIR1Qqg" name="PME_Trig2076" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xuIRgEr4EemA4_kRIR1Qqg" name="PME_Trig2077" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xuJfoEr4EemA4_kRIR1Qqg" name="PME_Trig2078" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xuKtwEr4EemA4_kRIR1Qqg" name="PME_Trig2079" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xuNKAEr4EemA4_kRIR1Qqg" name="PME_Trig2080" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xuO_MEr4EemA4_kRIR1Qqg" name="PME_Trig2081" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xuT3sEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__Retry__2082" source="_tMtH0ErDEem2BZRQc2M93A" target="_xtcVAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvQ58Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2104&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xuUewEr4EemA4_kRIR1Qqg" name="PME_Trig2083" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xuVF0Er4EemA4_kRIR1Qqg" name="PME_Trig2084" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xuYJIEr4EemA4_kRIR1Qqg" name="PME_Trig2085" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xubzgEr4EemA4_kRIR1Qqg" name="PME_Trig2086" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xudosEr4EemA4_kRIR1Qqg" name="PME_Trig2087" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xue20Er4EemA4_kRIR1Qqg" name="PME_Trig2088" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xufd4Er4EemA4_kRIR1Qqg" name="PME_Trig2089" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xujvUEr4EemA4_kRIR1Qqg" name="PME_Trig2090" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xumyoEr4EemA4_kRIR1Qqg" name="PME_Trig2091" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xuoAwEr4EemA4_kRIR1Qqg" name="PME_Trig2092" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xupO4Er4EemA4_kRIR1Qqg" name="PME_Trig2093" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xuqdAEr4EemA4_kRIR1Qqg" name="PME_Trig2094" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xus5QEr4EemA4_kRIR1Qqg" name="PME_Trig2095" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xuwjoEr4EemA4_kRIR1Qqg" name="PME_Trig2096" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xuxxwEr4EemA4_kRIR1Qqg" name="PME_Trig2097" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xuy_4Er4EemA4_kRIR1Qqg" name="PME_Trig2098" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xu0OAEr4EemA4_kRIR1Qqg" name="PME_Trig2099" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xu4fcEr4EemA4_kRIR1Qqg" name="PME_Trig2100" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xu67sEr4EemA4_kRIR1Qqg" name="PME_Trig2101" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xu8J0Er4EemA4_kRIR1Qqg" name="PME_Trig2102" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xu9X8Er4EemA4_kRIR1Qqg" name="PME_Trig2103" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xvAbQEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__getMasterName__2104" guard="_xvSIEUr4EemA4_kRIR1Qqg" source="_xtcVAEr4EemA4_kRIR1Qqg" target="_tMxZQErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xvSIEUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2110">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xvSIEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2110">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__2104&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xvBCUEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__Retry__2105" guard="_xvRhA0r4EemA4_kRIR1Qqg" source="_xtcVAEr4EemA4_kRIR1Qqg" target="_tMtH0ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xvRhA0r4EemA4_kRIR1Qqg" name="PME_checkDecesion2109">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xvRhAkr4EemA4_kRIR1Qqg" name="PME_checkDecesion2109">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__Retry__2105&quot;,&quot;Debug__B__Ex__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xvF60Er4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2106" source="_xtXcgEr4EemA4_kRIR1Qqg" target="_xtcVAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xvNPkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__C__Retry&quot;,&quot;To__Parent__ClientStateMachine__2107&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__B__Ex__Retry&quot;,&quot;To__Debug__B__Ex__Retry__2105&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__Retry&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2104&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__Retry&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xvF60Ur4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2107" guard="_xvRhAUr4EemA4_kRIR1Qqg" source="_xtcVAEr4EemA4_kRIR1Qqg" target="_xtYqoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xvRhAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2108">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xvRhAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2108">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2107&quot;,&quot;Debug__C__Retry&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tMtH0ErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMtH0UrDEem2BZRQc2M93A" name="Debug__B__Ex__Retry">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Retry&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM1DoErDEem2BZRQc2M93A" name="Debug__B__Ex__Retry__773">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__B__Ex__Retry&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tMxZQErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tMxZQUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tM7xUErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__776">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__Retry::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xtcVAEr4EemA4_kRIR1Qqg" name="DecesionPoint__2057" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xtgmcEr4EemA4_kRIR1Qqg" name="Init__State__2058"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tNLo8ErDEem2BZRQc2M93A" name="Debug__Path__ServiceResult" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tNMQAUrDEem2BZRQc2M93A" name="Debug__C__ServiceResult">
              <connectionPoint xmi:id="_tNOFMErDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tNOsQUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_x0pwQEr4EemA4_kRIR1Qqg" name="From__Parent__2263" kind="entryPoint"/>
              <connectionPoint xmi:id="_x0qXUEr4EemA4_kRIR1Qqg" name="To__Parent__2265" kind="exitPoint"/>
              <region xmi:id="_tNMQAkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tNnt0ErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult" source="_tNOFMErDEem2BZRQc2M93A" target="_tNiOQUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tN6BsErDEem2BZRQc2M93A" name="Debug__init__trans__ServiceResult__805">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__init__trans__ServiceResult&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tNnt0UrDEem2BZRQc2M93A" name="Debug__Ex__WaitingForReply" source="_tNiOQUrDEem2BZRQc2M93A" target="_tNjcYErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNoU4ErDEem2BZRQc2M93A" name="CancellTimer" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>ResponseTimer.cancelTimer(TimerId);
messageID=messageID+1; 
ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,ProcessingMessage,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;   


Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNnt0krDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tNo78ErDEem2BZRQc2M93A" name="Debug__AC__ServiceResult" source="_tNjcYErDEem2BZRQc2M93A" target="_tNkqgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tNpjAErDEem2BZRQc2M93A" name="getResponse" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: got reponse from server, go to process response state\n&quot;;
    int j=0;
    for (int i=0;i&lt;=100000;i++)
	j=j+1;
    std::cout&lt;&lt;j;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__AC__ServiceResult&quot;,(char *)&quot;Debug__B__Ac__ServiceResult&quot;,(char *)&quot;Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tNo78UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x0taoEr4EemA4_kRIR1Qqg" name="Trans__Init__State__22682269" source="_x0sMgEr4EemA4_kRIR1Qqg" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3dMoEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2268&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2268&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2268&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2268&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2268&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x0uBsEr4EemA4_kRIR1Qqg" name="Trans__ex2270" source="_tNOsQUrDEem2BZRQc2M93A" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3heEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x01WcEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__ServiceResult__2271" source="_tNkqgErDEem2BZRQc2M93A" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3iFIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x02kkEr4EemA4_kRIR1Qqg" name="PME_Trig2272" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x05A0Er4EemA4_kRIR1Qqg" name="PME_Trig2273" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x09SQEr4EemA4_kRIR1Qqg" name="PME_Trig2274" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x0-gYEr4EemA4_kRIR1Qqg" name="PME_Trig2275" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x0_ugEr4EemA4_kRIR1Qqg" name="PME_Trig2276" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1A8oEr4EemA4_kRIR1Qqg" name="PME_Trig2277" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x1D_8Er4EemA4_kRIR1Qqg" name="PME_Trig2278" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1IRYEr4EemA4_kRIR1Qqg" name="PME_Trig2279" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x1JfgEr4EemA4_kRIR1Qqg" name="PME_Trig2280" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1KtoEr4EemA4_kRIR1Qqg" name="PME_Trig2281" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x1NJ4Er4EemA4_kRIR1Qqg" name="PME_Trig2282" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x1SCYEr4EemA4_kRIR1Qqg" name="PME_Trig2283" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x1SpcEr4EemA4_kRIR1Qqg" name="PME_Trig2284" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x1T3kEr4EemA4_kRIR1Qqg" name="PME_Trig2285" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1VFsEr4EemA4_kRIR1Qqg" name="PME_Trig2286" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x1WT0Er4EemA4_kRIR1Qqg" name="PME_Trig2287" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x1bMUEr4EemA4_kRIR1Qqg" name="PME_Trig2288" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x1dBgEr4EemA4_kRIR1Qqg" name="PME_Trig2289" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x1ePoEr4EemA4_kRIR1Qqg" name="PME_Trig2290" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_x1fdwEr4EemA4_kRIR1Qqg" name="PME_Trig2291" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1ihEEr4EemA4_kRIR1Qqg" name="PME_Trig2292" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x1mygEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__ServiceResult__2293" source="_tNjcYErDEem2BZRQc2M93A" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3jTQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x1nZkEr4EemA4_kRIR1Qqg" name="PME_Trig2294" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1oAoEr4EemA4_kRIR1Qqg" name="PME_Trig2295" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x1pOwEr4EemA4_kRIR1Qqg" name="PME_Trig2296" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1sSEEr4EemA4_kRIR1Qqg" name="PME_Trig2297" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x1wjgEr4EemA4_kRIR1Qqg" name="PME_Trig2298" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x1xxoEr4EemA4_kRIR1Qqg" name="PME_Trig2299" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x1y_wEr4EemA4_kRIR1Qqg" name="PME_Trig2300" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x10N4Er4EemA4_kRIR1Qqg" name="PME_Trig2301" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x17ioEr4EemA4_kRIR1Qqg" name="PME_Trig2302" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x18wwEr4EemA4_kRIR1Qqg" name="PME_Trig2303" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x19-4Er4EemA4_kRIR1Qqg" name="PME_Trig2304" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x2CQUEr4EemA4_kRIR1Qqg" name="PME_Trig2305" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x2GhwEr4EemA4_kRIR1Qqg" name="PME_Trig2306" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x2IW8Er4EemA4_kRIR1Qqg" name="PME_Trig2307" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2QSwEr4EemA4_kRIR1Qqg" name="PME_Trig2308" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x2Rg4Er4EemA4_kRIR1Qqg" name="PME_Trig2309" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x2VLQEr4EemA4_kRIR1Qqg" name="PME_Trig2310" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x2aq0Er4EemA4_kRIR1Qqg" name="PME_Trig2311" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x2b48Er4EemA4_kRIR1Qqg" name="PME_Trig2312" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2duIEr4EemA4_kRIR1Qqg" name="PME_Trig2313" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x2gxcEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__WaitingForReply__2314" source="_tNiOQUrDEem2BZRQc2M93A" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3rPEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x2j0wEr4EemA4_kRIR1Qqg" name="PME_Trig2315" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2lC4Er4EemA4_kRIR1Qqg" name="PME_Trig2316" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x2mRAEr4EemA4_kRIR1Qqg" name="PME_Trig2317" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2otQEr4EemA4_kRIR1Qqg" name="PME_Trig2318" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x2uM0Er4EemA4_kRIR1Qqg" name="PME_Trig2319" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2uz4Er4EemA4_kRIR1Qqg" name="PME_Trig2320" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x2wCAEr4EemA4_kRIR1Qqg" name="PME_Trig2321" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x2xQIEr4EemA4_kRIR1Qqg" name="PME_Trig2322" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x2390Er4EemA4_kRIR1Qqg" name="PME_Trig2323" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x25zAEr4EemA4_kRIR1Qqg" name="PME_Trig2324" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x27BIEr4EemA4_kRIR1Qqg" name="PME_Trig2325" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x3AgsEr4EemA4_kRIR1Qqg" name="PME_Trig2326" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x3C88Er4EemA4_kRIR1Qqg" name="PME_Trig2327" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x3ELEEr4EemA4_kRIR1Qqg" name="PME_Trig2328" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x3GnUEr4EemA4_kRIR1Qqg" name="PME_Trig2329" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x3MG4Er4EemA4_kRIR1Qqg" name="PME_Trig2330" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x3N8EEr4EemA4_kRIR1Qqg" name="PME_Trig2331" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x3PKMEr4EemA4_kRIR1Qqg" name="PME_Trig2332" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x3SNgEr4EemA4_kRIR1Qqg" name="PME_Trig2333" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x3V34Er4EemA4_kRIR1Qqg" name="PME_Trig2334" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x3XtEEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__ServiceResult__2335" guard="_x3sdM0r4EemA4_kRIR1Qqg" source="_x0q-YEr4EemA4_kRIR1Qqg" target="_tNkqgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x3sdM0r4EemA4_kRIR1Qqg" name="PME_checkDecesion2342">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x3sdMkr4EemA4_kRIR1Qqg" name="PME_checkDecesion2342">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,&quot;Debug__A__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x3XtEUr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__ServiceResult__2336" guard="_x3r2IUr4EemA4_kRIR1Qqg" source="_x0q-YEr4EemA4_kRIR1Qqg" target="_tNjcYErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x3r2IUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2340">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x3r2IEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2340">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,&quot;Debug__B__Ac__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x3XtEkr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__WaitingForReply__2337" guard="_x3sdMUr4EemA4_kRIR1Qqg" source="_x0q-YEr4EemA4_kRIR1Qqg" target="_tNiOQUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x3sdMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2341">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x3sdMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2341">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x3Y7MEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2338" source="_x0pwQEr4EemA4_kRIR1Qqg" target="_x0q-YEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x3lIcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ac__ServiceResult&quot;,&quot;To__Debug__B__Ac__ServiceResult__2336&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2337&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__A__Ac__ServiceResult&quot;,&quot;To__Debug__A__Ac__ServiceResult__2335&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ServiceResult&quot;,&quot;Debug__C__ServiceResult&quot;,&quot;To__Parent__ClientStateMachine__2339&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ServiceResult&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x3Y7MUr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2339" guard="_x3tEQUr4EemA4_kRIR1Qqg" source="_x0q-YEr4EemA4_kRIR1Qqg" target="_x0qXUEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x3tEQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2343">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x3tEQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2343">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2339&quot;,&quot;Debug__C__ServiceResult&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tNiOQUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNiOQkrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNtNYUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__800">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNjcYErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNjcYUrDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tNxe0ErDEem2BZRQc2M93A" name="Debug__B__Ac__ServiceResult__801">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__B__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tNkqgErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tNkqgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ServiceResult&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;ProcessResponse&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tN1JMErDEem2BZRQc2M93A" name="Debug__A__Ac__ServiceResult__802">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ServiceResult::Region1::Debug__A__Ac__ServiceResult&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x0q-YEr4EemA4_kRIR1Qqg" name="DecesionPoint__2267" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x0sMgEr4EemA4_kRIR1Qqg" name="Init__State__2268"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tOHdEErDEem2BZRQc2M93A" name="Debug__Path__reqService" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tOXUsErDEem2BZRQc2M93A" name="Debug__C__reqService">
              <connectionPoint xmi:id="_x4-PkEr4EemA4_kRIR1Qqg" name="From__Parent__2380" kind="entryPoint"/>
              <connectionPoint xmi:id="_x4-2oUr4EemA4_kRIR1Qqg" name="To__Parent__2382" kind="exitPoint"/>
              <region xmi:id="_tOXUsUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tO5gM0rDEem2BZRQc2M93A" name="Debug__En__WaitingForReply" source="_tO3D8ErDEem2BZRQc2M93A" target="_tO4SEErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tO6HQUrDEem2BZRQc2M93A" name="WaitForReply" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: Waiting for Response, The timeout is 60 Second\n&quot;;
    TimerId=ResponseTimer.informIn(UMLRTTimespec(60,0),4);
    ts.getclock(ts);
    if (logfile.is_open())
	logfile&lt;&lt;this->getName()&lt;&lt;&quot;,MessageSent,&quot;&lt;&lt;messageID&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_sec&lt;&lt;&quot;,&quot;&lt;&lt;ts.tv_nsec&lt;&lt;&quot;\n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__En__WaitingForReply&quot;,(char *)&quot;Debug__A__Ac__reqService&quot;,(char *)&quot;Debug__A__En__reqService&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tO6HQErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x5InoEr4EemA4_kRIR1Qqg" name="Trans__Init__State__23852386" source="_x5HZgEr4EemA4_kRIR1Qqg" target="_x5AEwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x6t8AEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2385&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2430&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2385&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2431&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2385&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2433&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2385&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x5J1wEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__reqService__2387" source="_tO3D8ErDEem2BZRQc2M93A" target="_x5AEwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x6xmYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2430&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2431&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2433&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x5M5EEr4EemA4_kRIR1Qqg" name="PME_Trig2388" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5QjcEr4EemA4_kRIR1Qqg" name="PME_Trig2389" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x5SYoEr4EemA4_kRIR1Qqg" name="PME_Trig2390" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5TmwEr4EemA4_kRIR1Qqg" name="PME_Trig2391" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x5X4MEr4EemA4_kRIR1Qqg" name="PME_Trig2392" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5a7gEr4EemA4_kRIR1Qqg" name="PME_Trig2393" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x5cJoEr4EemA4_kRIR1Qqg" name="PME_Trig2394" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5dXwEr4EemA4_kRIR1Qqg" name="PME_Trig2395" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x5d-0Er4EemA4_kRIR1Qqg" name="PME_Trig2396" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5iQQEr4EemA4_kRIR1Qqg" name="PME_Trig2397" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x5l6oEr4EemA4_kRIR1Qqg" name="PME_Trig2398" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x5mhsEr4EemA4_kRIR1Qqg" name="PME_Trig2399" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x5nv0Er4EemA4_kRIR1Qqg" name="PME_Trig2400" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x5o98Er4EemA4_kRIR1Qqg" name="PME_Trig2401" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x5vEkEr4EemA4_kRIR1Qqg" name="PME_Trig2402" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x5vroEr4EemA4_kRIR1Qqg" name="PME_Trig2403" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x5w5wEr4EemA4_kRIR1Qqg" name="PME_Trig2404" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x5yH4Er4EemA4_kRIR1Qqg" name="PME_Trig2405" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x50kIEr4EemA4_kRIR1Qqg" name="PME_Trig2406" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x541kEr4EemA4_kRIR1Qqg" name="PME_Trig2407" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x56DsEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__reqService__2408" source="_tO4SEErDEem2BZRQc2M93A" target="_x5AEwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x6vKIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2430&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2431&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2433&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x56qwEr4EemA4_kRIR1Qqg" name="PME_Trig2409" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x57R0Er4EemA4_kRIR1Qqg" name="PME_Trig2410" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x59HAEr4EemA4_kRIR1Qqg" name="PME_Trig2411" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6DNoEr4EemA4_kRIR1Qqg" name="PME_Trig2412" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x6EbwEr4EemA4_kRIR1Qqg" name="PME_Trig2413" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6FC0Er4EemA4_kRIR1Qqg" name="PME_Trig2414" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x6GQ8Er4EemA4_kRIR1Qqg" name="PME_Trig2415" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6J7UEr4EemA4_kRIR1Qqg" name="PME_Trig2416" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x6NlsEr4EemA4_kRIR1Qqg" name="PME_Trig2417" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6OMwEr4EemA4_kRIR1Qqg" name="PME_Trig2418" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x6Pa4Er4EemA4_kRIR1Qqg" name="PME_Trig2419" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x6QpAEr4EemA4_kRIR1Qqg" name="PME_Trig2420" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x6R3IEr4EemA4_kRIR1Qqg" name="PME_Trig2421" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x6WIkEr4EemA4_kRIR1Qqg" name="PME_Trig2422" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6ZL4Er4EemA4_kRIR1Qqg" name="PME_Trig2423" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x6Zy8Er4EemA4_kRIR1Qqg" name="PME_Trig2424" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x6bBEEr4EemA4_kRIR1Qqg" name="PME_Trig2425" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x6ercEr4EemA4_kRIR1Qqg" name="PME_Trig2426" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x6i84Er4EemA4_kRIR1Qqg" name="PME_Trig2427" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_x6kLAEr4EemA4_kRIR1Qqg" name="PME_Trig2428" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x6lZIEr4EemA4_kRIR1Qqg" name="PME_Trig2429" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x6rfwEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__reqService__2430" guard="_x63F8Ur4EemA4_kRIR1Qqg" source="_x5AEwEr4EemA4_kRIR1Qqg" target="_tO3D8ErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x63F8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2434">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x63F8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2434">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqService__2430&quot;,&quot;Debug__A__Ac__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x6rfwUr4EemA4_kRIR1Qqg" name="To__Debug__A__En__reqService__2431" guard="_x63tAUr4EemA4_kRIR1Qqg" source="_x5AEwEr4EemA4_kRIR1Qqg" target="_tO4SEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x63tAUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2435">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x63tAEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2435">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__reqService__2431&quot;,&quot;Debug__A__En__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x6st4Er4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2432" source="_x4-PkEr4EemA4_kRIR1Qqg" target="_x5AEwEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x62e4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__Ac__reqService&quot;,&quot;To__Debug__A__Ac__reqService__2430&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__A__En__reqService&quot;,&quot;To__Debug__A__En__reqService__2431&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqService&quot;,&quot;Debug__C__reqService&quot;,&quot;To__Parent__ClientStateMachine__2433&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqService&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x6st4Ur4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2433" guard="_x64UEEr4EemA4_kRIR1Qqg" source="_x5AEwEr4EemA4_kRIR1Qqg" target="_x4-2oUr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x64UEEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2436">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x63tAkr4EemA4_kRIR1Qqg" name="PME_checkDecesion2436">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2433&quot;,&quot;Debug__C__reqService&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tO3D8ErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO3D8UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqService&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tO-YsErDEem2BZRQc2M93A" name="Debug__A__Ac__reqService__825">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__Ac__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tO4SEErDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tO4SEUrDEem2BZRQc2M93A" name="Debug__A__En__reqService">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPAN4UrDEem2BZRQc2M93A" name="Debug__A__En__reqService__826">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqService::Region1::Debug__A__En__reqService&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x5AEwEr4EemA4_kRIR1Qqg" name="DecesionPoint__2384" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x5HZgEr4EemA4_kRIR1Qqg" name="Init__State__2385"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tPJ-4ErDEem2BZRQc2M93A" name="Debug__Path__getMasterName__checkConfig__9" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tPKl8UrDEem2BZRQc2M93A" name="Debug__C__getMasterName__checkConfig__9">
              <connectionPoint xmi:id="_tPLNAUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tPMbIErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xvT9QEr4EemA4_kRIR1Qqg" name="From__Parent__2112" kind="entryPoint"/>
              <connectionPoint xmi:id="_xvXAkEr4EemA4_kRIR1Qqg" name="To__Parent__2114" kind="exitPoint"/>
              <region xmi:id="_tPKl8krDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tPf9IErDEem2BZRQc2M93A" name="Debug__init__trans__getMasterName__checkConfig__9" source="_tPLNAUrDEem2BZRQc2M93A" target="_tPc50UrDEem2BZRQc2M93A"/>
                <transition xmi:id="_tPhLQErDEem2BZRQc2M93A" name="Debug__end__trans__getMasterName__checkConfig__9" source="_tPfWEErDEem2BZRQc2M93A" target="_tPMbIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tPsKYErDEem2BZRQc2M93A" name="Debug__end__trans__getMasterName__checkConfig__9__854">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__end__trans__getMasterName__checkConfig__9&quot;,(char *)&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tPhLQUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xvcgIEr4EemA4_kRIR1Qqg" name="Trans__ex2118" source="_tPMbIErDEem2BZRQc2M93A" target="_xvaD4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xxcEMEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2166&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__2163&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xvcgIUr4EemA4_kRIR1Qqg" name="Trans__Init__State__21172119" source="_xvbSAEr4EemA4_kRIR1Qqg" target="_xvaD4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xxXLsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2117&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2166&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2117&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2117&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__2163&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2117&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xvkb8Er4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__getMasterName__2120" source="_tPc50UrDEem2BZRQc2M93A" target="_xvaD4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xxV9kEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2166&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__getMasterName&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__2163&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xvlqEEr4EemA4_kRIR1Qqg" name="PME_Trig2121" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xvm4MEr4EemA4_kRIR1Qqg" name="PME_Trig2122" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xvpUcEr4EemA4_kRIR1Qqg" name="PME_Trig2123" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xvtl4Er4EemA4_kRIR1Qqg" name="PME_Trig2124" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xvu0AEr4EemA4_kRIR1Qqg" name="PME_Trig2125" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xvwCIEr4EemA4_kRIR1Qqg" name="PME_Trig2126" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xvxQQEr4EemA4_kRIR1Qqg" name="PME_Trig2127" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xv0TkEr4EemA4_kRIR1Qqg" name="PME_Trig2128" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xv4lAEr4EemA4_kRIR1Qqg" name="PME_Trig2129" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xv5MEEr4EemA4_kRIR1Qqg" name="PME_Trig2130" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xv6aMEr4EemA4_kRIR1Qqg" name="PME_Trig2131" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xv7oUEr4EemA4_kRIR1Qqg" name="PME_Trig2132" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xv_5wEr4EemA4_kRIR1Qqg" name="PME_Trig2133" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xwDkIEr4EemA4_kRIR1Qqg" name="PME_Trig2134" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwEyQEr4EemA4_kRIR1Qqg" name="PME_Trig2135" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xwGAYEr4EemA4_kRIR1Qqg" name="PME_Trig2136" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xwKR0Er4EemA4_kRIR1Qqg" name="PME_Trig2137" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xwNVIEr4EemA4_kRIR1Qqg" name="PME_Trig2138" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xwPKUEr4EemA4_kRIR1Qqg" name="PME_Trig2139" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_xwQYcEr4EemA4_kRIR1Qqg" name="PME_Trig2140" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwS0sEr4EemA4_kRIR1Qqg" name="PME_Trig2141" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xwYUQEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__getMasterName__checkConfig__9__2142" source="_tPfWEErDEem2BZRQc2M93A" target="_xvaD4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xxQeAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2166&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__2163&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xwY7UEr4EemA4_kRIR1Qqg" name="PME_Trig2143" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwaJcEr4EemA4_kRIR1Qqg" name="PME_Trig2144" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xwiFQEr4EemA4_kRIR1Qqg" name="PME_Trig2145" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwjTYEr4EemA4_kRIR1Qqg" name="PME_Trig2146" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xwkhgEr4EemA4_kRIR1Qqg" name="PME_Trig2147" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwqoIEr4EemA4_kRIR1Qqg" name="PME_Trig2148" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xwsdUEr4EemA4_kRIR1Qqg" name="PME_Trig2149" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwtrcEr4EemA4_kRIR1Qqg" name="PME_Trig2150" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xwuSgEr4EemA4_kRIR1Qqg" name="PME_Trig2151" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xwxV0Er4EemA4_kRIR1Qqg" name="PME_Trig2152" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xw2OUEr4EemA4_kRIR1Qqg" name="PME_Trig2153" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xw3ccEr4EemA4_kRIR1Qqg" name="PME_Trig2154" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xw4qkEr4EemA4_kRIR1Qqg" name="PME_Trig2155" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xw8U8Er4EemA4_kRIR1Qqg" name="PME_Trig2156" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xw__UEr4EemA4_kRIR1Qqg" name="PME_Trig2157" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xxAmYEr4EemA4_kRIR1Qqg" name="PME_Trig2158" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xxB0gEr4EemA4_kRIR1Qqg" name="PME_Trig2159" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xxDCoEr4EemA4_kRIR1Qqg" name="PME_Trig2160" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xxHUEEr4EemA4_kRIR1Qqg" name="PME_Trig2161" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xxJwUEr4EemA4_kRIR1Qqg" name="PME_Trig2162" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xxK-cEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__getMasterName__2163" guard="_xxfHg0r4EemA4_kRIR1Qqg" source="_xvaD4Er4EemA4_kRIR1Qqg" target="_tPc50UrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xxfHg0r4EemA4_kRIR1Qqg" name="PME_checkDecesion2169">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xxfHgkr4EemA4_kRIR1Qqg" name="PME_checkDecesion2169">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__getMasterName__2163&quot;,&quot;Debug__B__Ex__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xxLlgEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__getMasterName__checkConfig__9__2164" guard="_xxfHgUr4EemA4_kRIR1Qqg" source="_xvaD4Er4EemA4_kRIR1Qqg" target="_tPfWEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xxfHgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2168">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xxfHgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2168">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xxMMkEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2165" source="_xvT9QEr4EemA4_kRIR1Qqg" target="_xvaD4Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xxUIYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;To__Parent__ClientStateMachine__2166&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__A__Ac__getMasterName__checkConfig__9&quot;,&quot;To__Debug__A__Ac__getMasterName__checkConfig__9__2164&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__getMasterName__checkConfig__9&quot;,&quot;Debug__B__Ex__getMasterName&quot;,&quot;To__Debug__B__Ex__getMasterName__2163&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__getMasterName__checkConfig__9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xxMzoEr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2166" guard="_xxegcUr4EemA4_kRIR1Qqg" source="_xvaD4Er4EemA4_kRIR1Qqg" target="_xvXAkEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xxegcUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2167">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xxegcEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2167">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2166&quot;,&quot;Debug__C__getMasterName__checkConfig__9&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tPc50UrDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPdg4ErDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ex__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPiZYUrDEem2BZRQc2M93A" name="Debug__B__Ex__getMasterName__846">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__B__Ex__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tPfWEErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tPfWEUrDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName__checkConfig__9&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tPnR4ErDEem2BZRQc2M93A" name="Debug__A__Ac__getMasterName__checkConfig__9__848">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__getMasterName__checkConfig__9::Region1::Debug__A__Ac__getMasterName__checkConfig__9&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xvaD4Er4EemA4_kRIR1Qqg" name="DecesionPoint__2116" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xvbSAEr4EemA4_kRIR1Qqg" name="Init__State__2117"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tPy4EErDEem2BZRQc2M93A" name="Debug__C__inittrans">
              <connectionPoint xmi:id="_tPzfIUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tP1UUUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_x3trUUr4EemA4_kRIR1Qqg" name="From__Parent__2345" kind="entryPoint"/>
              <connectionPoint xmi:id="_x3wHkEr4EemA4_kRIR1Qqg" name="To__Parent__2347" kind="exitPoint"/>
              <region xmi:id="_tPy4EUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQHBIErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans" source="_tPzfIUrDEem2BZRQc2M93A" target="_tQDWwUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQPkAErDEem2BZRQc2M93A" name="Debug__init__trans__inittrans__873">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__init__trans__inittrans&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x33cUEr4EemA4_kRIR1Qqg" name="Trans__ex2351" source="_tP1UUUrDEem2BZRQc2M93A" target="_x30ZAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x44wAEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2375&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x33cUUr4EemA4_kRIR1Qqg" name="Trans__Init__State__23502352" source="_x32OMEr4EemA4_kRIR1Qqg" target="_x30ZAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x4zQcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2350&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2350&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2375&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2350&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x34qcEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__inittrans__2353" source="_tQDWwUrDEem2BZRQc2M93A" target="_x30ZAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x48aYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2375&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x34qcUr4EemA4_kRIR1Qqg" name="PME_Trig2354" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x39i8Er4EemA4_kRIR1Qqg" name="PME_Trig2355" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x3__MEr4EemA4_kRIR1Qqg" name="PME_Trig2356" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4BNUEr4EemA4_kRIR1Qqg" name="PME_Trig2357" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x4CbcEr4EemA4_kRIR1Qqg" name="PME_Trig2358" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4FewEr4EemA4_kRIR1Qqg" name="PME_Trig2359" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x4JwMEr4EemA4_kRIR1Qqg" name="PME_Trig2360" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4K-UEr4EemA4_kRIR1Qqg" name="PME_Trig2361" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x4MMcEr4EemA4_kRIR1Qqg" name="PME_Trig2362" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4PPwEr4EemA4_kRIR1Qqg" name="PME_Trig2363" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x4ThMEr4EemA4_kRIR1Qqg" name="PME_Trig2364" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x4UvUEr4EemA4_kRIR1Qqg" name="PME_Trig2365" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x4V9cEr4EemA4_kRIR1Qqg" name="PME_Trig2366" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x4YZsEr4EemA4_kRIR1Qqg" name="PME_Trig2367" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4d5QEr4EemA4_kRIR1Qqg" name="PME_Trig2368" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x4fHYEr4EemA4_kRIR1Qqg" name="PME_Trig2369" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x4gVgEr4EemA4_kRIR1Qqg" name="PME_Trig2370" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x4hjoEr4EemA4_kRIR1Qqg" name="PME_Trig2371" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x4nqQEr4EemA4_kRIR1Qqg" name="PME_Trig2372" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_x4o4YEr4EemA4_kRIR1Qqg" name="PME_Trig2373" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x4qGgEr4EemA4_kRIR1Qqg" name="PME_Trig2374" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x4rUoEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__inittrans__2375" guard="_x49ogUr4EemA4_kRIR1Qqg" source="_x30ZAEr4EemA4_kRIR1Qqg" target="_tQDWwUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x49ogUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2379">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x49ogEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2379">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__inittrans__2375&quot;,&quot;Debug__B__Ac__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x4uX8Er4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2376" source="_x3trUUr4EemA4_kRIR1Qqg" target="_x30ZAEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x40ekEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__C__inittrans&quot;,&quot;To__Parent__ClientStateMachine__2377&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__inittrans&quot;,&quot;Debug__B__Ac__inittrans&quot;,&quot;To__Debug__B__Ac__inittrans__2375&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__inittrans&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x4wNIEr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2377" guard="_x49BcUr4EemA4_kRIR1Qqg" source="_x30ZAEr4EemA4_kRIR1Qqg" target="_x3wHkEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x49BcUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2378">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x49BcEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2378">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2377&quot;,&quot;Debug__C__inittrans&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQDWwUrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQDWwkrDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;inittrans&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tQJdYErDEem2BZRQc2M93A" name="Debug__B__Ac__inittrans__869">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__inittrans::Region1::Debug__B__Ac__inittrans&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x30ZAEr4EemA4_kRIR1Qqg" name="DecesionPoint__2349" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x32OMEr4EemA4_kRIR1Qqg" name="Init__State__2350"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tQWRsErDEem2BZRQc2M93A" name="Debug__Path__ReqFlowDone" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tQW4wUrDEem2BZRQc2M93A" name="Debug__C__ReqFlowDone">
              <connectionPoint xmi:id="_xynv8Er4EemA4_kRIR1Qqg" name="From__Parent__2205" kind="entryPoint"/>
              <connectionPoint xmi:id="_xyoXAEr4EemA4_kRIR1Qqg" name="To__Parent__2207" kind="exitPoint"/>
              <region xmi:id="_tQW4wkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tQ1Z4UrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tQxvgErDEem2BZRQc2M93A" target="_tQy9oErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tQ2A8UrDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tQ2A8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xywS0Er4EemA4_kRIR1Qqg" name="Trans__Init__State__22102211" source="_xyvrwEr4EemA4_kRIR1Qqg" target="_xyraUEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x0f_QEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2210&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2210&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2210&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2258&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2210&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xyyIAEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__ReqFlowDone__2212" source="_tQxvgErDEem2BZRQc2M93A" target="_xyraUEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x0exIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2258&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xyyvEEr4EemA4_kRIR1Qqg" name="PME_Trig2213" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xy3AgEr4EemA4_kRIR1Qqg" name="PME_Trig2214" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xy6D0Er4EemA4_kRIR1Qqg" name="PME_Trig2215" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xy7R8Er4EemA4_kRIR1Qqg" name="PME_Trig2216" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xy75AEr4EemA4_kRIR1Qqg" name="PME_Trig2217" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xy-8UEr4EemA4_kRIR1Qqg" name="PME_Trig2218" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzCmsEr4EemA4_kRIR1Qqg" name="PME_Trig2219" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzEb4Er4EemA4_kRIR1Qqg" name="PME_Trig2220" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzFqAEr4EemA4_kRIR1Qqg" name="PME_Trig2221" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzGREEr4EemA4_kRIR1Qqg" name="PME_Trig2222" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xzJUYEr4EemA4_kRIR1Qqg" name="PME_Trig2223" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xzOM4Er4EemA4_kRIR1Qqg" name="PME_Trig2224" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzOz8Er4EemA4_kRIR1Qqg" name="PME_Trig2225" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xzQCEEr4EemA4_kRIR1Qqg" name="PME_Trig2226" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzRQMEr4EemA4_kRIR1Qqg" name="PME_Trig2227" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xzU6kEr4EemA4_kRIR1Qqg" name="PME_Trig2228" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xzYk8Er4EemA4_kRIR1Qqg" name="PME_Trig2229" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzZzEEr4EemA4_kRIR1Qqg" name="PME_Trig2230" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xzbBMEr4EemA4_kRIR1Qqg" name="PME_Trig2231" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzddcEr4EemA4_kRIR1Qqg" name="PME_Trig2232" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xziV8Er4EemA4_kRIR1Qqg" name="From__Debug__A__En__Ready__2233" source="_tQy9oErDEem2BZRQc2M93A" target="_xyraUEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x0hNYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2258&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xzi9AEr4EemA4_kRIR1Qqg" name="PME_Trig2234" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzjkEEr4EemA4_kRIR1Qqg" name="PME_Trig2235" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xzkyMEr4EemA4_kRIR1Qqg" name="PME_Trig2236" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzmAUEr4EemA4_kRIR1Qqg" name="PME_Trig2237" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xzqRwEr4EemA4_kRIR1Qqg" name="PME_Trig2238" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xztVEEr4EemA4_kRIR1Qqg" name="PME_Trig2239" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzujMEr4EemA4_kRIR1Qqg" name="PME_Trig2240" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xzvKQEr4EemA4_kRIR1Qqg" name="PME_Trig2241" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xzwYYEr4EemA4_kRIR1Qqg" name="PME_Trig2242" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xz3GEEr4EemA4_kRIR1Qqg" name="PME_Trig2243" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xz3tIEr4EemA4_kRIR1Qqg" name="PME_Trig2244" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xz47QEr4EemA4_kRIR1Qqg" name="PME_Trig2245" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xz6JYEr4EemA4_kRIR1Qqg" name="PME_Trig2246" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xz9MsEr4EemA4_kRIR1Qqg" name="PME_Trig2247" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x0BeIEr4EemA4_kRIR1Qqg" name="PME_Trig2248" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x0CsQEr4EemA4_kRIR1Qqg" name="PME_Trig2249" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x0D6YEr4EemA4_kRIR1Qqg" name="PME_Trig2250" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x0HkwEr4EemA4_kRIR1Qqg" name="PME_Trig2251" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x0LPIEr4EemA4_kRIR1Qqg" name="PME_Trig2252" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_x0MdQEr4EemA4_kRIR1Qqg" name="PME_Trig2253" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x0NEUEr4EemA4_kRIR1Qqg" name="PME_Trig2254" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x0QusEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__ReqFlowDone__2255" guard="_x0h0cUr4EemA4_kRIR1Qqg" source="_xyraUEr4EemA4_kRIR1Qqg" target="_tQxvgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x0h0cUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2259">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x0h0cEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2259">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__ReqFlowDone__2255&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x0Sj4Er4EemA4_kRIR1Qqg" name="To__Debug__A__En__Ready__2256" guard="_x0ibgUr4EemA4_kRIR1Qqg" source="_xyraUEr4EemA4_kRIR1Qqg" target="_tQy9oErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x0ibgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2260">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x0ibgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2260">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__2256&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x0WOQEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2257" source="_xynv8Er4EemA4_kRIR1Qqg" target="_xyraUEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x0afsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__Ac__ReqFlowDone&quot;,&quot;To__Debug__A__Ac__ReqFlowDone__2255&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2256&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__ReqFlowDone&quot;,&quot;Debug__C__ReqFlowDone&quot;,&quot;To__Parent__ClientStateMachine__2258&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__ReqFlowDone&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x0W1UEr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2258" guard="_x0kQsUr4EemA4_kRIR1Qqg" source="_xyraUEr4EemA4_kRIR1Qqg" target="_xyoXAEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x0kQsUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2261">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x0kQsEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2261">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2258&quot;,&quot;Debug__C__ReqFlowDone&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tQxvgErDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQxvgUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;ReqFlowDone&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRBAEUrDEem2BZRQc2M93A" name="Debug__A__Ac__ReqFlowDone__894">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__Ac__ReqFlowDone&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tQy9oErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tQzksErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tRC1QErDEem2BZRQc2M93A" name="Debug__A__En__Ready__895">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__ReqFlowDone::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xyraUEr4EemA4_kRIR1Qqg" name="DecesionPoint__2209" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xyvrwEr4EemA4_kRIR1Qqg" name="Init__State__2210"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tRT7AErDEem2BZRQc2M93A" name="Debug__Path__StarupTransition" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tRUiEUrDEem2BZRQc2M93A" name="Debug__C__StarupTransition">
              <connectionPoint xmi:id="_tRVwMUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tRYMcErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_xqgVwUr4EemA4_kRIR1Qqg" name="From__Parent__1972" kind="entryPoint"/>
              <connectionPoint xmi:id="_xqhj4Er4EemA4_kRIR1Qqg" name="To__Parent__1974" kind="exitPoint"/>
              <region xmi:id="_tRUiEkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tR37sErDEem2BZRQc2M93A" name="Debug__AC__StarupTransition" source="_tRycIErDEem2BZRQc2M93A" target="_tR04YErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tR4iwErDEem2BZRQc2M93A" name="StartUPClient" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot; Client is startingUP \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__AC__StarupTransition&quot;,(char *)&quot;Debug__B__Ac__StarupTransition&quot;,(char *)&quot;Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR37sUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR4iwUrDEem2BZRQc2M93A" name="Debug__En__Ready" source="_tR04YErDEem2BZRQc2M93A" target="_tR2GgErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tR5w4ErDEem2BZRQc2M93A" name="ReadyEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: is in Ready State\n&quot;;
    //int r=rand()%11;
    int r=1;
    RequestTimer.informIn(UMLRTTimespec(0,1000),4);
    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;: will try to request service after &quot;&lt;&lt; r&lt;&lt;&quot; second \n&quot;;

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__En__Ready&quot;,(char *)&quot;Debug__A__Ac__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR4iwkrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tR6X8ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition" source="_tR2GgErDEem2BZRQc2M93A" target="_tRYMcErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSMr0ErDEem2BZRQc2M93A" name="Debug__end__trans__StarupTransition__928">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__end__trans__StarupTransition&quot;,(char *)&quot;Debug__A__En__Ready&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tR6X8UrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xqqGwEr4EemA4_kRIR1Qqg" name="Trans__ex1978" source="_tRYMcErDEem2BZRQc2M93A" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtOSkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xqqt0Er4EemA4_kRIR1Qqg" name="Trans__Init__State__19771979" source="_xqoRkEr4EemA4_kRIR1Qqg" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtLPQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__1977&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1977&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1977&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__1977&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__1977&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xqqt0Ur4EemA4_kRIR1Qqg" name="Trans__en1980" source="_tRVwMUrDEem2BZRQc2M93A" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtMdYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xquYMEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__StarupTransition__1981" source="_tRycIErDEem2BZRQc2M93A" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtGWwEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xqyCkEr4EemA4_kRIR1Qqg" name="PME_Trig1982" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xqzQsEr4EemA4_kRIR1Qqg" name="PME_Trig1983" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xq0e0Er4EemA4_kRIR1Qqg" name="PME_Trig1984" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xq2UAEr4EemA4_kRIR1Qqg" name="PME_Trig1985" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xq5-YEr4EemA4_kRIR1Qqg" name="PME_Trig1986" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xq9owEr4EemA4_kRIR1Qqg" name="PME_Trig1987" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xq-24Er4EemA4_kRIR1Qqg" name="PME_Trig1988" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrChQEr4EemA4_kRIR1Qqg" name="PME_Trig1989" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xrHZwEr4EemA4_kRIR1Qqg" name="PME_Trig1990" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrIn4Er4EemA4_kRIR1Qqg" name="PME_Trig1991" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xrJ2AEr4EemA4_kRIR1Qqg" name="PME_Trig1992" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xrMSQEr4EemA4_kRIR1Qqg" name="PME_Trig1993" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xrPVkEr4EemA4_kRIR1Qqg" name="PME_Trig1994" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xrSY4Er4EemA4_kRIR1Qqg" name="PME_Trig1995" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrTnAEr4EemA4_kRIR1Qqg" name="PME_Trig1996" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xrU1IEr4EemA4_kRIR1Qqg" name="PME_Trig1997" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xrZGkEr4EemA4_kRIR1Qqg" name="PME_Trig1998" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xrbi0Er4EemA4_kRIR1Qqg" name="PME_Trig1999" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xrcw8Er4EemA4_kRIR1Qqg" name="PME_Trig2000" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrdYAEr4EemA4_kRIR1Qqg" name="PME_Trig2001" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xremIEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__Ready__2002" source="_tR2GgErDEem2BZRQc2M93A" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtD6gEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__Ready&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__Ready&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xrhCYEr4EemA4_kRIR1Qqg" name="PME_Trig2003" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrl64Er4EemA4_kRIR1Qqg" name="PME_Trig2004" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xrnJAEr4EemA4_kRIR1Qqg" name="PME_Trig2005" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xroXIEr4EemA4_kRIR1Qqg" name="PME_Trig2006" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xrqzYEr4EemA4_kRIR1Qqg" name="PME_Trig2007" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrvE0Er4EemA4_kRIR1Qqg" name="PME_Trig2008" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xrwS8Er4EemA4_kRIR1Qqg" name="PME_Trig2009" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrw6AEr4EemA4_kRIR1Qqg" name="PME_Trig2010" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xryIIEr4EemA4_kRIR1Qqg" name="PME_Trig2011" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xrzWQEr4EemA4_kRIR1Qqg" name="PME_Trig2012" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xr3AoEr4EemA4_kRIR1Qqg" name="PME_Trig2013" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xr6D8Er4EemA4_kRIR1Qqg" name="PME_Trig2014" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xr7SEEr4EemA4_kRIR1Qqg" name="PME_Trig2015" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xr8gMEr4EemA4_kRIR1Qqg" name="PME_Trig2016" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xr9uUEr4EemA4_kRIR1Qqg" name="PME_Trig2017" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xsCm0Er4EemA4_kRIR1Qqg" name="PME_Trig2018" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xsEcAEr4EemA4_kRIR1Qqg" name="PME_Trig2019" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xsFqIEr4EemA4_kRIR1Qqg" name="PME_Trig2020" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xsG4QEr4EemA4_kRIR1Qqg" name="PME_Trig2021" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsJUgEr4EemA4_kRIR1Qqg" name="PME_Trig2022" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xsO0EEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__StarupTransition__2023" source="_tR04YErDEem2BZRQc2M93A" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtTLEEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_xsPbIEr4EemA4_kRIR1Qqg" name="PME_Trig2024" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsQpQEr4EemA4_kRIR1Qqg" name="PME_Trig2025" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xsR3YEr4EemA4_kRIR1Qqg" name="PME_Trig2026" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsUToEr4EemA4_kRIR1Qqg" name="PME_Trig2027" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xsZMIEr4EemA4_kRIR1Qqg" name="PME_Trig2028" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsZzMEr4EemA4_kRIR1Qqg" name="PME_Trig2029" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xsbBUEr4EemA4_kRIR1Qqg" name="PME_Trig2030" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsersEr4EemA4_kRIR1Qqg" name="PME_Trig2031" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xsi9IEr4EemA4_kRIR1Qqg" name="PME_Trig2032" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xsjkMEr4EemA4_kRIR1Qqg" name="PME_Trig2033" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xskyUEr4EemA4_kRIR1Qqg" name="PME_Trig2034" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_xslZYEr4EemA4_kRIR1Qqg" name="PME_Trig2035" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xsocsEr4EemA4_kRIR1Qqg" name="PME_Trig2036" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_xssuIEr4EemA4_kRIR1Qqg" name="PME_Trig2037" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xst8QEr4EemA4_kRIR1Qqg" name="PME_Trig2038" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_xsvKYEr4EemA4_kRIR1Qqg" name="PME_Trig2039" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_xsw_kEr4EemA4_kRIR1Qqg" name="PME_Trig2040" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_xs14EEr4EemA4_kRIR1Qqg" name="PME_Trig2041" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_xs3tQEr4EemA4_kRIR1Qqg" name="PME_Trig2042" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_xs4UUEr4EemA4_kRIR1Qqg" name="PME_Trig2043" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_xs7-sEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__StarupTransition__2044" guard="_xtW1cUr4EemA4_kRIR1Qqg" source="_xqjZEEr4EemA4_kRIR1Qqg" target="_tRycIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xtW1cUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2052">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xtW1cEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2052">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,&quot;Debug__B__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xs8lwEr4EemA4_kRIR1Qqg" name="To__Debug__A__En__Ready__2045" guard="_xtWOY0r4EemA4_kRIR1Qqg" source="_xqjZEEr4EemA4_kRIR1Qqg" target="_tR2GgErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xtWOY0r4EemA4_kRIR1Qqg" name="PME_checkDecesion2051">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xtWOYkr4EemA4_kRIR1Qqg" name="PME_checkDecesion2051">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__Ready__2045&quot;,&quot;Debug__A__En__Ready&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xs9M0Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__StarupTransition__2046" guard="_xtVAQUr4EemA4_kRIR1Qqg" source="_xqjZEEr4EemA4_kRIR1Qqg" target="_tR04YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_xtVAQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2049">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xtVAQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2049">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,&quot;Debug__A__Ac__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_xtA3MEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2047" source="_xqgVwUr4EemA4_kRIR1Qqg" target="_xqjZEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_xtCsYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__Ac__StarupTransition&quot;,&quot;To__Debug__A__Ac__StarupTransition__2046&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__C__StarupTransition&quot;,&quot;To__Parent__ClientStateMachine__2048&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__A__En__Ready&quot;,&quot;To__Debug__A__En__Ready__2045&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__StarupTransition&quot;,&quot;Debug__B__Ac__StarupTransition&quot;,&quot;To__Debug__B__Ac__StarupTransition__2044&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__StarupTransition&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_xtA3MUr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2048" guard="_xtWOYUr4EemA4_kRIR1Qqg" source="_xqjZEEr4EemA4_kRIR1Qqg" target="_xqhj4Er4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_xtWOYUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2050">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_xtWOYEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2050">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2048&quot;,&quot;Debug__C__StarupTransition&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tRycIErDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tRycIUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StandBY&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,1) or Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tR-CUUrDEem2BZRQc2M93A" name="Debug__B__Ac__StarupTransition__918">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__B__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR04YErDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR04YUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;StarupTransition&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSBssUrDEem2BZRQc2M93A" name="Debug__A__Ac__StarupTransition__919">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__Ac__StarupTransition&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tR2GgErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tR2tkErDEem2BZRQc2M93A" name="Debug__A__En__Ready">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;Ready&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tSEI8ErDEem2BZRQc2M93A" name="Debug__A__En__Ready__920">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__StarupTransition::Region1::Debug__A__En__Ready&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xqjZEEr4EemA4_kRIR1Qqg" name="DecesionPoint__1976" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_xqoRkEr4EemA4_kRIR1Qqg" name="Init__State__1977"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tSQ9QErDEem2BZRQc2M93A" name="Debug__Path__reqFlowInit" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tSRkUUrDEem2BZRQc2M93A" name="Debug__C__reqFlowInit">
              <connectionPoint xmi:id="_tSSycUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tSUAkErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_x8HqMEr4EemA4_kRIR1Qqg" name="From__Parent__2474" kind="entryPoint"/>
              <connectionPoint xmi:id="_x8I4UEr4EemA4_kRIR1Qqg" name="To__Parent__2476" kind="exitPoint"/>
              <region xmi:id="_tSRkUkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tSu3UkrDEem2BZRQc2M93A" name="Debug__En__getMasterName" source="_tSr0AErDEem2BZRQc2M93A" target="_tStCIErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tSveYUrDEem2BZRQc2M93A" name="GetMasterNameEntry" visibility="public" isReentrant="true">
                    <language>C++</language>
                    <body>    std::cout&lt;&lt;this->getName()&lt;&lt;this->getIndex()&lt;&lt;&quot;:  Request Master Information from ENV\n&quot;;
    ConfigComm.QueryConfig().send();

Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__En__getMasterName&quot;,(char *)&quot;Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSveYErDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_tSwFcErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit" source="_tStCIErDEem2BZRQc2M93A" target="_tSUAkErDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tS_WAErDEem2BZRQc2M93A" name="Debug__end__trans__reqFlowInit__954">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__end__trans__reqFlowInit&quot;,(char *)&quot;Debug__A__En__getMasterName&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tSwFcUrDEem2BZRQc2M93A" name="Debug__Exec" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x8OX4Er4EemA4_kRIR1Qqg" name="Trans__ex2480" source="_tSUAkErDEem2BZRQc2M93A" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x-aJMEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x8PmAEr4EemA4_kRIR1Qqg" name="Trans__en2481" source="_tSSycUrDEem2BZRQc2M93A" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x-j6MEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x8Q0IEr4EemA4_kRIR1Qqg" name="Trans__Init__State__24792482" source="_x8KtgEr4EemA4_kRIR1Qqg" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x-NU4Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2479&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2479&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2479&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2479&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x8TQYEr4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__reqFlowInit__2483" source="_tSr0AErDEem2BZRQc2M93A" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x-tEIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x8T3cEr4EemA4_kRIR1Qqg" name="PME_Trig2484" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8VFkEr4EemA4_kRIR1Qqg" name="PME_Trig2485" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x8WTsEr4EemA4_kRIR1Qqg" name="PME_Trig2486" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8caUEr4EemA4_kRIR1Qqg" name="PME_Trig2487" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x8docEr4EemA4_kRIR1Qqg" name="PME_Trig2488" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8e2kEr4EemA4_kRIR1Qqg" name="PME_Trig2489" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x8hS0Er4EemA4_kRIR1Qqg" name="PME_Trig2490" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8mLUEr4EemA4_kRIR1Qqg" name="PME_Trig2491" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x8nZcEr4EemA4_kRIR1Qqg" name="PME_Trig2492" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8oAgEr4EemA4_kRIR1Qqg" name="PME_Trig2493" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x8pOoEr4EemA4_kRIR1Qqg" name="PME_Trig2494" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x8tgEEr4EemA4_kRIR1Qqg" name="PME_Trig2495" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x8xKcEr4EemA4_kRIR1Qqg" name="PME_Trig2496" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x8yYkEr4EemA4_kRIR1Qqg" name="PME_Trig2497" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x8zmsEr4EemA4_kRIR1Qqg" name="PME_Trig2498" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x85GQEr4EemA4_kRIR1Qqg" name="PME_Trig2499" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x867cEr4EemA4_kRIR1Qqg" name="PME_Trig2500" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x88JkEr4EemA4_kRIR1Qqg" name="PME_Trig2501" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x89XsEr4EemA4_kRIR1Qqg" name="PME_Trig2502" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9AbAEr4EemA4_kRIR1Qqg" name="PME_Trig2503" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x9FTgEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__getMasterName__2504" source="_tStCIErDEem2BZRQc2M93A" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x906YEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__getMasterName&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__getMasterName&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x9F6kEr4EemA4_kRIR1Qqg" name="PME_Trig2505" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9HIsEr4EemA4_kRIR1Qqg" name="PME_Trig2506" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x9IW0Er4EemA4_kRIR1Qqg" name="PME_Trig2507" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9MoQEr4EemA4_kRIR1Qqg" name="PME_Trig2508" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x9PrkEr4EemA4_kRIR1Qqg" name="PME_Trig2509" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9QSoEr4EemA4_kRIR1Qqg" name="PME_Trig2510" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x9RgwEr4EemA4_kRIR1Qqg" name="PME_Trig2511" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9Su4Er4EemA4_kRIR1Qqg" name="PME_Trig2512" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x9WZQEr4EemA4_kRIR1Qqg" name="PME_Trig2513" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9ZckEr4EemA4_kRIR1Qqg" name="PME_Trig2514" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x9aqsEr4EemA4_kRIR1Qqg" name="PME_Trig2515" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x9bRwEr4EemA4_kRIR1Qqg" name="PME_Trig2516" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x9cf4Er4EemA4_kRIR1Qqg" name="PME_Trig2517" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x9gxUEr4EemA4_kRIR1Qqg" name="PME_Trig2518" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9j0oEr4EemA4_kRIR1Qqg" name="PME_Trig2519" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x9kbsEr4EemA4_kRIR1Qqg" name="PME_Trig2520" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x9lp0Er4EemA4_kRIR1Qqg" name="PME_Trig2521" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x9m38Er4EemA4_kRIR1Qqg" name="PME_Trig2522" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x9qiUEr4EemA4_kRIR1Qqg" name="PME_Trig2523" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x9uMsEr4EemA4_kRIR1Qqg" name="PME_Trig2524" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x9va0Er4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__reqFlowInit__2525" guard="_x-3cMUr4EemA4_kRIR1Qqg" source="_x8JfYEr4EemA4_kRIR1Qqg" target="_tSr0AErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x-3cMUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2531">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x-3cMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2531">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x9wB4Er4EemA4_kRIR1Qqg" name="To__Debug__A__En__getMasterName__2526" guard="_x-zx0Ur4EemA4_kRIR1Qqg" source="_x8JfYEr4EemA4_kRIR1Qqg" target="_tStCIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x-zx0Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion2530">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x-zx0Er4EemA4_kRIR1Qqg" name="PME_checkDecesion2530">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__getMasterName__2526&quot;,&quot;Debug__A__En__getMasterName&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x9wo8Er4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2527" source="_x8HqMEr4EemA4_kRIR1Qqg" target="_x8JfYEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x9_5gEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__C__reqFlowInit&quot;,&quot;To__Parent__ClientStateMachine__2528&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__En__getMasterName&quot;,&quot;To__Debug__A__En__getMasterName__2526&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__reqFlowInit&quot;,&quot;Debug__A__Ac__reqFlowInit&quot;,&quot;To__Debug__A__Ac__reqFlowInit__2525&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__reqFlowInit&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x9wo8Ur4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2528" guard="_x-xVkUr4EemA4_kRIR1Qqg" source="_x8JfYEr4EemA4_kRIR1Qqg" target="_x8I4UEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x-xVkUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2529">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x-xVkEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2529">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2528&quot;,&quot;Debug__C__reqFlowInit&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tSr0AErDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tSr0AUrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;reqFlowInit&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS098UrDEem2BZRQc2M93A" name="Debug__A__Ac__reqFlowInit__944">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__Ac__reqFlowInit&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tStCIErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tStCIUrDEem2BZRQc2M93A" name="Debug__A__En__getMasterName">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;getMasterName&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tS3aMErDEem2BZRQc2M93A" name="Debug__A__En__getMasterName__945">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__reqFlowInit::Region1::Debug__A__En__getMasterName&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x8JfYEr4EemA4_kRIR1Qqg" name="DecesionPoint__2478" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x8KtgEr4EemA4_kRIR1Qqg" name="Init__State__2479"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tTEOgUrDEem2BZRQc2M93A" name="Debug__C__NoResponseFromServer">
              <connectionPoint xmi:id="_tTGqwErDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_x647IUr4EemA4_kRIR1Qqg" name="From__Parent__2438" kind="entryPoint"/>
              <connectionPoint xmi:id="_x66JQEr4EemA4_kRIR1Qqg" name="To__Parent__2440" kind="exitPoint"/>
              <region xmi:id="_tTEOgkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_x7DTMEr4EemA4_kRIR1Qqg" name="Trans__ex2444" source="_tTGqwErDEem2BZRQc2M93A" target="_x69zoEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x75AsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2470&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2468&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x7DTMUr4EemA4_kRIR1Qqg" name="Trans__Init__State__24432445" source="_x7CFEEr4EemA4_kRIR1Qqg" target="_x69zoEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x7_HUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__2443&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2470&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__2443&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2468&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__2443&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x7EhUEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__WaitingForReply__2446" source="_tTTfEErDEem2BZRQc2M93A" target="_x69zoEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x795MEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2470&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2468&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitingForReply&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_x7G9kEr4EemA4_kRIR1Qqg" name="PME_Trig2447" event="_OMBm8AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7Kn8Er4EemA4_kRIR1Qqg" name="PME_Trig2448" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x7L2EEr4EemA4_kRIR1Qqg" name="PME_Trig2449" event="_mLvIYAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7MdIEr4EemA4_kRIR1Qqg" name="PME_Trig2450" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x7NrQEr4EemA4_kRIR1Qqg" name="PME_Trig2451" event="_GvF7UAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7R8sEr4EemA4_kRIR1Qqg" name="PME_Trig2452" port="_8sGy4AovEeaGqPUk-4V4qQ">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x7VAAEr4EemA4_kRIR1Qqg" name="PME_Trig2453" event="_Iv3CQAl4Eea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7WOIEr4EemA4_kRIR1Qqg" name="PME_Trig2454" port="_iLeRcAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x7XcQEr4EemA4_kRIR1Qqg" name="PME_Trig2455" event="_MnkAAAgtEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7YqYEr4EemA4_kRIR1Qqg" name="PME_Trig2456" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x7eJ8Er4EemA4_kRIR1Qqg" name="PME_Trig2457" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_xkWqcEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_x7fYEEr4EemA4_kRIR1Qqg" name="PME_Trig2458" port="_oWg3YAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x7gmMEr4EemA4_kRIR1Qqg" name="PME_Trig2459" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_x7h0UEr4EemA4_kRIR1Qqg" name="PME_Trig2460" event="_MloQ4AguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7ibYEr4EemA4_kRIR1Qqg" name="PME_Trig2461" event="_P4-6EAnFEeaGqPUk-4V4qQ" port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
                  <trigger xmi:id="_x7ms0Er4EemA4_kRIR1Qqg" name="PME_Trig2462" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_x7pwIEr4EemA4_kRIR1Qqg" name="PME_Trig2463" port="_tP9SkAmuEea_md0mpENoqg">
                    <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
                  </trigger>
                  <trigger xmi:id="_x7qXMEr4EemA4_kRIR1Qqg" name="PME_Trig2464" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_x7rlUEr4EemA4_kRIR1Qqg" name="PME_Trig2465" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_x7szcEr4EemA4_kRIR1Qqg" name="PME_Trig2466" event="_QoLgUAguEea_md0mpENoqg" port="_g3nG4AgvEea_md0mpENoqg"/>
                  <trigger xmi:id="_x7xr8Er4EemA4_kRIR1Qqg" name="PME_Trig2467" port="_swu9gErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                </transition>
                <transition xmi:id="_x70vQEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__WaitingForReply__2468" guard="_x8CxsUr4EemA4_kRIR1Qqg" source="_x69zoEr4EemA4_kRIR1Qqg" target="_tTTfEErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_x8CxsUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2472">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x8CxsEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2472">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitingForReply__2468&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_x71WUEr4EemA4_kRIR1Qqg" name="From__Parnet__ClientStateMachine__2469" source="_x647IUr4EemA4_kRIR1Qqg" target="_x69zoEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_x8AVcEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__C__NoResponseFromServer&quot;,&quot;To__Parent__ClientStateMachine__2470&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__NoResponseFromServer&quot;,&quot;Debug__B__Ex__WaitingForReply&quot;,&quot;To__Debug__B__Ex__WaitingForReply__2468&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__NoResponseFromServer&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_x719YEr4EemA4_kRIR1Qqg" name="To__Parent__ClientStateMachine__2470" guard="_x8A8gUr4EemA4_kRIR1Qqg" source="_x69zoEr4EemA4_kRIR1Qqg" target="_x66JQEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_x8A8gUr4EemA4_kRIR1Qqg" name="PME_checkDecesion2471">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_x8A8gEr4EemA4_kRIR1Qqg" name="PME_checkDecesion2471">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__ClientStateMachine__2470&quot;,&quot;Debug__C__NoResponseFromServer&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tTTfEErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tTTfEUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitingForReply&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tTY-oUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitingForReply__969">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Hosts::Client::ClientStateMachine::Region1::Debug__C__NoResponseFromServer::Region1::Debug__B__Ex__WaitingForReply&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x69zoEr4EemA4_kRIR1Qqg" name="DecesionPoint__2442" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_x7CFEEr4EemA4_kRIR1Qqg" name="Init__State__2443"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tT_bkErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_xmqXkEr4EemA4_kRIR1Qqg" name="DecesionPoint__1873" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swtvYErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swtIUErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Server1Comm.recallAll();
ConfigComm.recallAll();
Server2Comm.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sw_cMUrDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_sw_cMErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxFi0ErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_sxDGkErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sxYdwErDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_sxOswErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xlf58Er4EemA4_kRIR1Qqg" name="loadHeap" specification="_xler0Er4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xlkycUr4EemA4_kRIR1Qqg" name="unLoadHeap" specification="_xlkycEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xl4UcUr4EemA4_kRIR1Qqg" name="sendMessage" specification="_xl4UcEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;ConfigComm&quot;) {
  if(message.signal==&quot;QueryConfig&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryConfig().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryMasterId&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryMasterId().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryServerRole&quot;) {
   if(message.payload.size()==1){
    ConfigComm.QueryServerRole( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;ServerName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;QueryReplicationMode&quot;) {
   if(message.payload.size()==0){
    ConfigComm.QueryReplicationMode().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;IAMMaster&quot;) {
   if(message.payload.size()==1){
    ConfigComm.IAMMaster( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;MasterName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server1Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server1Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;Server2Comm&quot;) {
  if(message.signal==&quot;Request&quot;) {
   if(message.payload.size()==1){
    Server2Comm.Request( boost::any_cast&lt;int>(message.payload[&quot;ServiceID&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xl8l4Er4EemA4_kRIR1Qqg" name="sendInternalMessage" specification="_xl7-0Er4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_xmgmkUr4EemA4_kRIR1Qqg" name="initForPMD" specification="_xmgmkEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Client::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Client::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryConfig&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryMasterId&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryServerRole&quot;,{ {&quot;ServerName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;QueryReplicationMode&quot;,{});
this->execContext.addOutPutMessages(&quot;ConfigComm&quot;,&quot;IAMMaster&quot;,{ {&quot;MasterName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;Server1Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;Server2Comm&quot;,&quot;Request&quot;,{ {&quot;ServiceID&quot;,&quot;Integer&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyReplicationMode&quot;,{ {&quot;RunningMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyServerRole&quot;,{ {&quot;ServerRole&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;Shutdown&quot;,{});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;StartUp&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyConfig&quot;,{ {&quot;config&quot;,&quot;SystemConfig&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;ReplyMasterId&quot;,{ {&quot;MasterId&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;ConfigComm&quot;,&quot;BIT&quot;,{});
this->execContext.addInputMessages(&quot;RequestTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ConfigTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;ResponseTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;Server1Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Server2Comm&quot;,&quot;Reply&quot;,{ {&quot;Result&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;Timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForClient&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swtIUErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swtvYErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sw_cMErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_sw_cMUrDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_sxDGkErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_sxFi0ErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxDtoErDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxEUsErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxE7wErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_sxOswErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_sxYdwErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_sxPT0ErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxQh8ErDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxRwEUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxS-MUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxTlQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxUzYUrDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxWBgUrDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxXPoErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_sxX2sUrDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_xler0Er4EemA4_kRIR1Qqg" name="loadHeap" visibility="private" method="_xlf58Er4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_xlkycEr4EemA4_kRIR1Qqg" name="unLoadHeap" visibility="private" method="_xlkycUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_xl4UcEr4EemA4_kRIR1Qqg" name="sendMessage" visibility="private" method="_xl4UcUr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_xl47gEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_xl5ikEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_xl7-0Er4EemA4_kRIR1Qqg" name="sendInternalMessage" visibility="private" method="_xl8l4Er4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_xl_CIEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_xmCFcEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_xmgmkEr4EemA4_kRIR1Qqg" name="initForPMD" visibility="private" method="_xmgmkUr4EemA4_kRIR1Qqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_yqOfEAxwEeaB2MeL96fedA" memberEnd="_yqPtMgxwEeaB2MeL96fedA _yqQUQAxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_yqPtMAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_yqPtMQxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_yqQUQAxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_yqOfEAxwEeaB2MeL96fedA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_z8f_QAxwEeaB2MeL96fedA" memberEnd="_z8hNYQxwEeaB2MeL96fedA _z8hNYgxwEeaB2MeL96fedA">
        <eAnnotations xmi:id="_z8gmUAxwEeaB2MeL96fedA" source="org.eclipse.papyrus">
          <details xmi:id="_z8hNYAxwEeaB2MeL96fedA" key="nature" value="UML_Nature"/>
        </eAnnotations>
        <ownedEnd xmi:id="_z8hNYgxwEeaB2MeL96fedA" name="host" type="_4_oYIAghEea_md0mpENoqg" association="_z8f_QAxwEeaB2MeL96fedA"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_OiTE0AghEea_md0mpENoqg" name="Utility">
      <packagedElement xmi:type="uml:Class" xmi:id="_JesyoAgiEea_md0mpENoqg" name="HostInfo" visibility="public">
        <ownedAttribute xmi:id="_l4sHAAgiEea_md0mpENoqg" name="hostType" type="_TE8UIAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_6EOE0AglEea_md0mpENoqg" name="status" type="_gf1EkAglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_TE8UIAgiEea_md0mpENoqg" name="HostType">
        <ownedLiteral xmi:id="_Y-NNkAgiEea_md0mpENoqg" name="CLI"/>
        <ownedLiteral xmi:id="_aJOPMAgiEea_md0mpENoqg" name="SRV"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_gf1EkAglEea_md0mpENoqg" name="HostStatus" visibility="public">
        <ownedLiteral xmi:id="_ygyIkAglEea_md0mpENoqg" name="Active"/>
        <ownedLiteral xmi:id="_0Co84AglEea_md0mpENoqg" name="Deactive"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_-VDn4AglEea_md0mpENoqg" name="ServerRole">
        <ownedLiteral xmi:id="_GJYf0AgmEea_md0mpENoqg" name="Master"/>
        <ownedLiteral xmi:id="_HZTPkAgmEea_md0mpENoqg" name="Slave"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_T635wAgmEea_md0mpENoqg" name="ServerInfo">
        <generalization xmi:id="_jCuQYAgrEea_md0mpENoqg" general="_JesyoAgiEea_md0mpENoqg"/>
        <ownedAttribute xmi:id="_Y5vngAgmEea_md0mpENoqg" name="role" type="_-VDn4AglEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_v04e0AgsEea_md0mpENoqg" name="ConfigProtocol">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_v000cAgsEea_md0mpENoqg" name="ConfigProtocol">
          <interfaceRealization xmi:id="_v0_zkAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v09XUAgsEea_md0mpENoqg" contract="_v09XUAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_v1SHcAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg" contract="_v1PrMAgsEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v09XUAgsEea_md0mpENoqg" name="ConfigProtocol">
          <ownedOperation xmi:id="_Mnix4AgtEea_md0mpENoqg" name="ReplyReplicationMode">
            <ownedParameter xmi:id="_Mnix4QgtEea_md0mpENoqg" name="RunningMode">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_GvEtMAguEea_md0mpENoqg" name="ReplyServerRole">
            <ownedParameter xmi:id="_GvEtMQguEea_md0mpENoqg" name="ServerRole">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_MlnCwAguEea_md0mpENoqg" name="StartUp">
            <ownedParameter xmi:id="_oGfrwAlpEea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_OMA_4AguEea_md0mpENoqg" name="Shutdown"/>
          <ownedOperation xmi:id="_QoJEEAguEea_md0mpENoqg" name="BIT"/>
          <ownedOperation xmi:id="_mLtTMAguEea_md0mpENoqg" name="ReplyMasterId">
            <ownedParameter xmi:id="_s-1M0AguEea_md0mpENoqg" name="MasterId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_Iv10IAl4Eea_md0mpENoqg" name="ReplyConfig">
            <ownedParameter xmi:id="_Iv10IQl4Eea_md0mpENoqg" name="config" type="_Y1UDYAg6Eea_md0mpENoqg"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1I9gAgsEea_md0mpENoqg" name="ConfigProtocol~">
          <ownedOperation xmi:id="_AW3DYAgtEea_md0mpENoqg" name="QueryReplicationMode"/>
          <ownedOperation xmi:id="_yDGNYAgtEea_md0mpENoqg" name="QueryServerRole">
            <ownedParameter xmi:id="_yDGNYQgtEea_md0mpENoqg" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_hZgIcAguEea_md0mpENoqg" name="QueryMasterId"/>
          <ownedOperation xmi:id="_BB20wAl4Eea_md0mpENoqg" name="QueryConfig"/>
          <ownedOperation xmi:id="_xu1hMAl4Eea_md0mpENoqg" name="IAMMaster">
            <ownedParameter xmi:id="_xu1hMQl4Eea_md0mpENoqg" name="MasterName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1MA0AgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1I9gAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_v1N2AAgsEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_v1PrMAgsEea_md0mpENoqg" name="ConfigProtocolIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_v1SugAgsEea_md0mpENoqg" client="_v000cAgsEea_md0mpENoqg" supplier="_v1PrMAgsEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_AW3qcAgtEea_md0mpENoqg" operation="_AW3DYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MnkAAAgtEea_md0mpENoqg" operation="_Mnix4AgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_yDG0cAgtEea_md0mpENoqg" operation="_yDGNYAgtEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_GvF7UAguEea_md0mpENoqg" operation="_GvEtMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_MloQ4AguEea_md0mpENoqg" operation="_MlnCwAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_OMBm8AguEea_md0mpENoqg" operation="_OMA_4AguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_QoLgUAguEea_md0mpENoqg" operation="_QoJEEAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_hZh9oAguEea_md0mpENoqg" operation="_hZgIcAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_mLvIYAguEea_md0mpENoqg" operation="_mLtTMAguEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_BB3b0Al4Eea_md0mpENoqg" operation="_BB20wAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_Iv3CQAl4Eea_md0mpENoqg" operation="_Iv10IAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xu1hMgl4Eea_md0mpENoqg" operation="_xu1hMAl4Eea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_RLyKYAgzEea_md0mpENoqg" name="EchoCapsule" classifierBehavior="_WlNQsAg0Eea_md0mpENoqg" isActive="true">
        <ownedAttribute xmi:type="uml:Port" xmi:id="_PdYSYAg0Eea_md0mpENoqg" name="Echo" visibility="public" type="_nk_BAAgzEea_md0mpENoqg" isOrdered="true" aggregation="composite" isBehavior="true">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_WNSukAm2Eea_md0mpENoqg" value="8"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_WOSNEAm2Eea_md0mpENoqg" value="8"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_swEPIErDEem2BZRQc2M93A" name="extComm" visibility="protected" isBehavior="true" isConjugated="true" isService="false">
          <type xmi:type="uml:Collaboration" href="../CommGateWay/model.uml#_KS0icDCLEeaxYMPe_sHEiw"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_swFdQUrDEem2BZRQc2M93A" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_swGEUErDEem2BZRQc2M93A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swS4oErDEem2BZRQc2M93A" name="Debug__flag">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swTfsErDEem2BZRQc2M93A" name="Debug__variablesData">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swUt0ErDEem2BZRQc2M93A" name="Debug__event">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_swXKEErDEem2BZRQc2M93A" name="Debug__SRO">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Port" xmi:id="_wSOUMEr4EemA4_kRIR1Qqg" name="dbgPortForEchoCapsule" visibility="protected" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isService="false">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wSOUMUr4EemA4_kRIR1Qqg" value="1"/>
          <upperValue xmi:type="uml:LiteralInteger" xmi:id="_wSO7QEr4EemA4_kRIR1Qqg" value="1"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_WlNQsAg0Eea_md0mpENoqg" name="StateMachine1">
          <region xmi:id="_abLcsAg0Eea_md0mpENoqg" name="Region1">
            <transition xmi:id="_tJ6SgErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ6SgkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__varChange__692">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tJ6SgUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ65kErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ65kkrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__setBreakPoint__693">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ65kUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ7goErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ7gokrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__remBreakPoint__694">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ7goUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8HsErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ8uwErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__viewBreakPoints__695">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ8HsUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ8uwUrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ9V0UrDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgSetExecMode__696">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tJ9V0ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tJ984ErDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg" source="_tJwhgErDEem2BZRQc2M93A" target="_tJwhgErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tJ984krDEem2BZRQc2M93A" name="Debug__DoEcho__dbg__dbgDeferMsg__697">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tJ984UrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKln8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8" source="_tLME4ErDEem2BZRQc2M93A" target="_tKgvcErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKln8UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__713">
                <language>C++</language>
                <body>if (this->Debug__SRO.getExecMode()==Stepping){
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;BeSlave&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;NokeepAlive&quot;,&quot;TryBeMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;KeepAlive&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Slave&quot;,&quot;backtoslave&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServerFaliure&quot;,&quot;Failure&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;BeMaster&quot;,&quot;BeingMaster&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;StandBy&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;init&quot;,&quot;&quot;,&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;server2Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;Server1Failure&quot;,&quot;Running&quot;,&quot;IAmAlive&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Initial1&quot;,&quot;&quot;,&quot;RunAsSlave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;ReadConfig&quot;,&quot;configLoaded&quot;,&quot;Config&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;MasterAnnouncment&quot;,&quot;Running&quot;,&quot;IAMMaster&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;ActiveMode&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsSlave&quot;,&quot;KeepAliveMsg&quot;,&quot;RunAsSlave&quot;,&quot;IAmAlive&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;ExitPoint1&quot;,&quot;&quot;,&quot;BeMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;StandBy&quot;,&quot;&quot;,&quot;CheckConfig&quot;,&quot;StartUp&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;Running&quot;,&quot;QueryConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;ConfigNOK&quot;,&quot;ConfigFailure&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;purgeotherMessage&quot;,&quot;Failure&quot;,&quot;*&quot;,&quot;FailOver&quot;);
Debug__SRO.addTransitionsFromState(&quot;CheckConfig&quot;,&quot;initTimer&quot;,&quot;RunAsMaster&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Failure&quot;,&quot;Recover&quot;,&quot;Choice1&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;MasterAnnounce&quot;,&quot;RunAsMaster&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;ConfigFailure&quot;,&quot;RetryConfig&quot;,&quot;ReadConfig&quot;,&quot;timeout&quot;,&quot;Timing&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;CheckNoMaster&quot;,&quot;ExitPoint1&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;Config&quot;,&quot;configOK&quot;,&quot;Running&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;WaitForEcho&quot;,&quot;DoEcho&quot;,&quot;WaitForEcho&quot;,&quot;Echo&quot;,&quot;Echo&quot;);
Debug__SRO.addTransitionsFromState(&quot;Init&quot;,&quot;&quot;,&quot;ReadConfig&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;TryBeMaster&quot;,&quot;ReplyConfig&quot;,&quot;Choice2&quot;,&quot;ReplyConfig&quot;,&quot;ConfigProtocol&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice2&quot;,&quot;backtoslave1&quot;,&quot;Slave&quot;,&quot;&quot;,&quot;&quot;);
Debug__SRO.addTransitionsFromState(&quot;RunAsMaster&quot;,&quot;ServiceRequest&quot;,&quot;RunAsMaster&quot;,&quot;Request&quot;,&quot;Services&quot;);
Debug__SRO.addTransitionsFromState(&quot;Choice1&quot;,&quot;PassiveMode&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;);
std::cout&lt;&lt;this->getName()&lt;&lt;&quot;: Connection with debugger is in progress\n&quot;;
char  tempS[256];
sprintf(tempS,&quot;%s%d&quot;,this->getName(),(int)this->getIndex());
extComm.registerToControl(tempS).send();
Debug__sendEvent(debugEvents::DEBUG,debugEvents::REGISTER,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *) &quot;&quot;,(char *) &quot;&quot;,(char *)&quot;&quot;,(char *) &quot;&quot;);
}
</body>
              </effect>
              <trigger xmi:id="_tLOhIErDEem2BZRQc2M93A" name="ConnectionEstablished" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_PQtAwOzeEeSRtqCWFwOf8g"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKndIErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S" guard="_tKoEMUrDEem2BZRQc2M93A" source="_tKgvcErDEem2BZRQc2M93A" target="_tKjLsUrDEem2BZRQc2M93A">
              <ownedRule xmi:id="_tKoEMUrDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_tKoEMErDEem2BZRQc2M93A" name="Debug__Guardinit__WaitForEcho__8">
                  <language>C++</language>
                  <body>return Debug__SRO.checkDebug(&quot;init&quot;,&quot;&quot;,&quot;&quot;,1,TransitionEffectBreakPoint,0);
</body>
                </specification>
              </ownedRule>
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKorQErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__S__715">
                <language>C++</language>
                <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__init__WaitForEcho__8__S&quot;,(char *)&quot;Debug__Path__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;&quot;);
</body>
              </effect>
            </transition>
            <transition xmi:id="_tKsVoErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKs8sErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__varChange__718">
                <language>C++</language>
                <body>char varName1[256];
char varValue1[1024];
sprintf(varName1,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
sprintf(varValue1,&quot;%s&quot;,(*(const char * *)msg->getParam( 1 )));
this->Debug__variablesChange(varName1,varValue1);
</body>
              </effect>
              <trigger xmi:id="_tKsVoUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKtjwErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKtjwkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__setBreakPoint__719">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.addBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKtjwUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKuK0ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKux4UrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__remBreakPoint__720">
                <language>C++</language>
                <body>char loc[1024];
sprintf(loc,&quot;%s&quot;,(*(const char * *)msg->getParam( 0 )));
this->Debug__SRO.remBreakPoint(loc,(BreakPointType)( *(int *)msg->getParam( 1 ) ),( *(int *)msg->getParam( 2 ) ));
std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKux4ErDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKvY8ErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKvY8krDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__viewBreakPoints__721">
                <language>C++</language>
                <body>std::cout&lt;&lt;this->Debug__SRO.serializeBreakPoint()&lt;&lt;&quot;n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKvY8UrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwAAErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwAAkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgSetExecMode__722">
                <language>C++</language>
                <body>this->Debug__SRO.setExecMode((ExecMode)( *(int *)msg->getParam( 0 ) ));
</body>
              </effect>
              <trigger xmi:id="_tKwAAUrDEem2BZRQc2M93A" name="Debug__MSG" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
            </transition>
            <transition xmi:id="_tKwnEErDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg" source="_tKh9kUrDEem2BZRQc2M93A" target="_tKh9kUrDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tKwnEkrDEem2BZRQc2M93A" name="Debug__init__WaitForEcho__8__dbg__dbgDeferMsg__723">
                <language>C++</language>
                <body>msg->defer();
std::cout&lt;&lt;&quot;A message defered&quot;&lt;&lt;&quot;\n&quot;;
</body>
              </effect>
              <trigger xmi:id="_tKwnEUrDEem2BZRQc2M93A" name="Debug__MSG" port="_PdYSYAg0Eea_md0mpENoqg">
                <event xmi:type="uml:AnyReceiveEvent" href="../CommGateWay/model.uml#_KTIEcDCLEeaxYMPe_sHEiw"/>
              </trigger>
            </transition>
            <transition xmi:id="_tLNTAErDEem2BZRQc2M93A" name="Debug__InitDebug" source="_bHyrEAg0Eea_md0mpENoqg" target="_tLME4ErDEem2BZRQc2M93A">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLNTAUrDEem2BZRQc2M93A" name="DebugCheck">
                <language>C++</language>
                <body>initForPMD();
std::cout&lt;&lt;this->getName()&lt;&lt;&quot; : is Starting\n&quot;;
    this->Debug__SRO.setExecMode(Stepping);
</body>
              </effect>
            </transition>
            <transition xmi:id="_wT8ygEr4EemA4_kRIR1Qqg" name="624" source="_tKgvcErDEem2BZRQc2M93A" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wX6sgEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__Path__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__Path__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wT9ZkEr4EemA4_kRIR1Qqg" name="From__Debug__InitState__625" source="_tLME4ErDEem2BZRQc2M93A" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXz-0Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__InitState&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__InitState&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
              <trigger xmi:id="_wT-nsEr4EemA4_kRIR1Qqg" name="PME_Trig626" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
              </trigger>
              <trigger xmi:id="_wUAc4Er4EemA4_kRIR1Qqg" name="PME_Trig627" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wUEHQEr4EemA4_kRIR1Qqg" name="PME_Trig628" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wUI_wEr4EemA4_kRIR1Qqg" name="PME_Trig629" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
              </trigger>
              <trigger xmi:id="_wUK08Er4EemA4_kRIR1Qqg" name="PME_Trig630" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
              </trigger>
              <trigger xmi:id="_wUN4QEr4EemA4_kRIR1Qqg" name="PME_Trig631" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
              </trigger>
              <trigger xmi:id="_wUQUgEr4EemA4_kRIR1Qqg" name="PME_Trig632" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wSOUMEr4EemA4_kRIR1Qqg"/>
              <trigger xmi:id="_wUUl8Er4EemA4_kRIR1Qqg" name="PME_Trig633" port="_swEPIErDEem2BZRQc2M93A">
                <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
              </trigger>
              <trigger xmi:id="_wUWbIEr4EemA4_kRIR1Qqg" name="PME_Trig634" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
            </transition>
            <transition xmi:id="_wUY3YEr4EemA4_kRIR1Qqg" name="To__Debug__InitState__635" guard="_wYEdgUr4EemA4_kRIR1Qqg" source="_wTm0QEr4EemA4_kRIR1Qqg" target="_tLME4ErDEem2BZRQc2M93A">
              <ownedRule xmi:id="_wYEdgUr4EemA4_kRIR1Qqg" name="PME_checkDecesion707">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYEdgEr4EemA4_kRIR1Qqg" name="PME_checkDecesion707">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Debug__InitState__635&quot;,&quot;Debug__InitState&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wUiBUEr4EemA4_kRIR1Qqg" name="Trans__ex636" source="_tKkZ0UrDEem2BZRQc2M93A" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wYCoUEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wUjPcUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__init__WaitForEcho__8__638" guard="_wYIH4Ur4EemA4_kRIR1Qqg" source="_wTm0QEr4EemA4_kRIR1Qqg" target="_wUioYEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wYIH4Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion708">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYIH4Er4EemA4_kRIR1Qqg" name="PME_checkDecesion708">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wUovAUr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__init__WaitForEcho__8__640" source="_wUlrsEr4EemA4_kRIR1Qqg" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wYBaMEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wWAA8Er4EemA4_kRIR1Qqg" name="Trans__ex671" source="_tJxvoUrDEem2BZRQc2M93A" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wX8hsEr4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <transition xmi:id="_wWESYUr4EemA4_kRIR1Qqg" name="To__Substates__Debug__C__DoEcho__673" guard="_wYIu8Ur4EemA4_kRIR1Qqg" source="_wTm0QEr4EemA4_kRIR1Qqg" target="_wWBPEEr4EemA4_kRIR1Qqg">
              <ownedRule xmi:id="_wYIu8Ur4EemA4_kRIR1Qqg" name="PME_checkDecesion709">
                <specification xmi:type="uml:OpaqueExpression" xmi:id="_wYIu8Er4EemA4_kRIR1Qqg" name="PME_checkDecesion709">
                  <language>C++</language>
                  <body>return execContext.checkUserDecesion({&quot;To__Substates__Debug__C__DoEcho__673&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                </specification>
              </ownedRule>
            </transition>
            <transition xmi:id="_wWH8wEr4EemA4_kRIR1Qqg" name="From__Substates__Debug__C__DoEcho__675" source="_wWGuoEr4EemA4_kRIR1Qqg" target="_wTm0QEr4EemA4_kRIR1Qqg">
              <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wX-W4Er4EemA4_kRIR1Qqg">
                <language>C++</language>
                <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__InitState&quot;,&quot;To__Debug__InitState__635&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Substates__Debug__C__init__WaitForEcho__8__638&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Substates__Debug__C__DoEcho__673&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
              </effect>
            </transition>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_bHyrEAg0Eea_md0mpENoqg" name="init"/>
            <subvertex xmi:type="uml:State" xmi:id="_tJwhgErDEem2BZRQc2M93A" name="Debug__C__DoEcho">
              <connectionPoint xmi:id="_tJxvoUrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wWBPEEr4EemA4_kRIR1Qqg" name="From__Parent__672" kind="entryPoint"/>
              <connectionPoint xmi:id="_wWGuoEr4EemA4_kRIR1Qqg" name="To__Parent__674" kind="exitPoint"/>
              <region xmi:id="_tJwhgUrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_wWSU0Er4EemA4_kRIR1Qqg" name="Trans__Init__State__677678" source="_wWOqcEr4EemA4_kRIR1Qqg" target="_wWIj0Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXlVUEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__677&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__701&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__677&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__677&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__703&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__677&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wWS74Er4EemA4_kRIR1Qqg" name="Trans__ex679" source="_tJxvoUrDEem2BZRQc2M93A" target="_wWIj0Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXjgIEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__701&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__703&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wWYbcEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ex__WaitForEcho__680" source="_tKAZIErDEem2BZRQc2M93A" target="_wWIj0Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXnxkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__701&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__703&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ex__WaitForEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wWaQoEr4EemA4_kRIR1Qqg" name="PME_Trig681" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wWdT8Er4EemA4_kRIR1Qqg" name="PME_Trig682" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wWfwMEr4EemA4_kRIR1Qqg" name="PME_Trig683" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wWkosEr4EemA4_kRIR1Qqg" name="PME_Trig684" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wWnE8Er4EemA4_kRIR1Qqg" name="PME_Trig685" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wWo6IEr4EemA4_kRIR1Qqg" name="PME_Trig686" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wWwO4Er4EemA4_kRIR1Qqg" name="PME_Trig687" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wSOUMEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wWxdAEr4EemA4_kRIR1Qqg" name="PME_Trig688" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wW1HYEr4EemA4_kRIR1Qqg" name="PME_Trig689" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_wW5_4Er4EemA4_kRIR1Qqg" name="From__Debug__A__Ac__DoEcho__690" source="_tKC1YErDEem2BZRQc2M93A" target="_wWIj0Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXkuQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__701&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__Ac__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__703&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__Ac__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wW7OAEr4EemA4_kRIR1Qqg" name="PME_Trig691" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wW9DMEr4EemA4_kRIR1Qqg" name="PME_Trig692" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wXCiwEr4EemA4_kRIR1Qqg" name="PME_Trig693" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wXGNIEr4EemA4_kRIR1Qqg" name="PME_Trig694" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wXKekEr4EemA4_kRIR1Qqg" name="PME_Trig695" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wXOwAEr4EemA4_kRIR1Qqg" name="PME_Trig696" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wXTBcEr4EemA4_kRIR1Qqg" name="PME_Trig697" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wSOUMEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wXWr0Er4EemA4_kRIR1Qqg" name="PME_Trig698" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wXZIEEr4EemA4_kRIR1Qqg" name="PME_Trig699" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_wXaWMEr4EemA4_kRIR1Qqg" name="To__Debug__B__Ex__WaitForEcho__700" guard="_wXt4MUr4EemA4_kRIR1Qqg" source="_wWIj0Er4EemA4_kRIR1Qqg" target="_tKAZIErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wXt4MUr4EemA4_kRIR1Qqg" name="PME_checkDecesion705">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXt4MEr4EemA4_kRIR1Qqg" name="PME_checkDecesion705">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wXa9QEr4EemA4_kRIR1Qqg" name="To__Debug__A__Ac__DoEcho__701" guard="_wXtRIUr4EemA4_kRIR1Qqg" source="_wWIj0Er4EemA4_kRIR1Qqg" target="_tKC1YErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wXtRIUr4EemA4_kRIR1Qqg" name="PME_checkDecesion704">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXtRIEr4EemA4_kRIR1Qqg" name="PME_checkDecesion704">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__Ac__DoEcho__701&quot;,&quot;Debug__A__Ac__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wXdZgEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__702" source="_wWBPEEr4EemA4_kRIR1Qqg" target="_wWIj0Er4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wXrb8Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__A__Ac__DoEcho&quot;,&quot;To__Debug__A__Ac__DoEcho__701&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__B__Ex__WaitForEcho&quot;,&quot;To__Debug__B__Ex__WaitForEcho__700&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__DoEcho&quot;,&quot;Debug__C__DoEcho&quot;,&quot;To__Parent__StateMachine1__703&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__DoEcho&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wXfOsEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__703" guard="_wXufQUr4EemA4_kRIR1Qqg" source="_wWIj0Er4EemA4_kRIR1Qqg" target="_wWGuoEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wXufQUr4EemA4_kRIR1Qqg" name="PME_checkDecesion706">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wXufQEr4EemA4_kRIR1Qqg" name="PME_checkDecesion706">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__703&quot;,&quot;Debug__C__DoEcho&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKAZIErDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKAZIUrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,2,StateExitBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKIU8UrDEem2BZRQc2M93A" name="Debug__B__Ex__WaitForEcho__698">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__B__Ex__WaitForEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tKC1YErDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKC1YUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;DoEcho&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,1) or Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tKNNcUrDEem2BZRQc2M93A" name="Debug__A__Ac__DoEcho__700">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__DoEcho::Region1::Debug__A__Ac__DoEcho&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wWIj0Er4EemA4_kRIR1Qqg" name="DecesionPoint__676" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wWOqcEr4EemA4_kRIR1Qqg" name="Init__State__677"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_tKgvcErDEem2BZRQc2M93A" name="Debug__Path__init__WaitForEcho__8" kind="choice"/>
            <subvertex xmi:type="uml:State" xmi:id="_tKh9kUrDEem2BZRQc2M93A" name="Debug__C__init__WaitForEcho__8">
              <connectionPoint xmi:id="_tKjLsUrDEem2BZRQc2M93A" name="en" kind="entryPoint"/>
              <connectionPoint xmi:id="_tKkZ0UrDEem2BZRQc2M93A" name="ex" kind="exitPoint"/>
              <connectionPoint xmi:id="_wUioYEr4EemA4_kRIR1Qqg" name="From__Parent__637" kind="entryPoint"/>
              <connectionPoint xmi:id="_wUlrsEr4EemA4_kRIR1Qqg" name="To__Parent__639" kind="exitPoint"/>
              <region xmi:id="_tKh9kkrDEem2BZRQc2M93A" name="Region1">
                <transition xmi:id="_tK2tsErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8" source="_tKjLsUrDEem2BZRQc2M93A" target="_tKzDUUrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLC68ErDEem2BZRQc2M93A" name="Debug__init__trans__init__WaitForEcho__8__728">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__init__trans__init__WaitForEcho__8&quot;,(char *)&quot;en&quot;,(char *)&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                </transition>
                <transition xmi:id="_tK4i4UrDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8" source="_tK1fkErDEem2BZRQc2M93A" target="_tKkZ0UrDEem2BZRQc2M93A">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_tLHMYErDEem2BZRQc2M93A" name="Debug__end__trans__init__WaitForEcho__8__733">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::TRANISTION,debugEvents::TRANISTIONEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__end__trans__init__WaitForEcho__8&quot;,(char *)&quot;Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;ex&quot;,(char *)&quot;&quot;);
</body>
                  </effect>
                  <trigger xmi:id="_tK5J8ErDEem2BZRQc2M93A" name="Debug__Exec" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                </transition>
                <transition xmi:id="_wUx48Er4EemA4_kRIR1Qqg" name="Trans__Init__State__642643" source="_wUtAcEr4EemA4_kRIR1Qqg" target="_wUpWEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wV1B0Er4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__642&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__642&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__667&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__642&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__642&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wUygAEr4EemA4_kRIR1Qqg" name="Trans__ex644" source="_tKkZ0UrDEem2BZRQc2M93A" target="_wUpWEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wV5TQEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__667&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wU1jUEr4EemA4_kRIR1Qqg" name="From__Debug__A__En__init__WaitForEcho__8__645" source="_tK1fkErDEem2BZRQc2M93A" target="_wUpWEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wV8WkEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__667&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__A__En__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wU3_kEr4EemA4_kRIR1Qqg" name="PME_Trig646" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wU84EEr4EemA4_kRIR1Qqg" name="PME_Trig647" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVBJgEr4EemA4_kRIR1Qqg" name="PME_Trig648" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVGCAEr4EemA4_kRIR1Qqg" name="PME_Trig649" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVH3MEr4EemA4_kRIR1Qqg" name="PME_Trig650" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wVK6gEr4EemA4_kRIR1Qqg" name="PME_Trig651" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wSOUMEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wVNWwEr4EemA4_kRIR1Qqg" name="PME_Trig652" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wVTdYEr4EemA4_kRIR1Qqg" name="PME_Trig653" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_wVV5oEr4EemA4_kRIR1Qqg" name="From__Debug__B__Ac__init__WaitForEcho__8__654" source="_tKzDUUrDEem2BZRQc2M93A" target="_wUpWEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wV6hYEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__667&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                  <trigger xmi:id="_wVWgsEr4EemA4_kRIR1Qqg" name="PME_Trig655" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_PsaK0LjWEeaJ1dlMn1j7GQ"/>
                  </trigger>
                  <trigger xmi:id="_wVXHwEr4EemA4_kRIR1Qqg" name="PME_Trig656" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HctYoECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVbZMEr4EemA4_kRIR1Qqg" name="PME_Trig657" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_t2NqIECVEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVj8EEr4EemA4_kRIR1Qqg" name="PME_Trig658" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_HvALgEAyEeev_-3F68RaHA"/>
                  </trigger>
                  <trigger xmi:id="_wVlKMEr4EemA4_kRIR1Qqg" name="PME_Trig659" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_2Nc34EEDEee0eeIrP9Q9KA"/>
                  </trigger>
                  <trigger xmi:id="_wVmYUEr4EemA4_kRIR1Qqg" name="PME_Trig660" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_B2LakK1AEea2s6SIdFjObg"/>
                  </trigger>
                  <trigger xmi:id="_wVo0kEr4EemA4_kRIR1Qqg" name="PME_Trig661" event="_vE1UAEr4EemA4_kRIR1Qqg" port="_wSOUMEr4EemA4_kRIR1Qqg"/>
                  <trigger xmi:id="_wVqCsEr4EemA4_kRIR1Qqg" name="PME_Trig662" port="_swEPIErDEem2BZRQc2M93A">
                    <event xmi:type="uml:CallEvent" href="../CommGateWay/model.uml#_6NfT0HV5EeauJcu8ajHARw"/>
                  </trigger>
                  <trigger xmi:id="_wVqpwEr4EemA4_kRIR1Qqg" name="PME_Trig663" event="_7w0oMAgzEea_md0mpENoqg" port="_PdYSYAg0Eea_md0mpENoqg"/>
                </transition>
                <transition xmi:id="_wVse8Er4EemA4_kRIR1Qqg" name="To__Debug__A__En__init__WaitForEcho__8__664" guard="_wV-LwUr4EemA4_kRIR1Qqg" source="_wUpWEEr4EemA4_kRIR1Qqg" target="_tK1fkErDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wV-LwUr4EemA4_kRIR1Qqg" name="PME_checkDecesion670">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV-LwEr4EemA4_kRIR1Qqg" name="PME_checkDecesion670">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wVse8Ur4EemA4_kRIR1Qqg" name="To__Debug__B__Ac__init__WaitForEcho__8__665" guard="_wV89oUr4EemA4_kRIR1Qqg" source="_wUpWEEr4EemA4_kRIR1Qqg" target="_tKzDUUrDEem2BZRQc2M93A">
                  <ownedRule xmi:id="_wV89oUr4EemA4_kRIR1Qqg" name="PME_checkDecesion668">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV89oEr4EemA4_kRIR1Qqg" name="PME_checkDecesion668">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <transition xmi:id="_wVu7MEr4EemA4_kRIR1Qqg" name="From__Parnet__StateMachine1__666" source="_wUioYEr4EemA4_kRIR1Qqg" target="_wUpWEEr4EemA4_kRIR1Qqg">
                  <effect xmi:type="uml:OpaqueBehavior" xmi:id="_wVzzsEr4EemA4_kRIR1Qqg">
                    <language>C++</language>
                    <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__B__Ac__init__WaitForEcho__8&quot;,&quot;To__Debug__B__Ac__init__WaitForEcho__8__665&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;To__Parent__StateMachine1__667&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Debug__C__init__WaitForEcho__8&quot;,&quot;Debug__A__En__init__WaitForEcho__8&quot;,&quot;To__Debug__A__En__init__WaitForEcho__8__664&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Debug__C__init__WaitForEcho__8&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
                  </effect>
                </transition>
                <transition xmi:id="_wVwwYEr4EemA4_kRIR1Qqg" name="To__Parent__StateMachine1__667" guard="_wV9ksUr4EemA4_kRIR1Qqg" source="_wUpWEEr4EemA4_kRIR1Qqg" target="_wUlrsEr4EemA4_kRIR1Qqg">
                  <ownedRule xmi:id="_wV9ksUr4EemA4_kRIR1Qqg" name="PME_checkDecesion669">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_wV9ksEr4EemA4_kRIR1Qqg" name="PME_checkDecesion669">
                      <language>C++</language>
                      <body>return execContext.checkUserDecesion({&quot;To__Parent__StateMachine1__667&quot;,&quot;Debug__C__init__WaitForEcho__8&quot;, execContext.getExecLocation().locName});
</body>
                    </specification>
                  </ownedRule>
                </transition>
                <subvertex xmi:type="uml:State" xmi:id="_tKzDUUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tKzqYErDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;init__WaitForEcho__8&quot;,&quot;&quot;,&quot;&quot;,3,TransitionEffectBreakPoint,0))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tK6YEUrDEem2BZRQc2M93A" name="Debug__B__Ac__init__WaitForEcho__8__724">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__B__Ac__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:State" xmi:id="_tK1fkErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                  <entry xmi:type="uml:OpaqueBehavior" xmi:id="_tK2GoErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8">
                    <language>C++</language>
                    <body>if (not(Debug__SRO.checkDebug(&quot;WaitForEcho&quot;,&quot;&quot;,&quot;&quot;,4,StateEntryBreakPoint,1))){
extComm.selfExec().send();}

Debug__sendEvent(debugEvents::STATE,debugEvents::STATEENTRYEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </entry>
                  <exit xmi:type="uml:OpaqueBehavior" xmi:id="_tLBFwErDEem2BZRQc2M93A" name="Debug__A__En__init__WaitForEcho__8__726">
                    <language>C++</language>
                    <body>
Debug__sendEvent(debugEvents::STATE,debugEvents::STATEEXITEND,this->getName(),this->getIndex(),msg->getSignalName(),this->getTypeName(),(char *)&quot;Replication::Utility::EchoCapsule::StateMachine1::Region1::Debug__C__init__WaitForEcho__8::Region1::Debug__A__En__init__WaitForEcho__8&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;,(char *)&quot;&quot;);
</body>
                  </exit>
                </subvertex>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wUpWEEr4EemA4_kRIR1Qqg" name="DecesionPoint__641" kind="choice"/>
                <subvertex xmi:type="uml:Pseudostate" xmi:id="_wUtAcEr4EemA4_kRIR1Qqg" name="Init__State__642"/>
              </region>
            </subvertex>
            <subvertex xmi:type="uml:State" xmi:id="_tLME4ErDEem2BZRQc2M93A" name="Debug__InitState"/>
            <subvertex xmi:type="uml:Pseudostate" xmi:id="_wTm0QEr4EemA4_kRIR1Qqg" name="DecesionPoint__623" kind="choice"/>
          </region>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swDoEErDEem2BZRQc2M93A" name="Debug__recallAllMsg" specification="_swDBAErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>Echo.recallAll();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swK80ErDEem2BZRQc2M93A" name="Debug__variablesViewMethod" specification="_swKVwErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempS=&quot;&quot;;
if (Debug__variablesData==NULL)
    Debug__variablesData=(char *)malloc(strlen(tempS.c_str())+1);
else if (strlen(Debug__variablesData)&lt;strlen(tempS.c_str()))
    Debug__variablesData=(char *) realloc(Debug__variablesData,strlen(tempS.c_str())+1);
strcpy(Debug__variablesData,tempS.c_str());
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swQcYErDEem2BZRQc2M93A" name="Debug__variablesChange" specification="_swOAIErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>std::string tempVarName=&quot;&quot;;
tempVarName.append(varName);

    return false;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_swnBsUrDEem2BZRQc2M93A" name="Debug__sendEvent" specification="_swdQsErDEem2BZRQc2M93A">
          <language>C++</language>
          <body>this->Debug__variablesView();
this->Debug__event.clearEventPayload();
this->Debug__event.generateEventID();
this->Debug__event.setCpuTik();
this->Debug__event.setTimePointToNow();
this->Debug__event.setEventSourceKind(eventSourceKind);
this->Debug__event.setEventType(eventType);
this->Debug__event.setCapsuleName(capsuleName);
this->Debug__event.setCapsuleInstance(instanceName);
this->Debug__event.setCapsuleIndex(capsuleIndex);
this->Debug__event.setSourceName(sourceName);
this->Debug__event.setVariableData(this->Debug__variablesData);
this->Debug__event.setPayloadField(&quot;Status&quot;,this->Debug__SRO.getStatusStr());
if (eventSourceKind==debugEvents::TRANISTION){
this->Debug__event.setPayloadField(&quot;Source&quot;,reserve1);
this->Debug__event.setPayloadField(&quot;Target&quot;,reserve2);
this->Debug__event.setPayloadField(&quot;Signal&quot;,signalName);
}
std::string tempS=this->Debug__event.serialize();
char eventStr[tempS.length()+1];
strcpy(eventStr,tempS.c_str());
extComm.event(eventStr).send();
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wS0xIUr4EemA4_kRIR1Qqg" name="loadHeap" specification="_wS0xIEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.setVarValue(&quot;this.Debug__flag&quot;,this->Debug__flag);
if (this->Debug__variablesData)
heap.setVarValue(&quot;this.Debug__variablesData&quot;,std::string(this->Debug__variablesData));
heap.setVarValue(&quot;this.Debug__event&quot;,this->Debug__event);
heap.setVarValue(&quot;this.Debug__SRO&quot;,this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wS5poUr4EemA4_kRIR1Qqg" name="unLoadHeap" specification="_wS5poEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>heap.loadVarFromHeap(&quot;this.Debug__flag&quot;,&amp;this->Debug__flag);
std::string sTemp;
heap.loadVarFromHeap(&quot;this.Debug__variablesData&quot;,&amp;sTemp);
if (this->Debug__variablesData)
this->Debug__variablesData=const_cast&lt;char*>(sTemp.c_str());
heap.loadVarFromHeap(&quot;this.Debug__event&quot;,&amp;this->Debug__event);
heap.loadVarFromHeap(&quot;this.Debug__SRO&quot;,&amp;this->Debug__SRO);
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wTHFAUr4EemA4_kRIR1Qqg" name="sendMessage" specification="_wTHFAEr4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>int result=-1;
 if(message.portName==&quot;Echo&quot;) {
  if(message.signal==&quot;Echo&quot;) {
   if(message.payload.size()==0){
    Echo.Echo().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;extComm&quot;) {
  if(message.signal==&quot;event&quot;) {
   if(message.payload.size()==1){
    extComm.event( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;eventInfo&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;registerToControl&quot;) {
   if(message.payload.size()==1){
    extComm.registerToControl( const_cast&lt;char *>((boost::any_cast&lt;std::string>(message.payload[&quot;capsuleInstanceName&quot;])).c_str())).sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;selfExec&quot;) {
   if(message.payload.size()==0){
    extComm.selfExec().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wTQO8Ur4EemA4_kRIR1Qqg" name="sendInternalMessage" specification="_wTQO8Er4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>// will do it as next work</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_wTjJ4Ur4EemA4_kRIR1Qqg" name="initForPMD" specification="_wTjJ4Er4EemA4_kRIR1Qqg">
          <language>C++</language>
          <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_EchoCapsule::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_EchoCapsule::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;event&quot;,{ {&quot;eventInfo&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;registerToControl&quot;,{ {&quot;capsuleInstanceName&quot;,&quot;String&quot;}});
this->execContext.addOutPutMessages(&quot;extComm&quot;,&quot;selfExec&quot;,{});
 this->execContext.addInputMessages(&quot;Echo&quot;,&quot;Echo&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgVarChange&quot;,{ {&quot;varName&quot;,&quot;String&quot;},{&quot;varValue&quot;,&quot;String&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgCommand&quot;,{ {&quot;data&quot;,&quot;COMMANDS&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgRemBreakPoint&quot;,{ {&quot;location&quot;,&quot;String&quot;},{&quot;breakPointType&quot;,&quot;Integer&quot;},{&quot;place&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgSetExecMode&quot;,{ {&quot;execMode&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgViewBreakPoints&quot;,{});
this->execContext.addInputMessages(&quot;extComm&quot;,&quot;dbgExec&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForEchoCapsule&quot;,&quot;dbg&quot;,{});
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_swDBAErDEem2BZRQc2M93A" name="Debug__recallAllMsg" visibility="private" method="_swDoEErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swKVwErDEem2BZRQc2M93A" name="Debug__variablesView" visibility="private" method="_swK80ErDEem2BZRQc2M93A"/>
        <ownedOperation xmi:id="_swOAIErDEem2BZRQc2M93A" name="Debug__variablesChange" visibility="private" method="_swQcYErDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swOAIUrDEem2BZRQc2M93A" name="methodReturn" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swOnMErDEem2BZRQc2M93A" name="varName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swP1UErDEem2BZRQc2M93A" name="varValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_swdQsErDEem2BZRQc2M93A" name="Debug__sendEvent" visibility="private" method="_swnBsUrDEem2BZRQc2M93A">
          <ownedParameter xmi:id="_swd3wErDEem2BZRQc2M93A" name="eventSourceKind">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swee0UrDEem2BZRQc2M93A" name="eventType">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swg7EUrDEem2BZRQc2M93A" name="instanceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiJMUrDEem2BZRQc2M93A" name="capsuleIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swiwQErDEem2BZRQc2M93A" name="signalName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swj-YErDEem2BZRQc2M93A" name="capsuleName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlMgErDEem2BZRQc2M93A" name="sourceName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swlzkErDEem2BZRQc2M93A" name="reserve1">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swmaoErDEem2BZRQc2M93A" name="reserve2">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_swnBsErDEem2BZRQc2M93A" name="reserve3">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wS0xIEr4EemA4_kRIR1Qqg" name="loadHeap" visibility="private" method="_wS0xIUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_wS5poEr4EemA4_kRIR1Qqg" name="unLoadHeap" visibility="private" method="_wS5poUr4EemA4_kRIR1Qqg"/>
        <ownedOperation xmi:id="_wTHFAEr4EemA4_kRIR1Qqg" name="sendMessage" visibility="private" method="_wTHFAUr4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_wTHsEEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wTI6MEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wTQO8Er4EemA4_kRIR1Qqg" name="sendInternalMessage" visibility="private" method="_wTQO8Ur4EemA4_kRIR1Qqg">
          <ownedParameter xmi:id="_wTQ2AEr4EemA4_kRIR1Qqg" name="result" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
          <ownedParameter xmi:id="_wTRdEEr4EemA4_kRIR1Qqg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_wTjJ4Er4EemA4_kRIR1Qqg" name="initForPMD" visibility="private" method="_wTjJ4Ur4EemA4_kRIR1Qqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_nlBdQAgzEea_md0mpENoqg" name="Echo">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_nk_BAAgzEea_md0mpENoqg" name="Echo">
          <interfaceRealization xmi:id="_nlGVwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlD5gAgzEea_md0mpENoqg" contract="_nlD5gAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_nlZQsAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg" contract="_nlTKEAgzEea_md0mpENoqg">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlD5gAgzEea_md0mpENoqg" name="Echo"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlL1UAgzEea_md0mpENoqg" name="Echo~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlQGwAgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlL1UAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_nlR78AgzEea_md0mpENoqg" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_nlTKEAgzEea_md0mpENoqg" name="EchoIO">
          <ownedOperation xmi:id="_7w0BIAgzEea_md0mpENoqg" name="Echo"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_nlae0AgzEea_md0mpENoqg" client="_nk_BAAgzEea_md0mpENoqg" supplier="_nlTKEAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_7w0oMAgzEea_md0mpENoqg" operation="_7w0BIAgzEea_md0mpENoqg">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_Y1UDYAg6Eea_md0mpENoqg" name="SystemConfig">
        <ownedAttribute xmi:id="_lX6oUAg6Eea_md0mpENoqg" name="ConfigOK">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_lX6oUQg6Eea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rA4b8Ag6Eea_md0mpENoqg" name="RunningMode">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_xR7jQAg6Eea_md0mpENoqg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_4Gg1cAg6Eea_md0mpENoqg" name="MasterId">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_7FhkQAg6Eea_md0mpENoqg" name="MasterName">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6tXsMAmpEea_md0mpENoqg" name="MasterList">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Hzi4QAmqEea_md0mpENoqg" value="2"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_HzxhwAmqEea_md0mpENoqg" value="2"/>
          <defaultValue xmi:type="uml:LiteralBoolean" xmi:id="_JwlzwAmqEea_md0mpENoqg"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_cYIKwAimEea_md0mpENoqg" name="loadConfig" specification="_QF0roAimEea_md0mpENoqg">
          <language>C++</language>
          <body>{
    /* UMLRTGEN-USERREGION-BEGIN platform:/resource/Replication/Replication.uml Replication::Configuration operation loadConfig */
    std::cout&lt;&lt;&quot;Config Class: load configuration from file\n&quot;;
    char result[PATH_MAX];
    readlink( &quot;/proc/self/exe&quot;, result, PATH_MAX );
    string temps=string(result);
    size_t tempP=temps.rfind('/');
    if (tempP>0)
    {
    temps=temps.substr(0,tempP);
    }
    else
    temps=&quot;&quot;;
    string MasterConfigFileName=&quot;./Master.config&quot;;
    string RunningModeConfigFileName=&quot;./RunningMode.config&quot;;
    string MasterConfigPath=temps+MasterConfigFileName;
    string RunningModeConfigPath=temps+RunningModeConfigFileName;
    cout &lt;&lt; RunningModeConfigPath &lt;&lt; endl;
    //ifstream RunningModeConfigFile(RunningModeConfigPath.c_str());
    ifstream RunningModeConfigFile(&quot;./RunningMode.config&quot;);
    string line;
    if (RunningModeConfigFile.is_open())
    {
    (getline(RunningModeConfigFile,line));
    {
    if (atoi(line.c_str())==0)
    {
    this->RunningMode=0;
    this->ConfigOK=true;
    RunningModeConfigFile.close();
    cout&lt;&lt;&quot;Configuration Loaded successfully, the running mode is active\n&quot;;
    //            			return true;
    }
    else if (atoi(line.c_str())==1)
    {
    this->RunningMode=1;
    //ifstream MasterConfigFile(MasterConfigPath.c_str());
    ifstream MasterConfigFile(&quot;Master.config&quot;);

    if (MasterConfigFile.is_open() &amp;&amp; (getline(MasterConfigFile,line)))
    if (line==&quot;server1&quot; || line==&quot;server2&quot;)
    {
    this->MasterName= new char[line.size()+1];
    strcpy(this->MasterName,line.c_str());
    cout &lt;&lt;&quot;Master Name is:&quot;&lt;&lt; this->MasterName&lt;&lt;endl;
    this->ConfigOK=true;
    cout &lt;&lt; &quot;configuration Loaded successfully, the running mode is passive|&quot;
    &lt;&lt;&quot; Master name is : &quot;&lt;&lt;this->MasterName&lt;&lt;endl;
    RunningModeConfigFile.close();
    MasterConfigFile.close();
    //           					return true;
    }
    else
    {
    cout&lt;&lt;&quot;Master Name is wrong, please fix it\n&quot;;
    this->ConfigOK=false;
    //           					return false;
    }
    else
    {
    cout&lt;&lt;&quot;Master config file(Master.config) cann't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //         				return false;
    }
    }
    else
    {
    cout&lt;&lt; &quot;The running mode value is incorrect, please fix that\n&quot;;
    this->ConfigOK=false;
    //       			return false;
    }
    }
    }
    else
    {
    cout&lt;&lt;&quot;The Running Mode config(RunningMode.config) file can't be loaded, please fix it\n&quot;;
    this->ConfigOK=false;
    //     	return false;
    }/* UMLRTGEN-USERREGION-END */
}
</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_QF0roAimEea_md0mpENoqg" name="loadConfig" method="_cYIKwAimEea_md0mpENoqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_4_QwUAnEEeaGqPUk-4V4qQ" name="Services">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_4--ccAnEEeaGqPUk-4V4qQ" name="Services">
          <interfaceRealization xmi:id="_5AwlIAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AqegAnEEeaGqPUk-4V4qQ" contract="_5AqegAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_5A8LUAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ" contract="_5A5IAAnEEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AqegAnEEeaGqPUk-4V4qQ" name="Services">
          <ownedOperation xmi:id="_P49E4AnFEeaGqPUk-4V4qQ" name="Reply">
            <ownedParameter xmi:id="_P49E4QnFEeaGqPUk-4V4qQ" name="Result">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_P49E4gnFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5AzBYAnEEeaGqPUk-4V4qQ" name="Services~">
          <ownedOperation xmi:id="_G3ENoAnFEeaGqPUk-4V4qQ" name="Request">
            <ownedParameter xmi:id="_G3ENoQnFEeaGqPUk-4V4qQ" name="ServiceID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_G3ENognFEeaGqPUk-4V4qQ" value="0"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A3S0AnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5AzBYAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_5A354AnEEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_5A5IAAnEEeaGqPUk-4V4qQ" name="ServicesIO"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_5A_1sAnEEeaGqPUk-4V4qQ" client="_4--ccAnEEeaGqPUk-4V4qQ" supplier="_5A5IAAnEEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_G3K7UAnFEeaGqPUk-4V4qQ" operation="_G3ENoAnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_P4-6EAnFEeaGqPUk-4V4qQ" operation="_P49E4AnFEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_f2zWUApBEeaGqPUk-4V4qQ" name="FailOver">
        <packagedElement xmi:type="uml:Collaboration" xmi:id="_f2ud0ApBEeaGqPUk-4V4qQ" name="FailOver">
          <interfaceRealization xmi:id="_f4EhoApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f39z8ApBEeaGqPUk-4V4qQ" contract="_f39z8ApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
          <interfaceRealization xmi:id="_f4O5sApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ" contract="_f4L2YApBEeaGqPUk-4V4qQ">
            <name xsi:nil="true"/>
          </interfaceRealization>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f39z8ApBEeaGqPUk-4V4qQ" name="FailOver"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4FvwApBEeaGqPUk-4V4qQ" name="FailOver~"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4KoQApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4FvwApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_f4LPUApBEeaGqPUk-4V4qQ" name="*"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_f4L2YApBEeaGqPUk-4V4qQ" name="FailOverIO">
          <ownedOperation xmi:id="_xM6GgApBEeaGqPUk-4V4qQ" name="IAmAlive">
            <ownedParameter xmi:id="_xM6GgQpBEeaGqPUk-4V4qQ" name="ServerName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_f4Qu4ApBEeaGqPUk-4V4qQ" client="_f2ud0ApBEeaGqPUk-4V4qQ" supplier="_f4L2YApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
        <packagedElement xmi:type="uml:CallEvent" xmi:id="_xM6tkApBEeaGqPUk-4V4qQ" operation="_xM6GgApBEeaGqPUk-4V4qQ">
          <name xsi:nil="true"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_gDfqsAghEea_md0mpENoqg" name="Simulator">
      <packagedElement xmi:type="uml:Dependency" xmi:id="_m1qiEAghEea_md0mpENoqg" client="_lYTBoAggEea_md0mpENoqg" supplier="_rPgFkAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Dependency" xmi:id="_nyBcoAghEea_md0mpENoqg" client="_gDfqsAghEea_md0mpENoqg" supplier="_z1vioAggEea_md0mpENoqg"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_d9MBUAgoEea_md0mpENoqg" name="Simulator" isActive="true">
        <ownedAttribute xmi:id="_ljfrYAgoEea_md0mpENoqg" name="server1" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ljjVwAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljjVwQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_odv2AAgoEea_md0mpENoqg" name="client" visibility="protected" type="_zpdLYAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_odySQQgoEea_md0mpENoqg" value="5"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ody5UAgoEea_md0mpENoqg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_trcC4AgoEea_md0mpENoqg" name="ENV" visibility="protected" type="_sMZ5EAgoEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_trfGMAgoEea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trfGMQgoEea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_6qCFoAg7Eea_md0mpENoqg" name="server2" visibility="protected" type="_xCGHkAgmEea_md0mpENoqg" isOrdered="true" aggregation="composite">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_6qGXEAg7Eea_md0mpENoqg" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6qGXEQg7Eea_md0mpENoqg" value="1"/>
        </ownedAttribute>
        <ownedConnector xmi:id="_O1v3cOM6EeaTpaLNj-zYpw" name="RTConnector6">
          <end xmi:id="_O1xsoOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_fL3OQAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_O1xsoeM6EeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_P9Q5IOM6EeaTpaLNj-zYpw" name="RTConnector7">
          <end xmi:id="_P9SHQOM6EeaTpaLNj-zYpw" partWithPort="_odv2AAgoEea_md0mpENoqg" role="_lRZpIAnFEeaGqPUk-4V4qQ"/>
          <end xmi:id="_P9SHQeM6EeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
        </ownedConnector>
        <ownedConnector xmi:id="_zuXWQONAEeaTpaLNj-zYpw" name="RTConnector8">
          <end xmi:id="_zuZygONAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_zuZygeNAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
        <ownedConnector xmi:id="_0bs9YONAEeaTpaLNj-zYpw" name="RTConnector9">
          <end xmi:id="_0buLgONAEeaTpaLNj-zYpw" partWithPort="_6qCFoAg7Eea_md0mpENoqg" role="_HIvrsApCEeaGqPUk-4V4qQ"/>
          <end xmi:id="_0buLgeNAEeaTpaLNj-zYpw" partWithPort="_ljfrYAgoEea_md0mpENoqg" role="_rmnI0OM8EeaTpaLNj-zYpw"/>
        </ownedConnector>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_stgqYErDEem2BZRQc2M93A" name="Debug__Top">
      <ownedAttribute xmi:id="_st6TAErDEem2BZRQc2M93A" name="Debug__Gateway">
        <type xmi:type="uml:Class" href="../CommGateWay/model.uml#_XIyCcAdxEeadtKuU2t6fMg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_st9WUErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_st99YErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_sufh0ErDEem2BZRQc2M93A" name="Debug__Simulator" type="_d9MBUAgoEea_md0mpENoqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_suhXAErDEem2BZRQc2M93A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_suh-EErDEem2BZRQc2M93A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_yKgEcEr4EemA4_kRIR1Qqg" name="dbgAgent" type="_vDeCEEr4EemA4_kRIR1Qqg">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yKmyIEr4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_yKmyIUr4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vDeCEEr4EemA4_kRIR1Qqg" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_vE7aoEr4EemA4_kRIR1Qqg" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vE8owEr4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_vE9P0Er4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_vNgu4Er4EemA4_kRIR1Qqg" name="dbgPortForENV" visibility="public" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_vNhV8Er4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_vNhV8Ur4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_wSQJYEr4EemA4_kRIR1Qqg" name="dbgPortForEchoCapsule" visibility="public" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wSQwcEr4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_wSQwcUr4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_wYQqwUr4EemA4_kRIR1Qqg" name="dbgPortForServer" visibility="public" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_wYRR0Er4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_wYRR0Ur4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_xka74Er4EemA4_kRIR1Qqg" name="dbgPortForClient" visibility="public" type="_vENo8Er4EemA4_kRIR1Qqg" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_xka74Ur4EemA4_kRIR1Qqg" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_xka74kr4EemA4_kRIR1Qqg" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_vD9xUEr4EemA4_kRIR1Qqg" name="dbgAgent StateMachine">
        <region xmi:id="_vLn4gEr4EemA4_kRIR1Qqg" name="mainRegion">
          <transition xmi:id="_vMHnwEr4EemA4_kRIR1Qqg" name="Trans__Init__State__34" source="_vL9PsEr4EemA4_kRIR1Qqg" target="_vLq70Er4EemA4_kRIR1Qqg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vNDb4Er4EemA4_kRIR1Qqg">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_vMSm4Er4EemA4_kRIR1Qqg" name="From__New__State__2__5" source="_vL0FwEr4EemA4_kRIR1Qqg" target="_vLq70Er4EemA4_kRIR1Qqg">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_vM8HIEr4EemA4_kRIR1Qqg">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_vMcX4Er4EemA4_kRIR1Qqg" name="PME_Trig6" port="_vE7aoEr4EemA4_kRIR1Qqg">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_vMvS0Er4EemA4_kRIR1Qqg" name="To__New__State__2__7" guard="_vNGfMEr4EemA4_kRIR1Qqg" source="_vLq70Er4EemA4_kRIR1Qqg" target="_vL0FwEr4EemA4_kRIR1Qqg">
            <ownedRule xmi:id="_vNGfMEr4EemA4_kRIR1Qqg" name="PME_checkDecesion8">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_vNF4IEr4EemA4_kRIR1Qqg" name="PME_checkDecesion8">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__2__7&quot;,&quot;New__State__2&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_vLq70Er4EemA4_kRIR1Qqg" name="DecesionPoint__1" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_vL0FwEr4EemA4_kRIR1Qqg" name="New__State__2">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_yKnZMEr4EemA4_kRIR1Qqg" name="New__State__2">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_vL9PsEr4EemA4_kRIR1Qqg" name="Init__State__3"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vKLuEEr4EemA4_kRIR1Qqg" name="loadHeap" specification="_vKLHAEr4EemA4_kRIR1Qqg">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vKOKUUr4EemA4_kRIR1Qqg" name="unLoadHeap" specification="_vKOKUEr4EemA4_kRIR1Qqg">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vKda4Er4EemA4_kRIR1Qqg" name="sendMessage" specification="_vKcz0Er4EemA4_kRIR1Qqg">
        <language>C++</language>
        <body>int result=-1;
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vK2ccUr4EemA4_kRIR1Qqg" name="sendInternalMessage" specification="_vK2ccEr4EemA4_kRIR1Qqg">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vLc5YEr4EemA4_kRIR1Qqg" name="initForPMD" specification="_vLcSUEr4EemA4_kRIR1Qqg">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
  this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_vKLHAEr4EemA4_kRIR1Qqg" name="loadHeap" visibility="private" method="_vKLuEEr4EemA4_kRIR1Qqg"/>
      <ownedOperation xmi:id="_vKOKUEr4EemA4_kRIR1Qqg" name="unLoadHeap" visibility="private" method="_vKOKUUr4EemA4_kRIR1Qqg"/>
      <ownedOperation xmi:id="_vKcz0Er4EemA4_kRIR1Qqg" name="sendMessage" visibility="private" method="_vKda4Er4EemA4_kRIR1Qqg">
        <ownedParameter xmi:id="_vKjhgEr4EemA4_kRIR1Qqg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_vKqPMEr4EemA4_kRIR1Qqg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vK2ccEr4EemA4_kRIR1Qqg" name="sendInternalMessage" visibility="private" method="_vK2ccUr4EemA4_kRIR1Qqg">
        <ownedParameter xmi:id="_vK9KIEr4EemA4_kRIR1Qqg" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_vLA0gEr4EemA4_kRIR1Qqg" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_vLcSUEr4EemA4_kRIR1Qqg" name="initForPMD" visibility="private" method="_vLc5YEr4EemA4_kRIR1Qqg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_vEJ-kEr4EemA4_kRIR1Qqg" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_vENo8Er4EemA4_kRIR1Qqg" name="dbgProtocol">
        <interfaceRealization xmi:id="_vEumUEr4EemA4_kRIR1Qqg" client="_vENo8Er4EemA4_kRIR1Qqg" supplier="_vETvkEr4EemA4_kRIR1Qqg" contract="_vETvkEr4EemA4_kRIR1Qqg"/>
        <interfaceRealization xmi:id="_vExpoEr4EemA4_kRIR1Qqg" client="_vENo8Er4EemA4_kRIR1Qqg" supplier="_vEWL0Er4EemA4_kRIR1Qqg" contract="_vEWL0Er4EemA4_kRIR1Qqg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_vETvkEr4EemA4_kRIR1Qqg" name="dbgProtocol">
        <ownedOperation xmi:id="_vEze0Er4EemA4_kRIR1Qqg" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_vEU9sEr4EemA4_kRIR1Qqg" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_vEWL0Er4EemA4_kRIR1Qqg" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_vEZPIEr4EemA4_kRIR1Qqg" client="_vENo8Er4EemA4_kRIR1Qqg" supplier="_vEU9sEr4EemA4_kRIR1Qqg"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_vEdgkEr4EemA4_kRIR1Qqg" client="_vENo8Er4EemA4_kRIR1Qqg" supplier="_vEWL0Er4EemA4_kRIR1Qqg"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_vE1UAEr4EemA4_kRIR1Qqg" operation="_vEze0Er4EemA4_kRIR1Qqg"/>
    </packagedElement>
    <profileApplication xmi:id="_lcu1sAggEea_md0mpENoqg">
      <eAnnotations xmi:id="_lcwq4AggEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_0p1pUAgxEea_md0mpENoqg">
      <eAnnotations xmi:id="_0p1pUQgxEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#_Kv8EIKFXEeS_KNX0nfvIVQ"/>
      </eAnnotations>
      <appliedProfile href="pathmap://PAPYRUS_ACTIONLANGUAGE_PROFILE/ActionLanguage-Profile.profile.uml#ActionLanguage"/>
    </profileApplication>
    <profileApplication xmi:id="_iMahwAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMbv4AifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
    <profileApplication xmi:id="_iMeMIAifEea_md0mpENoqg">
      <eAnnotations xmi:id="_iMgBUAifEea_md0mpENoqg" source="PapyrusVersion">
        <details xmi:id="_iMgBUQifEea_md0mpENoqg" key="Version" value="0.0.11"/>
        <details xmi:id="_iMgBUgifEea_md0mpENoqg" key="Comment" value=""/>
        <details xmi:id="_iMgBUwifEea_md0mpENoqg" key="Copyright" value=""/>
        <details xmi:id="_iMgBVAifEea_md0mpENoqg" key="Date" value="2015-12-10"/>
        <details xmi:id="_iMgBVQifEea_md0mpENoqg" key="Author" value=""/>
      </eAnnotations>
      <eAnnotations xmi:id="_iMeMIQifEea_md0mpENoqg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_5AGSMAghEea_md0mpENoqg" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_xCrWYAgmEea_md0mpENoqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_zp7FcAgmEea_md0mpENoqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_d9rwkAgoEea_md0mpENoqg" base_Class="_d9MBUAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_ljiusAgoEea_md0mpENoqg" base_Property="_ljfrYAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_odySQAgoEea_md0mpENoqg" base_Property="_odv2AAgoEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_sM-g0AgoEea_md0mpENoqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_trefIAgoEea_md0mpENoqg" base_Property="_trcC4AgoEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_v05s8AgsEea_md0mpENoqg" base_Package="_v04e0AgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v09-YAgsEea_md0mpENoqg" base_Interface="_v09XUAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1KLoAgsEea_md0mpENoqg" base_Interface="_v1I9gAgsEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_v1Q5UAgsEea_md0mpENoqg" base_Interface="_v1PrMAgsEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_v1T8oAgsEea_md0mpENoqg" base_Collaboration="_v000cAgsEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_GXxLAAgvEea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_GXsSgAgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_g3oVAAgvEea_md0mpENoqg" isWired="false" base_Port="_g3nG4AgvEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_-3NuMAgvEea_md0mpENoqg" isWired="false" base_Port="_-3KD0AgvEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_RMf8EAgzEea_md0mpENoqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nlCrYAgzEea_md0mpENoqg" base_Package="_nlBdQAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlFHoAgzEea_md0mpENoqg" base_Interface="_nlD5gAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlO4oAgzEea_md0mpENoqg" base_Interface="_nlL1UAgzEea_md0mpENoqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nlW0cAgzEea_md0mpENoqg" base_Interface="_nlTKEAgzEea_md0mpENoqg" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_nlbF4AgzEea_md0mpENoqg" base_Collaboration="_nk_BAAgzEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_PdauoAg0Eea_md0mpENoqg" isPublish="true" isWired="false" base_Port="_PdYSYAg0Eea_md0mpENoqg"/>
  <UMLRealTime:CapsulePart xmi:id="_6qFwAAg7Eea_md0mpENoqg" base_Property="_6qCFoAg7Eea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_l72A4AifEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include&lt;iostream>" base_Class="_sMZ5EAgoEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ZYVLEAihEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>" base_Class="_RLyKYAgzEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qp8qkAimEea_md0mpENoqg" implementationPreface="#include &lt;iostream>&#xA;#include &lt;fstream>&#xA;#include &lt;limits.h>&#xA;#include &lt;unistd.h>&#xA;using namespace std;" base_Class="_Y1UDYAg6Eea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_b2D_sAjLEea_md0mpENoqg" isWired="false" base_Port="_b1NrIAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_wQWSkAjLEea_md0mpENoqg" isWired="false" base_Port="_wQHCAAjLEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_X4gvkAjMEea_md0mpENoqg" isWired="false" base_Port="_X4ceIAjMEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_6nxNAAkFEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" implementationEnding="" base_Class="_xCGHkAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_skTr8AlKEea_md0mpENoqg" headerPreface="#include &quot;Event.h&quot;&#xA;&#xA;#include &quot;SROManager.h&quot;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" implementationPreface="#include &lt;iostream>&#xA;#include &lt;cstdlib>" base_Class="_zpdLYAgmEea_md0mpENoqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_iLgtsAmuEea_md0mpENoqg" isWired="false" base_Port="_iLeRcAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_oWjToAmuEea_md0mpENoqg" isWired="false" base_Port="_oWg3YAmuEea_md0mpENoqg"/>
  <UMLRealTime:RTPort xmi:id="_tQAV4AmuEea_md0mpENoqg" isWired="false" base_Port="_tP9SkAmuEea_md0mpENoqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_5AbN8AnEEeaGqPUk-4V4qQ" base_Package="_4_QwUAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5AuI4AnEEeaGqPUk-4V4qQ" base_Interface="_5AqegAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A1doAnEEeaGqPUk-4V4qQ" base_Interface="_5AzBYAnEEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_5A69MAnEEeaGqPUk-4V4qQ" base_Interface="_5A5IAAnEEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_5BBq4AnEEeaGqPUk-4V4qQ" base_Collaboration="_4--ccAnEEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_fMA_QAnFEeaGqPUk-4V4qQ" base_Port="_fL3OQAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lRkBMAnFEeaGqPUk-4V4qQ" base_Port="_lRZpIAnFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_pQ9x0AnMEeaGqPUk-4V4qQ" base_Port="_pQ6HcAnMEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8sLrYAovEeaGqPUk-4V4qQ" isWired="false" base_Port="_8sGy4AovEeaGqPUk-4V4qQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_f22ZoApBEeaGqPUk-4V4qQ" base_Package="_f2zWUApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4CscApBEeaGqPUk-4V4qQ" base_Interface="_f39z8ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4IMAApBEeaGqPUk-4V4qQ" base_Interface="_f4FvwApBEeaGqPUk-4V4qQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_f4NrkApBEeaGqPUk-4V4qQ" base_Interface="_f4L2YApBEeaGqPUk-4V4qQ" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_f4R9AApBEeaGqPUk-4V4qQ" base_Collaboration="_f2ud0ApBEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_HIz9IApCEeaGqPUk-4V4qQ" base_Port="_HIvrsApCEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_ZDu1IApDEeaGqPUk-4V4qQ" isWired="false" base_Port="_ZDrx0ApDEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_Vj4_QApFEeaGqPUk-4V4qQ" isWired="false" base_Port="_Vj1U4ApFEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_lxxyEApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_lxs5kApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_rXbzAApkEeaGqPUk-4V4qQ" isWired="false" base_Port="_rXZWwApkEeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_8587kAs1EeaGqPUk-4V4qQ" isWired="false" base_Port="_855RMAs1EeaGqPUk-4V4qQ"/>
  <UMLRealTime:RTPort xmi:id="_mKiJYOM2EeaTpaLNj-zYpw" isWired="false" base_Port="_mKfGEOM2EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_O1yTsOM6EeaTpaLNj-zYpw" base_Connector="_O1v3cOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_P9SuUOM6EeaTpaLNj-zYpw" base_Connector="_P9Q5IOM6EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTPort xmi:id="_rmqMIOM8EeaTpaLNj-zYpw" base_Port="_rmnI0OM8EeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_zuZyguNAEeaTpaLNj-zYpw" base_Connector="_zuXWQONAEeaTpaLNj-zYpw"/>
  <UMLRealTime:RTConnector xmi:id="_0bvZoONAEeaTpaLNj-zYpw" base_Connector="_0bs9YONAEeaTpaLNj-zYpw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_71nSEPMWEeauO5SNGpOV7w" headerPreface="#include &lt;fstream>" base_Class="_4_oYIAghEea_md0mpENoqg"/>
  <RTCppProperties:AttributeProperties xmi:id="_gvmcIPMYEeauO5SNGpOV7w" type="std::ofstream" base_Property="_dCa_wPMYEeauO5SNGpOV7w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_b45wYKozEeiNHY6qjNhZ4w" base_Region="_lvCAwAlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_fAFjwKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_gOt6EKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_hsv-UKozEeiNHY6qjNhZ4w" base_State="_UrcckAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_i6NP8KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_kA2H4KozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_lJDGEKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mRbDYKozEeiNHY6qjNhZ4w" base_Pseudostate="_kLngAAp5EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nsAyEKozEeiNHY6qjNhZ4w" base_State="_2g5S0ONBEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_o4vD4KozEeiNHY6qjNhZ4w" base_Pseudostate="_M8iZcONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_rpSf8KozEeiNHY6qjNhZ4w" base_Region="_ThAzEONCEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTState xmi:id="_tdqAkKozEeiNHY6qjNhZ4w" base_State="_Px2BIAqSEeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ud1rMKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_veq2EKozEeiNHY6qjNhZ4w" base_State="_ZaK1gAlOEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wg0PkKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xiP3YKozEeiNHY6qjNhZ4w" base_Pseudostate="_8WMAUONDEeaTpaLNj-zYpw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_0dGe8KozEeiNHY6qjNhZ4w" base_StateMachine="_lT4V0AlLEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_880dQKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_88_cYKozEeiNHY6qjNhZ4w" base_Pseudostate="_887yAKozEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_Y4mLoKo0EeiNHY6qjNhZ4w" base_Region="_Bk0GwAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_bQ-_UKo0EeiNHY6qjNhZ4w" base_Pseudostate="_Oll1cAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_cpwwIKo0EeiNHY6qjNhZ4w" base_State="_Q5-S4AlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_du4lIKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_eug2IKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_f8K8EKo0EeiNHY6qjNhZ4w" base_State="_fO-gkAmtEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_g871gKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_h7dTQKo0EeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_jFMigKo0EeiNHY6qjNhZ4w" base_State="_KwFHIAo0EeaGqPUk-4V4qQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_k5P6EKo0EeiNHY6qjNhZ4w" base_StateMachine="_BKT8EAlKEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_Rg85wKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SuGpYKpiEeiNHY6qjNhZ4w" base_Pseudostate="_bHyrEAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ZzTxgKpiEeiNHY6qjNhZ4w" base_Region="_abLcsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_bJC1YKpiEeiNHY6qjNhZ4w" base_StateMachine="_WlNQsAg0Eea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_1LnmcKpiEeiNHY6qjNhZ4w" base_Pseudostate="_npsCMAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTState xmi:id="_2O6PcKpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_3WYN0KpiEeiNHY6qjNhZ4w"/>
  <UMLRTStateMachines:RTState xmi:id="_4kr0AKpiEeiNHY6qjNhZ4w" base_State="_NvBagAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_5uXY4KpiEeiNHY6qjNhZ4w" base_Pseudostate="_dWznsAgxEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_8Lil8KpiEeiNHY6qjNhZ4w" base_Region="_jSIzIAgwEea_md0mpENoqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_BsmawKpjEeiNHY6qjNhZ4w" base_StateMachine="_gU8CMAgwEea_md0mpENoqg"/>
  <UMLRealTime:Capsule xmi:id="_stxwIErDEem2BZRQc2M93A" base_Class="_stgqYErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_st8vQErDEem2BZRQc2M93A" base_Property="_st6TAErDEem2BZRQc2M93A"/>
  <UMLRealTime:CapsulePart xmi:id="_sugv8ErDEem2BZRQc2M93A" base_Property="_sufh0ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svEJkErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_svHM4ErDEem2BZRQc2M93A" base_Port="_svBtUErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sviqsErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_svhckErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_svluAErDEem2BZRQc2M93A" type="SROManager" base_Property="_svkf4ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_svoKQErDEem2BZRQc2M93A" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_svu38ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_svrNkUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_svyiUErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_svwtIErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv0-kErDEem2BZRQc2M93A" type="const char *" base_Parameter="_svzJYErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv3a0ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv2MsErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sv5QAErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sv4B4ErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swFdQErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swHScErDEem2BZRQc2M93A" base_Port="_swEPIErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swWjAErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_swUt0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_swYYMErDEem2BZRQc2M93A" type="SROManager" base_Property="_swXKEErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_swbbgErDEem2BZRQc2M93A" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_swee0ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_swd3wErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swg7EErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_swee0UrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swiJMErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swg7EUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swjXUErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swiwQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_swklcErDEem2BZRQc2M93A" type="const char *" base_Parameter="_swj-YErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_swxZwErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sw1EIErDEem2BZRQc2M93A" base_Port="_swu9gErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxJNMErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sxH_EErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sxLCYErDEem2BZRQc2M93A" type="SROManager" base_Property="_sxJNMUrDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sxM3kErDEem2BZRQc2M93A" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxP64ErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sxPT0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxRwEErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sxQh8ErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxS-MErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxRwEUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxUzYErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxTlQErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sxWBgErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sxUzYUrDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxhAoErDEem2BZRQc2M93A" isNotification="true" isWired="false" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <UMLRealTime:RTPort xmi:id="_sxjc4ErDEem2BZRQc2M93A" base_Port="_sxfygErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx1wwErDEem2BZRQc2M93A" type="debugEvents::Event" base_Property="_sx1JsErDEem2BZRQc2M93A"/>
  <RTCppProperties:AttributeProperties xmi:id="_sx2-4ErDEem2BZRQc2M93A" type="SROManager" base_Property="_sx2X0ErDEem2BZRQc2M93A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sx40EErDEem2BZRQc2M93A" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx8ecErDEem2BZRQc2M93A" type="debugEvents::EVENTSOURCEKIND" base_Parameter="_sx7QUErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx9FgErDEem2BZRQc2M93A" type="debugEvents::EVENTTYPE" base_Parameter="_sx8ecUrDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx-ToErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx9skErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sx_hwErDEem2BZRQc2M93A" type="const char *" base_Parameter="_sx-6sErDEem2BZRQc2M93A"/>
  <RTCppProperties:ParameterProperties xmi:id="_syAv4ErDEem2BZRQc2M93A" type="const char *" base_Parameter="_syAI0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syTDwErDEem2BZRQc2M93A" base_Pseudostate="_syROkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_syVgAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syXVMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_syYjUErDEem2BZRQc2M93A" base_Pseudostate="_syX8QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_szFG4ErDEem2BZRQc2M93A" base_Region="_syTq0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szGVAErDEem2BZRQc2M93A" base_State="_syTDwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szRUIErDEem2BZRQc2M93A" base_State="_szG8EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szU-gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szXawErDEem2BZRQc2M93A" base_State="_szMboErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szk2IErDEem2BZRQc2M93A" base_Pseudostate="_szkPEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_szmrUErDEem2BZRQc2M93A" base_State="_szldMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sznSYErDEem2BZRQc2M93A" base_Pseudostate="_szmrUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_szpuoErDEem2BZRQc2M93A" base_Pseudostate="_sznSYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sz93sErDEem2BZRQc2M93A" base_Region="_szldMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0KE8ErDEem2BZRQc2M93A" base_State="_sz-ewErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0NIQErDEem2BZRQc2M93A" base_State="_sz_s4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0PkgErDEem2BZRQc2M93A" base_State="_s0BiEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0T18ErDEem2BZRQc2M93A" base_State="_s0DXQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0fcIErDEem2BZRQc2M93A" base_Pseudostate="_s0e1EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0gqQErDEem2BZRQc2M93A" base_State="_s0fcIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0hRUErDEem2BZRQc2M93A" base_Pseudostate="_s0gqQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s0h4YErDEem2BZRQc2M93A" base_Pseudostate="_s0hRUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s00zUErDEem2BZRQc2M93A" base_Region="_s0fcIkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s0_LYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1COsErDEem2BZRQc2M93A" base_State="_s02BcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1GgIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1L_sErDEem2BZRQc2M93A" base_State="_s05EwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ZbEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s1apMErDEem2BZRQc2M93A" base_State="_s1ZbEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1ceYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s1dFcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s1uLMErDEem2BZRQc2M93A" base_Region="_s1ZbEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s11f8ErDEem2BZRQc2M93A" base_State="_s1uLMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s14jQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s18NoErDEem2BZRQc2M93A" base_State="_s1wAYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2Ia4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2JpAErDEem2BZRQc2M93A" base_State="_s2JB8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2K3IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s2LeMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s2eZIErDEem2BZRQc2M93A" base_Region="_s2JB8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2pYQErDEem2BZRQc2M93A" base_State="_s2eZIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2r0gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s2wF8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s22zoErDEem2BZRQc2M93A" base_State="_s2j4sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3IgcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3JukErDEem2BZRQc2M93A" base_State="_s3JHgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3MK0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s3Mx4ErDEem2BZRQc2M93A" base_Pseudostate="_s3MK0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s3bbYErDEem2BZRQc2M93A" base_Region="_s3JHgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3hiAErDEem2BZRQc2M93A" base_State="_s3bbYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3klUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s3nooErDEem2BZRQc2M93A" base_State="_s3d3oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s31rEErDEem2BZRQc2M93A" base_Pseudostate="_s31EAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s32SIErDEem2BZRQc2M93A" base_State="_s31rEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s325MErDEem2BZRQc2M93A" base_Pseudostate="_s32SIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s34HUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s4H-8ErDEem2BZRQc2M93A" base_Region="_s31rEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4P6wErDEem2BZRQc2M93A" base_State="_s4ImAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4SXAErDEem2BZRQc2M93A" base_State="_s4J0IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4WocErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4iOoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s4i1sErDEem2BZRQc2M93A" base_State="_s4iOoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4kq4ErDEem2BZRQc2M93A" base_Pseudostate="_s4jcwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s4lR8ErDEem2BZRQc2M93A" base_Pseudostate="_s4kq4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s40igErDEem2BZRQc2M93A" base_Region="_s4iOokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5DzEErDEem2BZRQc2M93A" base_State="_s40igUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5GPUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5JSoErDEem2BZRQc2M93A" base_State="_s46CEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5NkEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5ZKQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5ZxUErDEem2BZRQc2M93A" base_State="_s5ZKQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5a_cErDEem2BZRQc2M93A" base_Pseudostate="_s5aYYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s5bmgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s5qQAErDEem2BZRQc2M93A" base_Region="_s5ZKQkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s5yL0ErDEem2BZRQc2M93A" base_State="_s5q3EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s512MErDEem2BZRQc2M93A" base_State="_s5sFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s545gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s59K8ErDEem2BZRQc2M93A" base_State="_s5t6YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s6Z24ErDEem2BZRQc2M93A" base_State="_s6YowErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s60GkErDEem2BZRQc2M93A" base_Pseudostate="_s6zfgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s61UsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s617wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s62i0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7GacErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7IPoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7NvMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7QygErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7SnsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7dm0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7eN4ErDEem2BZRQc2M93A" base_State="_s7dm0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7e08ErDEem2BZRQc2M93A" base_Pseudostate="_s7eN4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s7fcAErDEem2BZRQc2M93A" base_Pseudostate="_s7e08UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s7yW8ErDEem2BZRQc2M93A" base_Region="_s7dm0krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s78vAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s7_yUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8C1oErDEem2BZRQc2M93A" base_State="_s71aQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8IVMErDEem2BZRQc2M93A" base_State="_s73PcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8T7YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8VwkErDEem2BZRQc2M93A" base_State="_s8T7YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8WXoErDEem2BZRQc2M93A" base_Pseudostate="_s8VwkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s8W-sErDEem2BZRQc2M93A" base_Pseudostate="_s8WXoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s8ndYErDEem2BZRQc2M93A" base_Region="_s8T7YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s8x1cErDEem2BZRQc2M93A" base_State="_s8ndYUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s804wErDEem2BZRQc2M93A" base_State="_s8pSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s84jIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s89boErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9K3AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9LeEErDEem2BZRQc2M93A" base_State="_s9K3AUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9MsMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9NTQErDEem2BZRQc2M93A" base_Pseudostate="_s9MsMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s9dK4ErDEem2BZRQc2M93A" base_Region="_s9K3AkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9ltwErDEem2BZRQc2M93A" base_State="_s9dx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9oxEErDEem2BZRQc2M93A" base_State="_s9fAEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9rNUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s9wF0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s97sAErDEem2BZRQc2M93A" base_Pseudostate="_s97E8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s986IErDEem2BZRQc2M93A" base_State="_s97sAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s99hMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s9-IQErDEem2BZRQc2M93A" base_Pseudostate="_s99hMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-NY0ErDEem2BZRQc2M93A" base_Region="_s98TEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-TfcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-WiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-a0MErDEem2BZRQc2M93A" base_State="_s-QcIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-pdsErDEem2BZRQc2M93A" base_Pseudostate="_s-oPkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s-qr0ErDEem2BZRQc2M93A" base_State="_s-pdsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-rS4ErDEem2BZRQc2M93A" base_Pseudostate="_s-qr0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s-r58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s-4uQErDEem2BZRQc2M93A" base_Region="_s-pdskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_B4MErDEem2BZRQc2M93A" base_State="_s-5VUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_E7gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_HXwErDEem2BZRQc2M93A" base_State="_s-7xkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_LpMErDEem2BZRQc2M93A" base_State="_s-8_sErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_WoUErDEem2BZRQc2M93A" base_Pseudostate="_s_WBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_X2cErDEem2BZRQc2M93A" base_State="_s_WoUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_YdgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s_ZEkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_s_pjQErDEem2BZRQc2M93A" base_Region="_s_XPYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_vp4ErDEem2BZRQc2M93A" base_State="_s_pjQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_ytMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_s_1JcErDEem2BZRQc2M93A" base_State="_s_r_gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_s__hgErDEem2BZRQc2M93A" base_Pseudostate="_s_-6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAAvoErDEem2BZRQc2M93A" base_State="_tAAIkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tABWsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tACk0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tASccErDEem2BZRQc2M93A" base_Region="_tAAIkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWG0ErDEem2BZRQc2M93A" base_State="_tATDgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAWt4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAa_UErDEem2BZRQc2M93A" base_Pseudostate="_tAaYQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAbmYErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAc0gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tAdbkErDEem2BZRQc2M93A" base_Pseudostate="_tAc0gUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tAssIErDEem2BZRQc2M93A" base_Region="_tAa_UkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAtTMErDEem2BZRQc2M93A" base_State="_tAa_UUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tAyywErDEem2BZRQc2M93A" base_State="_tAt6QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA1PAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tA45YErDEem2BZRQc2M93A" base_State="_tAvvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBFGoErDEem2BZRQc2M93A" base_Pseudostate="_tBD4gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBGUwErDEem2BZRQc2M93A" base_State="_tBFGoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIJ8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBIxAErDEem2BZRQc2M93A" base_Pseudostate="_tBIJ8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tBVlUErDEem2BZRQc2M93A" base_Region="_tBFGokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBbr8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBevQErDEem2BZRQc2M93A" base_State="_tBWzcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBhLgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBrjkErDEem2BZRQc2M93A" base_Pseudostate="_tBq8gErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tBsxsErDEem2BZRQc2M93A" base_State="_tBrjkUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwErDEem2BZRQc2M93A" base_Pseudostate="_tBsxsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tBtYwkrDEem2BZRQc2M93A" base_Pseudostate="_tBtYwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tB8CQErDEem2BZRQc2M93A" base_Region="_tBrjkkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCFzQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCI2kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCL54ErDEem2BZRQc2M93A" base_State="_tB-egErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCRZcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCdmsErDEem2BZRQc2M93A" base_Pseudostate="_tCc_oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCe00ErDEem2BZRQc2M93A" base_State="_tCdmsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgC8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tCgqAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tCwhoErDEem2BZRQc2M93A" base_Region="_tCdmskrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tCzk8ErDEem2BZRQc2M93A" base_State="_tCwhoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC0zEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC6SoErDEem2BZRQc2M93A" base_Pseudostate="_tC5EgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tC65sErDEem2BZRQc2M93A" base_State="_tC6SoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC8u4ErDEem2BZRQc2M93A" base_Pseudostate="_tC7gwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tC9V8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tDN0oErDEem2BZRQc2M93A" base_Region="_tC6SokrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDTUMErDEem2BZRQc2M93A" base_State="_tDN0oUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDVJYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDW-kErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDjy4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tDkZ8ErDEem2BZRQc2M93A" base_State="_tDjy4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDloEErDEem2BZRQc2M93A" base_Pseudostate="_tDlBAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tDmPIErDEem2BZRQc2M93A" base_Pseudostate="_tDloEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tD378ErDEem2BZRQc2M93A" base_Region="_tDjy4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD7mUErDEem2BZRQc2M93A" base_State="_tD378UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tD8NYErDEem2BZRQc2M93A" base_State="_tD5KEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEBF4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tECUAErDEem2BZRQc2M93A" base_State="_tEBF4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEC7EErDEem2BZRQc2M93A" base_Pseudostate="_tECUAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEDiIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tEQWcErDEem2BZRQc2M93A" base_Region="_tEBs8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEXEIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEaHcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEb8oErDEem2BZRQc2M93A" base_State="_tESysErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEgOEErDEem2BZRQc2M93A" base_State="_tEUA0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEqmIErDEem2BZRQc2M93A" base_Pseudostate="_tEp_EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tEr0QErDEem2BZRQc2M93A" base_State="_tEqmIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEsbUErDEem2BZRQc2M93A" base_Pseudostate="_tEr0QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tEtCYErDEem2BZRQc2M93A" base_Pseudostate="_tEsbUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tE8S8ErDEem2BZRQc2M93A" base_Region="_tErNMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tE_WQErDEem2BZRQc2M93A" base_State="_tE86AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFAkYErDEem2BZRQc2M93A" base_State="_tE9hEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFE10ErDEem2BZRQc2M93A" base_Pseudostate="_tFEOwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFGD8ErDEem2BZRQc2M93A" base_State="_tFE10UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFIgMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFJHQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFVUgErDEem2BZRQc2M93A" base_Region="_tFE10krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFXwwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFYX0ErDEem2BZRQc2M93A" base_State="_tFWioErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFd3YErDEem2BZRQc2M93A" base_Pseudostate="_tFdQUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFeecErDEem2BZRQc2M93A" base_State="_tFd3YUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfFgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tFfskErDEem2BZRQc2M93A" base_Pseudostate="_tFfFgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tFu9IErDEem2BZRQc2M93A" base_Region="_tFd3YkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFyngErDEem2BZRQc2M93A" base_State="_tFvkMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tFz1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF4uIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tF7KYErDEem2BZRQc2M93A" base_State="_tF58QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF7xcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tF8_kErDEem2BZRQc2M93A" base_Pseudostate="_tF7xcUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tGLCAErDEem2BZRQc2M93A" base_Region="_tF58QUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGa5oErDEem2BZRQc2M93A" base_State="_tGLCAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGdV4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGgZMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGl4wErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGw34ErDEem2BZRQc2M93A" base_Pseudostate="_tGwQ0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tGxe8ErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGyGAUrDEem2BZRQc2M93A" base_Pseudostate="_tGyGAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tGzUIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHCksErDEem2BZRQc2M93A" base_Region="_tGw34krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHDLwErDEem2BZRQc2M93A" base_State="_tGw34UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHHdMErDEem2BZRQc2M93A" base_State="_tHDLwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHMVsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHOx8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHWtwErDEem2BZRQc2M93A" base_Pseudostate="_tHWGsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHX74ErDEem2BZRQc2M93A" base_State="_tHWtwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHYi8ErDEem2BZRQc2M93A" base_Pseudostate="_tHX74UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tHZxEErDEem2BZRQc2M93A" base_Pseudostate="_tHYi8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tHposErDEem2BZRQc2M93A" base_Region="_tHWtwkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tHyLkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH1O4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH3rIErDEem2BZRQc2M93A" base_State="_tHsE8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tH78kErDEem2BZRQc2M93A" base_State="_tHt6IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIIw4ErDEem2BZRQc2M93A" base_Pseudostate="_tIHiwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIJX8ErDEem2BZRQc2M93A" base_State="_tIIw4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tIKmEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tILNIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tIbEwErDEem2BZRQc2M93A" base_Region="_tIIw4krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIhLYErDEem2BZRQc2M93A" base_State="_tIbEwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tIjAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tImD4ErDEem2BZRQc2M93A" base_State="_tIc58ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJHoUErDEem2BZRQc2M93A" base_State="_tJHBQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJv6cErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tJxIkErDEem2BZRQc2M93A" base_State="_tJwhgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJxvoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tJyWsErDEem2BZRQc2M93A" base_Pseudostate="_tJxvoUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tJ_yEErDEem2BZRQc2M93A" base_Region="_tJwhgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKIU8ErDEem2BZRQc2M93A" base_State="_tKAZIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKKxMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKNNcErDEem2BZRQc2M93A" base_State="_tKC1YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKRe4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKh9kErDEem2BZRQc2M93A" base_Pseudostate="_tKgvcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tKjLsErDEem2BZRQc2M93A" base_State="_tKh9kUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKkZ0ErDEem2BZRQc2M93A" base_Pseudostate="_tKjLsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tKlA4ErDEem2BZRQc2M93A" base_Pseudostate="_tKkZ0UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tKzDUErDEem2BZRQc2M93A" base_Region="_tKh9kkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK6YEErDEem2BZRQc2M93A" base_State="_tKzDUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tK9bYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLAesErDEem2BZRQc2M93A" base_State="_tK1fkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tLMr8ErDEem2BZRQc2M93A" base_State="_tLME4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tLzv8ErDEem2BZRQc2M93A" base_Pseudostate="_tLzI4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tL0-EErDEem2BZRQc2M93A" base_State="_tLzv8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL1lIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tL2zQErDEem2BZRQc2M93A" base_Pseudostate="_tL1lIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMFcwErDEem2BZRQc2M93A" base_Region="_tLzv8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMLjYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMN_oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMRC8ErDEem2BZRQc2M93A" base_State="_tMH5AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMZl0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tMaz8ErDEem2BZRQc2M93A" base_State="_tMaM4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMbbAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tMcCEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tMsgwErDEem2BZRQc2M93A" base_Region="_tMaM4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM0ckErDEem2BZRQc2M93A" base_State="_tMtH0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM3f4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM58IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tM-NkErDEem2BZRQc2M93A" base_State="_tMxZQErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNMQAErDEem2BZRQc2M93A" base_Pseudostate="_tNLo8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNNeIErDEem2BZRQc2M93A" base_State="_tNMQAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNOsQErDEem2BZRQc2M93A" base_Pseudostate="_tNOFMErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tNP6YErDEem2BZRQc2M93A" base_Pseudostate="_tNOsQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tNiOQErDEem2BZRQc2M93A" base_Region="_tNMQAkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNtNYErDEem2BZRQc2M93A" base_State="_tNiOQUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tNw3wErDEem2BZRQc2M93A" base_State="_tNjcYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN0iIErDEem2BZRQc2M93A" base_State="_tNkqgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tN5aoErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOWtoErDEem2BZRQc2M93A" base_Pseudostate="_tOHdEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tObmIErDEem2BZRQc2M93A" base_State="_tOXUsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOc0QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tOeCYErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tO110ErDEem2BZRQc2M93A" base_Region="_tOXUsUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO6uUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tO9xoErDEem2BZRQc2M93A" base_State="_tO3D8ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPAN4ErDEem2BZRQc2M93A" base_State="_tO4SEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPKl8ErDEem2BZRQc2M93A" base_Pseudostate="_tPJ-4ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPLNAErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPL0EErDEem2BZRQc2M93A" base_Pseudostate="_tPLNAUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPMbIUrDEem2BZRQc2M93A" base_Pseudostate="_tPMbIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tPbrsErDEem2BZRQc2M93A" base_Region="_tPKl8krDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPc50ErDEem2BZRQc2M93A" base_State="_tPKl8UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPiZYErDEem2BZRQc2M93A" base_State="_tPc50UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPk1oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPmq0ErDEem2BZRQc2M93A" base_State="_tPfWEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tPyRAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tPzfIErDEem2BZRQc2M93A" base_State="_tPy4EErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP1UUErDEem2BZRQc2M93A" base_Pseudostate="_tPzfIUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tP17YErDEem2BZRQc2M93A" base_Pseudostate="_tP1UUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQDWwErDEem2BZRQc2M93A" base_Region="_tPy4EUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQI2UErDEem2BZRQc2M93A" base_State="_tQDWwUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQLSkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQNu0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQW4wErDEem2BZRQc2M93A" base_Pseudostate="_tQWRsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQXf0ErDEem2BZRQc2M93A" base_State="_tQW4wUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQYG4UrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tQZVAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tQvTQErDEem2BZRQc2M93A" base_Region="_tQW4wkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ32IErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tQ-j0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRBAEErDEem2BZRQc2M93A" base_State="_tQxvgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tREDYErDEem2BZRQc2M93A" base_State="_tQy9oErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRUiEErDEem2BZRQc2M93A" base_Pseudostate="_tRT7AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tRVwMErDEem2BZRQc2M93A" base_State="_tRUiEUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRW-UErDEem2BZRQc2M93A" base_Pseudostate="_tRVwMUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tRYMcUrDEem2BZRQc2M93A" base_Pseudostate="_tRYMcErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tRxOAErDEem2BZRQc2M93A" base_Region="_tRUiEkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR6_AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tR-CUErDEem2BZRQc2M93A" base_State="_tRycIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSBssErDEem2BZRQc2M93A" base_State="_tR04YErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSF-IErDEem2BZRQc2M93A" base_State="_tR2GgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSRkUErDEem2BZRQc2M93A" base_Pseudostate="_tSQ9QErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSSycErDEem2BZRQc2M93A" base_State="_tSRkUUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSTZgErDEem2BZRQc2M93A" base_Pseudostate="_tSSycUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tSUnoErDEem2BZRQc2M93A" base_Pseudostate="_tSUAkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tSpXwErDEem2BZRQc2M93A" base_Region="_tSRkUkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSxTkErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tSzIwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS098ErDEem2BZRQc2M93A" base_State="_tSr0AErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tS4oUErDEem2BZRQc2M93A" base_State="_tStCIErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTEOgErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTFcoErDEem2BZRQc2M93A" base_State="_tTEOgUrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTGDsErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_tTHR0ErDEem2BZRQc2M93A" base_Pseudostate="_tTGqwErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_tTS4AErDEem2BZRQc2M93A" base_Region="_tTEOgkrDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTY-oErDEem2BZRQc2M93A" base_State="_tTTfEErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTaz0ErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTcpAErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tTfsUErDEem2BZRQc2M93A"/>
  <UMLRTStateMachines:RTState xmi:id="_tUACoErDEem2BZRQc2M93A" base_State="_tT_bkErDEem2BZRQc2M93A"/>
  <UMLRealTime:Capsule xmi:id="_vD8jMEr4EemA4_kRIR1Qqg" base_Class="_vDeCEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_vEJXgEr4EemA4_kRIR1Qqg" base_StateMachine="_vD9xUEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:ProtocolContainer xmi:id="_vENB4Er4EemA4_kRIR1Qqg" base_Package="_vEJ-kEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:Protocol xmi:id="_vETIgEr4EemA4_kRIR1Qqg" base_Collaboration="_vENo8Er4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_vEfVwEr4EemA4_kRIR1Qqg" base_Interface="_vETvkEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTMessageSet xmi:id="_vEofsEr4EemA4_kRIR1Qqg" base_Interface="_vEU9sEr4EemA4_kRIR1Qqg" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_vEqU4Er4EemA4_kRIR1Qqg" base_Interface="_vEWL0Er4EemA4_kRIR1Qqg" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_vFFLoEr4EemA4_kRIR1Qqg" base_Port="_vE7aoEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_vJ4zIEr4EemA4_kRIR1Qqg" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_vDeCEEr4EemA4_kRIR1Qqg" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_vKDLMEr4EemA4_kRIR1Qqg" base_Class="_vDeCEEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_vKtSgEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_vKqPMEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_vLIwUEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_vLA0gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTRegion xmi:id="_vLptsEr4EemA4_kRIR1Qqg" base_Region="_vLn4gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vLy3oEr4EemA4_kRIR1Qqg" base_Pseudostate="_vLq70Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTState xmi:id="_vL8BkEr4EemA4_kRIR1Qqg" base_State="_vL0FwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vMCIMEr4EemA4_kRIR1Qqg" base_Pseudostate="_vL9PsEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_vNYMAEr4EemA4_kRIR1Qqg" isWired="false" base_Port="_vNReUEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_vNjLIEr4EemA4_kRIR1Qqg" isPublish="true" isWired="false" base_Port="_vNgu4Er4EemA4_kRIR1Qqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_vRcMoEr4EemA4_kRIR1Qqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_vRjhYEr4EemA4_kRIR1Qqg" base_Class="_sMZ5EAgoEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_vSxpYEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_vSv0MEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_vS7aYEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_vS3I8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vUeSgEr4EemA4_kRIR1Qqg" base_Pseudostate="_vUaBEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vbC0kEr4EemA4_kRIR1Qqg" base_Pseudostate="_vbCNgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vbIUIEr4EemA4_kRIR1Qqg" base_Pseudostate="_vbEpwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vbOawEr4EemA4_kRIR1Qqg" base_Pseudostate="_vbNzsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vbW9oEr4EemA4_kRIR1Qqg" base_Pseudostate="_vbQ3AEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vg8BMEr4EemA4_kRIR1Qqg" base_Pseudostate="_vg6zEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vg9PUEr4EemA4_kRIR1Qqg" base_Pseudostate="_vg8oQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vhEkEEr4EemA4_kRIR1Qqg" base_Pseudostate="_vhA5sEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vhHAUEr4EemA4_kRIR1Qqg" base_Pseudostate="_vhGZQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vmBVgEr4EemA4_kRIR1Qqg" base_Pseudostate="_vmAHYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vmGOAEr4EemA4_kRIR1Qqg" base_Pseudostate="_vmCjoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vmLtkEr4EemA4_kRIR1Qqg" base_Pseudostate="_vmKfcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vmRNIEr4EemA4_kRIR1Qqg" base_Pseudostate="_vmNiwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vsg_EEr4EemA4_kRIR1Qqg" base_Pseudostate="_vsd7wEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vsjbUEr4EemA4_kRIR1Qqg" base_Pseudostate="_vsi0QEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vsrXIEr4EemA4_kRIR1Qqg" base_Pseudostate="_vsnFsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vstMUEr4EemA4_kRIR1Qqg" base_Pseudostate="_vsslQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vy23oEr4EemA4_kRIR1Qqg" base_Pseudostate="_vyymMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vzETAEr4EemA4_kRIR1Qqg" base_Pseudostate="_vy-zcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vzRHUEr4EemA4_kRIR1Qqg" base_Pseudostate="_vzM14Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_vzbfYEr4EemA4_kRIR1Qqg" base_Pseudostate="_vzYcEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wCLGAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wCKe8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wCRzsEr4EemA4_kRIR1Qqg" base_Pseudostate="_wCNiQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wCUP8Er4EemA4_kRIR1Qqg" base_Pseudostate="_wCTo4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wCWsMEr4EemA4_kRIR1Qqg" base_Pseudostate="_wCVeEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wGF8sEr4EemA4_kRIR1Qqg" base_Pseudostate="_wGEukEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wGLcQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wGIY8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wGPGoEr4EemA4_kRIR1Qqg" base_Pseudostate="_wGN4gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wGQUwEr4EemA4_kRIR1Qqg" base_Pseudostate="_wGPtsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wJqOEEr4EemA4_kRIR1Qqg" base_Pseudostate="_wJpnAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wJsDQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wJq1IEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wJyw8Er4EemA4_kRIR1Qqg" base_Pseudostate="_wJyJ4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wJz_EEr4EemA4_kRIR1Qqg" base_Pseudostate="_wJzYAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wMs7AEr4EemA4_kRIR1Qqg" base_Pseudostate="_wMsT8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wMvXQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wMuJIEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wMwlYEr4EemA4_kRIR1Qqg" base_Pseudostate="_wMv-UEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wMxzgEr4EemA4_kRIR1Qqg" base_Pseudostate="_wMxMcEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_wSPiUEr4EemA4_kRIR1Qqg" isWired="false" base_Port="_wSOUMEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_wSTMsEr4EemA4_kRIR1Qqg" isPublish="true" isWired="false" base_Port="_wSQJYEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_wSpK8Er4EemA4_kRIR1Qqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_wSuqgEr4EemA4_kRIR1Qqg" base_Class="_RLyKYAgzEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_wTNysEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_wTI6MEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_wTT5UEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_wTRdEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wTopcEr4EemA4_kRIR1Qqg" base_Pseudostate="_wTm0QEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wUjPcEr4EemA4_kRIR1Qqg" base_Pseudostate="_wUioYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wUovAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wUlrsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wUp9IEr4EemA4_kRIR1Qqg" base_Pseudostate="_wUpWEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wUtngEr4EemA4_kRIR1Qqg" base_Pseudostate="_wUtAcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wWESYEr4EemA4_kRIR1Qqg" base_Pseudostate="_wWBPEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wWHVsEr4EemA4_kRIR1Qqg" base_Pseudostate="_wWGuoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wWKZAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wWIj0Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wWP4kEr4EemA4_kRIR1Qqg" base_Pseudostate="_wWOqcEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_wYQqwEr4EemA4_kRIR1Qqg" isWired="false" base_Port="_wYQDsEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_wYRR0kr4EemA4_kRIR1Qqg" isPublish="true" isWired="false" base_Port="_wYQqwUr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_wbNREEr4EemA4_kRIR1Qqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_wbSJkEr4EemA4_kRIR1Qqg" base_Class="_xCGHkAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_wb3_cEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_wb3YYUr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_wcAiUEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_wb-GEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wc9kkEr4EemA4_kRIR1Qqg" base_Pseudostate="_wc89gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wdESQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wdCdEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wgnVgEr4EemA4_kRIR1Qqg" base_Pseudostate="_wgmHYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wgojoEr4EemA4_kRIR1Qqg" base_Pseudostate="_wgn8kEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wguqQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wgs1EEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wgxtkEr4EemA4_kRIR1Qqg" base_Pseudostate="_wgwfcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wjxXMEr4EemA4_kRIR1Qqg" base_Pseudostate="_wjuT4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wjzMYUr4EemA4_kRIR1Qqg" base_Pseudostate="_wjzMYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wj1ooEr4EemA4_kRIR1Qqg" base_Pseudostate="_wj0agEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wnEi0Er4EemA4_kRIR1Qqg" base_Pseudostate="_wnCGkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wnFJ4Er4EemA4_kRIR1Qqg" base_Pseudostate="_wnEi0kr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wnG_EEr4EemA4_kRIR1Qqg" base_Pseudostate="_wnFw8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wnMeoEr4EemA4_kRIR1Qqg" base_Pseudostate="_wnL3kEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wq1ogEr4EemA4_kRIR1Qqg" base_Pseudostate="_wqzzUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wq6hAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wq558Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wq89QEr4EemA4_kRIR1Qqg" base_Pseudostate="_wq8WMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wrAAkEr4EemA4_kRIR1Qqg" base_Pseudostate="_wq-LYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wuHmAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wuFw0Ur4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wuI0IEr4EemA4_kRIR1Qqg" base_Pseudostate="_wuINEUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wuKCQEr4EemA4_kRIR1Qqg" base_Pseudostate="_wuJbMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wuO6wEr4EemA4_kRIR1Qqg" base_Pseudostate="_wuOTsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wwMCkEr4EemA4_kRIR1Qqg" base_Pseudostate="_wwK0cEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wwMpoEr4EemA4_kRIR1Qqg" base_Pseudostate="_wwMCkkr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wwNQsEr4EemA4_kRIR1Qqg" base_Pseudostate="_wwMpokr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wwPs8Er4EemA4_kRIR1Qqg" base_Pseudostate="_wwOe0Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wy1t8Er4EemA4_kRIR1Qqg" base_Pseudostate="_wy1G4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wy2VAEr4EemA4_kRIR1Qqg" base_Pseudostate="_wy1t8kr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wy3jIEr4EemA4_kRIR1Qqg" base_Pseudostate="_wy28EEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_wy5YUEr4EemA4_kRIR1Qqg" base_Pseudostate="_wy4xQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w0zc0Ur4EemA4_kRIR1Qqg" base_Pseudostate="_w0zc0Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w00D4kr4EemA4_kRIR1Qqg" base_Pseudostate="_w00D4Ur4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w01SAEr4EemA4_kRIR1Qqg" base_Pseudostate="_w00q8Ur4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w03uQEr4EemA4_kRIR1Qqg" base_Pseudostate="_w02gIEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w2A9wEr4EemA4_kRIR1Qqg" base_Pseudostate="_w1_IkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w2A9w0r4EemA4_kRIR1Qqg" base_Pseudostate="_w2A9wkr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w2CL4Er4EemA4_kRIR1Qqg" base_Pseudostate="_w2Bk0Ur4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_w2Cy8Ur4EemA4_kRIR1Qqg" base_Pseudostate="_w2Cy8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xBcxsEr4EemA4_kRIR1Qqg" base_Pseudostate="_xBZuYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xBgcEEr4EemA4_kRIR1Qqg" base_Pseudostate="_xBfN8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xBnw0Er4EemA4_kRIR1Qqg" base_Pseudostate="_xBktgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xBo-8Er4EemA4_kRIR1Qqg" base_Pseudostate="_xBoX4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xDjDcEr4EemA4_kRIR1Qqg" base_Pseudostate="_xDicYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xDk4oEr4EemA4_kRIR1Qqg" base_Pseudostate="_xDjqgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xDmt0Er4EemA4_kRIR1Qqg" base_Pseudostate="_xDmGwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xDsNYEr4EemA4_kRIR1Qqg" base_Pseudostate="_xDpxIEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xEznsUr4EemA4_kRIR1Qqg" base_Pseudostate="_xEznsEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xE1c4Er4EemA4_kRIR1Qqg" base_Pseudostate="_xE010Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xE4gMEr4EemA4_kRIR1Qqg" base_Pseudostate="_xE3SEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xE8xoEr4EemA4_kRIR1Qqg" base_Pseudostate="_xE68cEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xF07YEr4EemA4_kRIR1Qqg" base_Pseudostate="_xF0UUUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xF7CAEr4EemA4_kRIR1Qqg" base_Pseudostate="_xF3XoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xF8QIEr4EemA4_kRIR1Qqg" base_Pseudostate="_xF7pEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xF_TcEr4EemA4_kRIR1Qqg" base_Pseudostate="_xF-sYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xHnrIEr4EemA4_kRIR1Qqg" base_Pseudostate="_xHl18Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xHpgUUr4EemA4_kRIR1Qqg" base_Pseudostate="_xHpgUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xHqucEr4EemA4_kRIR1Qqg" base_Pseudostate="_xHqHYUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xHr8kEr4EemA4_kRIR1Qqg" base_Pseudostate="_xHrVgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xJ0DgEr4EemA4_kRIR1Qqg" base_Pseudostate="_xJzccEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xJ5jEEr4EemA4_kRIR1Qqg" base_Pseudostate="_xJ2fwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xJ8mYEr4EemA4_kRIR1Qqg" base_Pseudostate="_xJ6xMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xJ_psEr4EemA4_kRIR1Qqg" base_Pseudostate="_xJ90gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xLKHUUr4EemA4_kRIR1Qqg" base_Pseudostate="_xLKHUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xLLVcEr4EemA4_kRIR1Qqg" base_Pseudostate="_xLKuYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xLL8gUr4EemA4_kRIR1Qqg" base_Pseudostate="_xLL8gEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xLOYwEr4EemA4_kRIR1Qqg" base_Pseudostate="_xLMjkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xMwCwEr4EemA4_kRIR1Qqg" base_Pseudostate="_xMuNkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xMwp0Ur4EemA4_kRIR1Qqg" base_Pseudostate="_xMwp0Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xMx38Ur4EemA4_kRIR1Qqg" base_Pseudostate="_xMx38Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xM0UMEr4EemA4_kRIR1Qqg" base_Pseudostate="_xMztIEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xNvhQEr4EemA4_kRIR1Qqg" base_Pseudostate="_xNu6MUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xNxWcEr4EemA4_kRIR1Qqg" base_Pseudostate="_xNwIUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xNzLoEr4EemA4_kRIR1Qqg" base_Pseudostate="_xNykkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xN1A0Er4EemA4_kRIR1Qqg" base_Pseudostate="_xN0ZwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xPd_kEr4EemA4_kRIR1Qqg" base_Pseudostate="_xPdYgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xPfNsEr4EemA4_kRIR1Qqg" base_Pseudostate="_xPemoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xPhp8Er4EemA4_kRIR1Qqg" base_Pseudostate="_xPhC4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xPiRAEr4EemA4_kRIR1Qqg" base_Pseudostate="_xPhp8Ur4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xQesMUr4EemA4_kRIR1Qqg" base_Pseudostate="_xQesMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xQf6UEr4EemA4_kRIR1Qqg" base_Pseudostate="_xQfTQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xQghYEr4EemA4_kRIR1Qqg" base_Pseudostate="_xQf6Ukr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xQkLwEr4EemA4_kRIR1Qqg" base_Pseudostate="_xQiWkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xSL8YUr4EemA4_kRIR1Qqg" base_Pseudostate="_xSL8YEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xSRb8Er4EemA4_kRIR1Qqg" base_Pseudostate="_xSOYoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xSVGUEr4EemA4_kRIR1Qqg" base_Pseudostate="_xSUfQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xSYwsEr4EemA4_kRIR1Qqg" base_Pseudostate="_xSWUcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xUN8sEr4EemA4_kRIR1Qqg" base_Pseudostate="_xUNVoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xUPK0Er4EemA4_kRIR1Qqg" base_Pseudostate="_xUOjwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xUQY8Er4EemA4_kRIR1Qqg" base_Pseudostate="_xUPx4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xUSOIEr4EemA4_kRIR1Qqg" base_Pseudostate="_xUQY8Ur4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_xkZtwEr4EemA4_kRIR1Qqg" isWired="false" base_Port="_xkWqcEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:RTPort xmi:id="_xkbi8Er4EemA4_kRIR1Qqg" isPublish="true" isWired="false" base_Port="_xka74Er4EemA4_kRIR1Qqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_xlZMQEr4EemA4_kRIR1Qqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:CapsuleProperties xmi:id="_xlbBcEr4EemA4_kRIR1Qqg" base_Class="_zpdLYAgmEea_md0mpENoqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_xl6JoEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_xl5ikEr4EemA4_kRIR1Qqg"/>
  <RTCppProperties:ParameterProperties xmi:id="_xmDTkEr4EemA4_kRIR1Qqg" type="pmd::Message" base_Parameter="_xmCFcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xmq-oEr4EemA4_kRIR1Qqg" base_Pseudostate="_xmqXkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xqg80Er4EemA4_kRIR1Qqg" base_Pseudostate="_xqgVwUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xqhj4Ur4EemA4_kRIR1Qqg" base_Pseudostate="_xqhj4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xqlOQEr4EemA4_kRIR1Qqg" base_Pseudostate="_xqjZEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xqo4oEr4EemA4_kRIR1Qqg" base_Pseudostate="_xqoRkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xtYDkEr4EemA4_kRIR1Qqg" base_Pseudostate="_xtXcgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xtbG4Er4EemA4_kRIR1Qqg" base_Pseudostate="_xtYqoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xtfYUEr4EemA4_kRIR1Qqg" base_Pseudostate="_xtcVAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xthNgEr4EemA4_kRIR1Qqg" base_Pseudostate="_xtgmcEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xvVLYEr4EemA4_kRIR1Qqg" base_Pseudostate="_xvT9QEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xvZc0Er4EemA4_kRIR1Qqg" base_Pseudostate="_xvXAkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xvaq8Er4EemA4_kRIR1Qqg" base_Pseudostate="_xvaD4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xvbSAUr4EemA4_kRIR1Qqg" base_Pseudostate="_xvbSAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xxgVoUr4EemA4_kRIR1Qqg" base_Pseudostate="_xxgVoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xxhjwEr4EemA4_kRIR1Qqg" base_Pseudostate="_xxg8sUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xxlOIEr4EemA4_kRIR1Qqg" base_Pseudostate="_xxix4Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xxoRcEr4EemA4_kRIR1Qqg" base_Pseudostate="_xxnDUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xynv8Ur4EemA4_kRIR1Qqg" base_Pseudostate="_xynv8Er4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xyo-EEr4EemA4_kRIR1Qqg" base_Pseudostate="_xyoXAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xyt2kEr4EemA4_kRIR1Qqg" base_Pseudostate="_xyraUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_xyvrwUr4EemA4_kRIR1Qqg" base_Pseudostate="_xyvrwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x0pwQUr4EemA4_kRIR1Qqg" base_Pseudostate="_x0pwQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x0qXUUr4EemA4_kRIR1Qqg" base_Pseudostate="_x0qXUEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x0q-YUr4EemA4_kRIR1Qqg" base_Pseudostate="_x0q-YEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x0sMgUr4EemA4_kRIR1Qqg" base_Pseudostate="_x0sMgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x3uSYEr4EemA4_kRIR1Qqg" base_Pseudostate="_x3trUUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x3xVsEr4EemA4_kRIR1Qqg" base_Pseudostate="_x3wHkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x31nIEr4EemA4_kRIR1Qqg" base_Pseudostate="_x30ZAEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x32OMUr4EemA4_kRIR1Qqg" base_Pseudostate="_x32OMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x4-PkUr4EemA4_kRIR1Qqg" base_Pseudostate="_x4-PkEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x4_dsEr4EemA4_kRIR1Qqg" base_Pseudostate="_x4-2oUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x5ChAEr4EemA4_kRIR1Qqg" base_Pseudostate="_x5AEwEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x5IAkEr4EemA4_kRIR1Qqg" base_Pseudostate="_x5HZgEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x65iMEr4EemA4_kRIR1Qqg" base_Pseudostate="_x647IUr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x67-cEr4EemA4_kRIR1Qqg" base_Pseudostate="_x66JQEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x7A28Er4EemA4_kRIR1Qqg" base_Pseudostate="_x69zoEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x7CFEUr4EemA4_kRIR1Qqg" base_Pseudostate="_x7CFEEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x8IRQEr4EemA4_kRIR1Qqg" base_Pseudostate="_x8HqMEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x8I4UUr4EemA4_kRIR1Qqg" base_Pseudostate="_x8I4UEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x8KGcEr4EemA4_kRIR1Qqg" base_Pseudostate="_x8JfYEr4EemA4_kRIR1Qqg"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_x8LUkEr4EemA4_kRIR1Qqg" base_Pseudostate="_x8KtgEr4EemA4_kRIR1Qqg"/>
  <UMLRealTime:CapsulePart xmi:id="_yKmLEEr4EemA4_kRIR1Qqg" base_Property="_yKgEcEr4EemA4_kRIR1Qqg"/>
</xmi:XMI>

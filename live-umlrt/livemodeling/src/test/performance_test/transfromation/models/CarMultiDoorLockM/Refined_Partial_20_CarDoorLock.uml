<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_0vhJYNq9EeahI77Vg4Dl9Q" name="CarDoorLock">
    <eAnnotations xmi:id="_R8398NrKEeahI77Vg4Dl9Q" source="UMLRT_Default_top">
      <details xmi:id="_R84lANrKEeahI77Vg4Dl9Q" key="top_name" value="Car"/>
    </eAnnotations>
    <eAnnotations xmi:id="_42_uQErPEemy24m-3VMPIw" source="dummy"/>
    <eAnnotations xmi:id="_Fj8c0EriEemNEJQb8YJtnQ" source="dummy"/>
    <eAnnotations xmi:id="_DMaqUEsaEemWoPv9VMmbdw" source="dummy"/>
    <eAnnotations xmi:id="_uITcoEvwEem-E9eXKO3KUw" source="dummy"/>
    <eAnnotations xmi:id="_UV7yUEwSEemQqtWXG-tJOg" source="dummy"/>
    <eAnnotations xmi:id="__rXFQExUEemmpL4yKAPHyw" source="dummy"/>
    <eAnnotations xmi:id="__ZYrAEyBEemR0-jQ059LrA" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_iSbRENq_EeahI77Vg4Dl9Q" name="Car" isActive="true">
      <ownedAttribute xmi:id="_GVbv0NrBEeahI77Vg4Dl9Q" name="door1" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SnJA8NrgEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sm8zsNrgEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LNSPkNrBEeahI77Vg4Dl9Q" name="centralLock" visibility="protected" type="_s7aB8Nq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_V8mg4NrgEeal5dJZNvUqew" name="door2" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_5AKKQNrgEeal5dJZNvUqew" name="door3" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_AVcVwNrhEeal5dJZNvUqew" name="door4" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sj5dwEr3Eemiqfc15bo8Zw" name="dbgAgent" type="_sRqeQEr3Eemiqfc15bo8Zw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sj6r4Er3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sj6r4Ur3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_U4X_YNrCEeahI77Vg4Dl9Q" name="RTConnector1">
        <end xmi:id="_U4YmcNrCEeahI77Vg4Dl9Q" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_U4ZNgNrCEeahI77Vg4Dl9Q" partWithPort="_GVbv0NrBEeahI77Vg4Dl9Q" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_bwP6gNrgEeal5dJZNvUqew" name="RTConnector2">
        <end xmi:id="_bwRvsNrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_bwRvsdrgEeal5dJZNvUqew" partWithPort="_V8mg4NrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-3w20NrgEeal5dJZNvUqew" name="RTConnector3">
        <end xmi:id="_-3ysANrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-3zTENrgEeal5dJZNvUqew" partWithPort="_5AKKQNrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_EUhacNrhEeal5dJZNvUqew" name="RTConnector4">
        <end xmi:id="_EUjPoNrhEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_EUjPodrhEeal5dJZNvUqew" partWithPort="_AVcVwNrhEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ls0UUNq_EeahI77Vg4Dl9Q" name="Door" isActive="true">
      <ownedAttribute xmi:id="_yAJcQNrBEeahI77Vg4Dl9Q" name="lock" visibility="protected" type="_xS9RANq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zv8SANrZEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zvPucNrZEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_-jLfANrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f3zGENrdEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f3ouANrdEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_-n9H8NraEeal5dJZNvUqew" name="RTConnector1">
        <end xmi:id="_-oCngNraEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-oCngdraEeal5dJZNvUqew" partWithPort="_yAJcQNrBEeahI77Vg4Dl9Q" role="_WvH7ENrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xS9RANq_EeahI77Vg4Dl9Q" name="Lock" classifierBehavior="__KYzgNrCEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WvH7ENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-JnYYNrVEeaBAosuR3tfxw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-JjG8NrVEeaBAosuR3tfxw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sh2PUEr3Eemiqfc15bo8Zw" name="dbgPortForLock" visibility="protected" type="_sSlEQEr3Eemiqfc15bo8Zw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sh22YEr3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sh3dcEr3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="__KYzgNrCEeahI77Vg4Dl9Q" name="lockSM">
        <region xmi:id="_BAOTwNrDEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_v7FiUNrDEeahI77Vg4Dl9Q" name="twiceLock" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_D3ixQNrmEeal5dJZNvUqew" name="replyTwiceUnlock">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
            </effect>
            <trigger xmi:id="_GTLJMNrFEeahI77Vg4Dl9Q" name="twiceLock" event="_XN1s0NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sjRysEr3Eemiqfc15bo8Zw" name="Trans__Initial146" source="_Cz87MNrDEeahI77Vg4Dl9Q" target="_sjNhQEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sj0lQEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Initial1&quot;,&quot;locked&quot;,&quot;To__locked__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Initial1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sjWEIEr3Eemiqfc15bo8Zw" name="From__locked__47" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_sjNhQEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sjueoEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;locked&quot;,&quot;locked&quot;,&quot;To__locked__50&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;locked&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sjbjsEr3Eemiqfc15bo8Zw" name="PME_Trig48" event="_Zlrt8NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
            <trigger xmi:id="_sjhqUEr3Eemiqfc15bo8Zw" name="PME_Trig49" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sh2PUEr3Eemiqfc15bo8Zw"/>
          </transition>
          <transition xmi:id="_sjl7wEr3Eemiqfc15bo8Zw" name="To__locked__50" guard="_sj1zYUr3Eemiqfc15bo8Zw" source="_sjNhQEr3Eemiqfc15bo8Zw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_sj1zYUr3Eemiqfc15bo8Zw" name="PME_checkDecesion51">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sj1zYEr3Eemiqfc15bo8Zw" name="PME_checkDecesion51">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__locked__50&quot;,&quot;locked&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_Cz87MNrDEeahI77Vg4Dl9Q" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_FLMfYNrDEeahI77Vg4Dl9Q" name="locked"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sjNhQEr3Eemiqfc15bo8Zw" name="DecesionPoint__45" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_siUJYUr3Eemiqfc15bo8Zw" name="loadHeap" specification="_siUJYEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_siVXgUr3Eemiqfc15bo8Zw" name="unLoadHeap" specification="_siVXgEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sinrYEr3Eemiqfc15bo8Zw" name="sendMessage" specification="_sinEUEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;lockPort&quot;) {
  if(message.signal==&quot;lockStatus&quot;) {
   if(message.payload.size()==1){
    lockPort.lockStatus( boost::any_cast&lt;bool>(message.payload[&quot;locked&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sixcYEr3Eemiqfc15bo8Zw" name="sendInternalMessage" specification="_siw1UEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sjE-YUr3Eemiqfc15bo8Zw" name="initForPMD" specification="_sjE-YEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Lock::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Lock::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;lockStatus&quot;,{ {&quot;locked&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;unlock&quot;,{});
this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;lock&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForLock&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_siUJYEr3Eemiqfc15bo8Zw" name="loadHeap" visibility="private" method="_siUJYUr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_siVXgEr3Eemiqfc15bo8Zw" name="unLoadHeap" visibility="private" method="_siVXgUr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_sinEUEr3Eemiqfc15bo8Zw" name="sendMessage" visibility="private" method="_sinrYEr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_sioScEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sio5gEr3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_siw1UEr3Eemiqfc15bo8Zw" name="sendInternalMessage" visibility="private" method="_sixcYEr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_siyqgEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_siz4oEr3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sjE-YEr3Eemiqfc15bo8Zw" name="initForPMD" visibility="private" method="_sjE-YUr3Eemiqfc15bo8Zw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s7aB8Nq_EeahI77Vg4Dl9Q" name="CentralLock" classifierBehavior="_mTK68NrFEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_k3gyENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fVbt8NrfEeal5dJZNvUqew" value="4"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fVTyINrfEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Cey60NrUEeaBAosuR3tfxw" name="startupTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_pzTr8NroEeal5dJZNvUqew" name="tmpInt">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_t1vmoNroEeal5dJZNvUqew" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_u29zENroEeal5dJZNvUqew" name="locksCount">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_zKDY4NroEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sU9p4Er3Eemiqfc15bo8Zw" name="dbgPortForCentralLock" visibility="protected" type="_sSlEQEr3Eemiqfc15bo8Zw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sU-Q8Er3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sU-Q8Ur3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mTK68NrFEeahI77Vg4Dl9Q" name="centralLockSM">
        <region xmi:id="_oPcaYNrFEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_HV4RcNrHEeahI77Vg4Dl9Q" name="Initial1__StartingUp__2" source="_64F7ENrGEeahI77Vg4Dl9Q" target="_0JLVkNrSEeaBAosuR3tfxw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sepxYEr3Eemiqfc15bo8Zw" name="Initial1__StartingUp__2__36">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_mrtE0NrHEeahI77Vg4Dl9Q" name="doorsOpen__WaitAllDoorBeClosed__5" source="_7a5GINrGEeahI77Vg4Dl9Q" target="_IcetINrHEeahI77Vg4Dl9Q">
            <trigger xmi:id="_ZbNNMNrJEeahI77Vg4Dl9Q" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_dJOzkNrIEeahI77Vg4Dl9Q" name="WaitAllDoorBeOpened__Choice1__1" source="_cd7pQNrHEeahI77Vg4Dl9Q" target="_bRbzYNrnEeal5dJZNvUqew">
            <trigger xmi:id="_v44UINrJEeahI77Vg4Dl9Q" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_5LhOENrSEeaBAosuR3tfxw" name="StartingUp__doorsOpen__3" source="_0JLVkNrSEeaBAosuR3tfxw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <trigger xmi:id="_HlMpYNrTEeaBAosuR3tfxw" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_ZcttcNrnEeal5dJZNvUqew" name="doorsClosed__WaitAllDoorBeOpened__7" source="_BIWYMNrHEeahI77Vg4Dl9Q" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <trigger xmi:id="_31v2gNrpEeal5dJZNvUqew" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_jCt-YNrnEeal5dJZNvUqew" name="Choice1__doorsOpen__6" guard="_l54t4NrpEeal5dJZNvUqew" source="_bRbzYNrnEeal5dJZNvUqew" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_l54t4NrpEeal5dJZNvUqew">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_l54t4drpEeal5dJZNvUqew">
                <language>C++</language>
                <body>    return tmpInt==locksCount;
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_nKsgYNrnEeal5dJZNvUqew" name="Choice1__WaitAllDoorBeOpened__4" source="_bRbzYNrnEeal5dJZNvUqew" target="_cd7pQNrHEeahI77Vg4Dl9Q"/>
          <transition xmi:id="_sZkdEEr3Eemiqfc15bo8Zw" name="9" source="_bRbzYNrnEeal5dJZNvUqew" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_seQv0Er3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sZu1IEr3Eemiqfc15bo8Zw" name="From__doorsOpen__10" source="_7a5GINrGEeahI77Vg4Dl9Q" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sd9N0Er3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;doorsOpen&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sZ50QEr3Eemiqfc15bo8Zw" name="PME_Trig11" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sU9p4Er3Eemiqfc15bo8Zw"/>
            <trigger xmi:id="_saHPoEr3Eemiqfc15bo8Zw" name="PME_Trig12" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_saPLcEr3Eemiqfc15bo8Zw" name="From__WaitAllDoorBeOpened__13" source="_cd7pQNrHEeahI77Vg4Dl9Q" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sdpr0Er3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeOpened&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeOpened&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeOpened&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeOpened&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeOpened&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitAllDoorBeOpened&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sag4QEr3Eemiqfc15bo8Zw" name="PME_Trig14" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sU9p4Er3Eemiqfc15bo8Zw"/>
            <trigger xmi:id="_sawI0Er3Eemiqfc15bo8Zw" name="PME_Trig15" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sbAngEr3Eemiqfc15bo8Zw" name="From__doorsClosed__16" source="_BIWYMNrHEeahI77Vg4Dl9Q" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sdy1wEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;doorsClosed&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sbK_kEr3Eemiqfc15bo8Zw" name="PME_Trig17" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sU9p4Er3Eemiqfc15bo8Zw"/>
            <trigger xmi:id="_sbUwkEr3Eemiqfc15bo8Zw" name="PME_Trig18" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sbfIoEr3Eemiqfc15bo8Zw" name="From__WaitAllDoorBeClosed__19" source="_IcetINrHEeahI77Vg4Dl9Q" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sdc3gEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeClosed&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeClosed&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeClosed&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeClosed&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;WaitAllDoorBeClosed&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;WaitAllDoorBeClosed&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sbvAQEr3Eemiqfc15bo8Zw" name="PME_Trig20" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sU9p4Er3Eemiqfc15bo8Zw"/>
            <trigger xmi:id="_sb70kEr3Eemiqfc15bo8Zw" name="PME_Trig21" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
            <trigger xmi:id="_scEXcEr3Eemiqfc15bo8Zw" name="PME_Trig22" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_scOIcEr3Eemiqfc15bo8Zw" name="From__StartingUp__23" source="_0JLVkNrSEeaBAosuR3tfxw" target="_sY35gEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_seD7gEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;WaitAllDoorBeOpened&quot;,&quot;To__WaitAllDoorBeOpened__27&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__30&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;WaitAllDoorBeClosed&quot;,&quot;To__WaitAllDoorBeClosed__29&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__28&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__26&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StartingUp&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_scX5cEr3Eemiqfc15bo8Zw" name="PME_Trig24" event="_sTNWYEr3Eemiqfc15bo8Zw" port="_sU9p4Er3Eemiqfc15bo8Zw"/>
            <trigger xmi:id="_scf1QEr3Eemiqfc15bo8Zw" name="PME_Trig25" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_sc9IQEr3Eemiqfc15bo8Zw" name="To__doorsOpen__26" guard="_semHAUr3Eemiqfc15bo8Zw" source="_sY35gEr3Eemiqfc15bo8Zw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_semHAUr3Eemiqfc15bo8Zw" name="PME_checkDecesion35">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_semHAEr3Eemiqfc15bo8Zw" name="PME_checkDecesion35">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__doorsOpen__26&quot;,&quot;doorsOpen&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_sdGSMEr3Eemiqfc15bo8Zw" name="To__WaitAllDoorBeOpened__27" guard="_seVBQUr3Eemiqfc15bo8Zw" source="_sY35gEr3Eemiqfc15bo8Zw" target="_cd7pQNrHEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_seVBQUr3Eemiqfc15bo8Zw" name="PME_checkDecesion31">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_seVBQEr3Eemiqfc15bo8Zw" name="PME_checkDecesion31">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__WaitAllDoorBeOpened__27&quot;,&quot;WaitAllDoorBeOpened&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_sdIHYEr3Eemiqfc15bo8Zw" name="To__doorsClosed__28" guard="_seh1kEr3Eemiqfc15bo8Zw" source="_sY35gEr3Eemiqfc15bo8Zw" target="_BIWYMNrHEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_seh1kEr3Eemiqfc15bo8Zw" name="PME_checkDecesion34">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sehOgEr3Eemiqfc15bo8Zw" name="PME_checkDecesion34">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__doorsClosed__28&quot;,&quot;doorsClosed&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_sdJ8kEr3Eemiqfc15bo8Zw" name="To__WaitAllDoorBeClosed__29" guard="_seeyQUr3Eemiqfc15bo8Zw" source="_sY35gEr3Eemiqfc15bo8Zw" target="_IcetINrHEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_seeyQUr3Eemiqfc15bo8Zw" name="PME_checkDecesion33">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_seeyQEr3Eemiqfc15bo8Zw" name="PME_checkDecesion33">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__WaitAllDoorBeClosed__29&quot;,&quot;WaitAllDoorBeClosed&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_sdKjoEr3Eemiqfc15bo8Zw" name="To__StartingUp__30" guard="_sebu8Ur3Eemiqfc15bo8Zw" source="_sY35gEr3Eemiqfc15bo8Zw" target="_0JLVkNrSEeaBAosuR3tfxw">
            <ownedRule xmi:id="_sebu8Ur3Eemiqfc15bo8Zw" name="PME_checkDecesion32">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sebu8Er3Eemiqfc15bo8Zw" name="PME_checkDecesion32">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__StartingUp__30&quot;,&quot;StartingUp&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_64F7ENrGEeahI77Vg4Dl9Q" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_7a5GINrGEeahI77Vg4Dl9Q" name="doorsOpen">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_2oNS4NrJEeahI77Vg4Dl9Q" name="getLockCommand">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;Doors are open&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to close doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending Lock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.lock().send(4);
    tmpInt=1;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_BIWYMNrHEeahI77Vg4Dl9Q" name="doorsClosed">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_XyQE0NrpEeal5dJZNvUqew">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;Doors are closed&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to open doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending UnLock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.unlock().send(4);
    tmpInt=1;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_IcetINrHEeahI77Vg4Dl9Q" name="WaitAllDoorBeClosed">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_VddNINroEeal5dJZNvUqew">
              <language>C++</language>
              <body>    tmpInt++;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_cd7pQNrHEeahI77Vg4Dl9Q" name="WaitAllDoorBeOpened">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_gW1VANrpEeal5dJZNvUqew">
              <language>C++</language>
              <body>    tmpInt++;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_0JLVkNrSEeaBAosuR3tfxw" name="StartingUp">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_LssqQNrTEeaBAosuR3tfxw" name="startup">
              <language>C++</language>
              <body>    startupTimer.informIn(UMLRTTimespec(3,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_bRbzYNrnEeal5dJZNvUqew" name="Choice1" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sY35gEr3Eemiqfc15bo8Zw" name="DecesionPoint__8" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWiXMUr3Eemiqfc15bo8Zw" name="loadHeap" specification="_sWiXMEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.tmpInt&quot;,this->tmpInt);
heap.setVarValue(&quot;this.locksCount&quot;,this->locksCount);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWvykEr3Eemiqfc15bo8Zw" name="unLoadHeap" specification="_sWukcEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.tmpInt&quot;,&amp;this->tmpInt);
heap.loadVarFromHeap(&quot;this.locksCount&quot;,&amp;this->locksCount);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXWPgUr3Eemiqfc15bo8Zw" name="sendMessage" specification="_sXWPgEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;lockPort&quot;) {
  if(message.signal==&quot;unlock&quot;) {
   if(message.payload.size()==0){
    lockPort.unlock().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;lock&quot;) {
   if(message.payload.size()==0){
    lockPort.lock().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sXvREEr3Eemiqfc15bo8Zw" name="sendInternalMessage" specification="_sXuqAEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYeQ4Ur3Eemiqfc15bo8Zw" name="initForPMD" specification="_sYeQ4Er3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_CentralLock::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_CentralLock::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;unlock&quot;,{});
this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;lock&quot;,{});
 this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;lockStatus&quot;,{ {&quot;locked&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;startupTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForCentralLock&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sWiXMEr3Eemiqfc15bo8Zw" name="loadHeap" visibility="private" method="_sWiXMUr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_sWukcEr3Eemiqfc15bo8Zw" name="unLoadHeap" visibility="private" method="_sWvykEr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_sXWPgEr3Eemiqfc15bo8Zw" name="sendMessage" visibility="private" method="_sXWPgUr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_sXbvEEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sXc9MEr3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sXuqAEr3Eemiqfc15bo8Zw" name="sendInternalMessage" visibility="private" method="_sXvREEr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_sXwfMEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sXzigEr3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sYeQ4Er3Eemiqfc15bo8Zw" name="initForPMD" visibility="private" method="_sYeQ4Ur3Eemiqfc15bo8Zw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LXPSQNrAEeahI77Vg4Dl9Q" name="Locking">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_LXKZwNrAEeahI77Vg4Dl9Q" name="Locking">
        <interfaceRealization xmi:id="_LXV_8NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXSVkNrAEeahI77Vg4Dl9Q" contract="_LXSVkNrAEeahI77Vg4Dl9Q"/>
        <interfaceRealization xmi:id="_LXfJ4NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q" contract="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXSVkNrAEeahI77Vg4Dl9Q" name="Locking">
        <ownedOperation xmi:id="_WHBOsNrAEeahI77Vg4Dl9Q" name="lock"/>
        <ownedOperation xmi:id="_Y7LYYNrAEeahI77Vg4Dl9Q" name="unlock"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXX1INrAEeahI77Vg4Dl9Q" name="Locking~">
        <ownedOperation xmi:id="_MKPDMNrFEeahI77Vg4Dl9Q" name="lockStatus">
          <ownedParameter xmi:id="_P-KAwNrFEeahI77Vg4Dl9Q" name="locked">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXaRYNrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXX1INrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_LXa4cNrAEeahI77Vg4Dl9Q" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXcGkNrAEeahI77Vg4Dl9Q" name="LockingIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXgYANrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_XN1s0NrAEeahI77Vg4Dl9Q" operation="_WHBOsNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Zlrt8NrAEeahI77Vg4Dl9Q" operation="_Y7LYYNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_NUfP0NrFEeahI77Vg4Dl9Q" operation="_MKPDMNrFEeahI77Vg4Dl9Q"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sRqeQEr3Eemiqfc15bo8Zw" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sTV5QEr3Eemiqfc15bo8Zw" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sTXucEr3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sTYVgEr3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sVHa4Er3Eemiqfc15bo8Zw" name="dbgPortForCentralLock" visibility="public" type="_sSlEQEr3Eemiqfc15bo8Zw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sVIB8Er3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sVIB8Ur3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sh8V8Er3Eemiqfc15bo8Zw" name="dbgPortForLock" visibility="public" type="_sSlEQEr3Eemiqfc15bo8Zw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sh-LIEr3Eemiqfc15bo8Zw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sh-yMEr3Eemiqfc15bo8Zw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sSPtEEr3Eemiqfc15bo8Zw" name="dbgAgent StateMachine">
        <region xmi:id="_sguN8Er3Eemiqfc15bo8Zw" name="mainRegion">
          <transition xmi:id="_shGBYEr3Eemiqfc15bo8Zw" name="Trans__Init__State__3940" source="_sg7pUEr3Eemiqfc15bo8Zw" target="_sgzGcEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shrQMEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__39&quot;,&quot;New__State__38&quot;,&quot;To__New__State__38__43&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__39&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_shMIAEr3Eemiqfc15bo8Zw" name="From__New__State__38__41" source="_sg3-8Er3Eemiqfc15bo8Zw" target="_sgzGcEr3Eemiqfc15bo8Zw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_shg4IEr3Eemiqfc15bo8Zw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__38&quot;,&quot;New__State__38&quot;,&quot;To__New__State__38__43&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__38&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_shOkQEr3Eemiqfc15bo8Zw" name="PME_Trig42" port="_sTV5QEr3Eemiqfc15bo8Zw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_shYVQEr3Eemiqfc15bo8Zw" name="To__New__State__38__43" guard="_shseUUr3Eemiqfc15bo8Zw" source="_sgzGcEr3Eemiqfc15bo8Zw" target="_sg3-8Er3Eemiqfc15bo8Zw">
            <ownedRule xmi:id="_shseUUr3Eemiqfc15bo8Zw" name="PME_checkDecesion44">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_shseUEr3Eemiqfc15bo8Zw" name="PME_checkDecesion44">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__38__43&quot;,&quot;New__State__38&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sgzGcEr3Eemiqfc15bo8Zw" name="DecesionPoint__37" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sg3-8Er3Eemiqfc15bo8Zw" name="New__State__38">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sj_kYEr3Eemiqfc15bo8Zw" name="New__State__38">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sg7pUEr3Eemiqfc15bo8Zw" name="Init__State__39"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sfFPMUr3Eemiqfc15bo8Zw" name="loadHeap" specification="_sfFPMEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sfJgoUr3Eemiqfc15bo8Zw" name="unLoadHeap" specification="_sfJgoEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sfhUEEr3Eemiqfc15bo8Zw" name="sendMessage" specification="_sfgtAEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForCentralLock&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForCentralLock.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sf3SUEr3Eemiqfc15bo8Zw" name="sendInternalMessage" specification="_sf2rQEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sgiAsEr3Eemiqfc15bo8Zw" name="initForPMD" specification="_sghZoEr3Eemiqfc15bo8Zw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForCentralLock&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sfFPMEr3Eemiqfc15bo8Zw" name="loadHeap" visibility="private" method="_sfFPMUr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_sfJgoEr3Eemiqfc15bo8Zw" name="unLoadHeap" visibility="private" method="_sfJgoUr3Eemiqfc15bo8Zw"/>
      <ownedOperation xmi:id="_sfgtAEr3Eemiqfc15bo8Zw" name="sendMessage" visibility="private" method="_sfhUEEr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_sfmzoEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sfoBwEr3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sf2rQEr3Eemiqfc15bo8Zw" name="sendInternalMessage" visibility="private" method="_sf3SUEr3Eemiqfc15bo8Zw">
        <ownedParameter xmi:id="_sf6VoEr3Eemiqfc15bo8Zw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sf8K0Er3Eemiqfc15bo8Zw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sghZoEr3Eemiqfc15bo8Zw" name="initForPMD" visibility="private" method="_sgiAsEr3Eemiqfc15bo8Zw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sSfksEr3Eemiqfc15bo8Zw" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_sSlEQEr3Eemiqfc15bo8Zw" name="dbgProtocol">
        <interfaceRealization xmi:id="_sTDlYEr3Eemiqfc15bo8Zw" client="_sSlEQEr3Eemiqfc15bo8Zw" supplier="_sSp8wEr3Eemiqfc15bo8Zw" contract="_sSp8wEr3Eemiqfc15bo8Zw"/>
        <interfaceRealization xmi:id="_sTId4Er3Eemiqfc15bo8Zw" client="_sSlEQEr3Eemiqfc15bo8Zw" supplier="_sSrx8Er3Eemiqfc15bo8Zw" contract="_sSrx8Er3Eemiqfc15bo8Zw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sSp8wEr3Eemiqfc15bo8Zw" name="dbgProtocol">
        <ownedOperation xmi:id="_sTMIQEr3Eemiqfc15bo8Zw" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sSrK4Er3Eemiqfc15bo8Zw" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sSrx8Er3Eemiqfc15bo8Zw" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_sSuOMEr3Eemiqfc15bo8Zw" client="_sSlEQEr3Eemiqfc15bo8Zw" supplier="_sSrK4Er3Eemiqfc15bo8Zw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_sSwDYEr3Eemiqfc15bo8Zw" client="_sSlEQEr3Eemiqfc15bo8Zw" supplier="_sSrx8Er3Eemiqfc15bo8Zw"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_sTNWYEr3Eemiqfc15bo8Zw" operation="_sTMIQEr3Eemiqfc15bo8Zw"/>
    </packagedElement>
    <profileApplication xmi:id="_0wPiINq9EeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_0wR-YNq9EeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_LVEcINrNEeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_LVFqQNrNEeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_yE6TYElDEemUxsIrz51xbw">
      <eAnnotations xmi:id="_yFErcElDEemUxsIrz51xbw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_iUqswNq_EeahI77Vg4Dl9Q" base_Class="_iSbRENq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_ltJEcNq_EeahI77Vg4Dl9Q" base_Class="_ls0UUNq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_s7p5kNq_EeahI77Vg4Dl9Q" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_xTPk4Nq_EeahI77Vg4Dl9Q" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:ProtocolContainer xmi:id="_LXQgYNrAEeahI77Vg4Dl9Q" base_Package="_LXPSQNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXUKwNrAEeahI77Vg4Dl9Q" base_Interface="_LXSVkNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXZDQNrAEeahI77Vg4Dl9Q" base_Interface="_LXX1INrAEeahI77Vg4Dl9Q" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXdUsNrAEeahI77Vg4Dl9Q" base_Interface="_LXcGkNrAEeahI77Vg4Dl9Q" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_LXg_ENrAEeahI77Vg4Dl9Q" base_Collaboration="_LXKZwNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_GVgBQNrBEeahI77Vg4Dl9Q" base_Property="_GVbv0NrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_LNWhANrBEeahI77Vg4Dl9Q" base_Property="_LNSPkNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_WvNaoNrBEeahI77Vg4Dl9Q" base_Port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_k3m4sNrBEeahI77Vg4Dl9Q" base_Port="_k3gyENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_yAPi4NrBEeahI77Vg4Dl9Q" base_Property="_yAJcQNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_-jPJYNrBEeahI77Vg4Dl9Q" base_Port="_-jLfANrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTConnector xmi:id="_U4ZNgdrCEeahI77Vg4Dl9Q" base_Connector="_U4X_YNrCEeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_QG5zcNrNEeahI77Vg4Dl9Q" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qaE6YNrPEeay9vzLxQrrvQ" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_xS9RANq_EeahI77Vg4Dl9Q" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_Ce3MQNrUEeaBAosuR3tfxw" isWired="false" base_Port="_Cey60NrUEeaBAosuR3tfxw"/>
  <UMLRealTime:RTConnector xmi:id="_-oDOkNraEeal5dJZNvUqew" base_Connector="_-n9H8NraEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_V8w48NrgEeal5dJZNvUqew" base_Property="_V8mg4NrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_bwRvstrgEeal5dJZNvUqew" base_Connector="_bwP6gNrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_5AN0oNrgEeal5dJZNvUqew" base_Property="_5AKKQNrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_-3zTEdrgEeal5dJZNvUqew" base_Connector="_-3w20NrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_AVeyANrhEeal5dJZNvUqew" base_Property="_AVcVwNrhEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_EUj2sNrhEeal5dJZNvUqew" base_Connector="_EUhacNrhEeal5dJZNvUqew"/>
  <UMLRealTime:Capsule xmi:id="_sSNQ0Er3Eemiqfc15bo8Zw" base_Class="_sRqeQEr3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_sSe9oEr3Eemiqfc15bo8Zw" base_StateMachine="_sSPtEEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_sSioAEr3Eemiqfc15bo8Zw" base_Package="_sSfksEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:Protocol xmi:id="_sSpVsEr3Eemiqfc15bo8Zw" base_Collaboration="_sSlEQEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTMessageSet xmi:id="_sS2xEEr3Eemiqfc15bo8Zw" base_Interface="_sSp8wEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTMessageSet xmi:id="_sS7pkEr3Eemiqfc15bo8Zw" base_Interface="_sSrK4Er3Eemiqfc15bo8Zw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_sTBwMEr3Eemiqfc15bo8Zw" base_Interface="_sSrx8Er3Eemiqfc15bo8Zw" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_sToNIEr3Eemiqfc15bo8Zw" base_Port="_sTV5QEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTPort xmi:id="_sVBUQEr3Eemiqfc15bo8Zw" isWired="false" base_Port="_sU9p4Er3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTPort xmi:id="_sVOIkEr3Eemiqfc15bo8Zw" isPublish="true" isWired="false" base_Port="_sVHa4Er3Eemiqfc15bo8Zw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sWRRcEr3Eemiqfc15bo8Zw" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sWc3oEr3Eemiqfc15bo8Zw" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:ParameterProperties xmi:id="_sXkR8Er3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_sXc9MEr3Eemiqfc15bo8Zw"/>
  <RTCppProperties:ParameterProperties xmi:id="_sX1XsEr3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_sXzigEr3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sY7j4Er3Eemiqfc15bo8Zw" base_Pseudostate="_sY35gEr3Eemiqfc15bo8Zw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_se5pAEr3Eemiqfc15bo8Zw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_sRqeQEr3Eemiqfc15bo8Zw" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_se96cEr3Eemiqfc15bo8Zw" base_Class="_sRqeQEr3Eemiqfc15bo8Zw"/>
  <RTCppProperties:ParameterProperties xmi:id="_sfvWgEr3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_sfoBwEr3Eemiqfc15bo8Zw"/>
  <RTCppProperties:ParameterProperties xmi:id="_sgBqYEr3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_sf8K0Er3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sgxRQEr3Eemiqfc15bo8Zw" base_Region="_sguN8Er3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sg1isEr3Eemiqfc15bo8Zw" base_Pseudostate="_sgzGcEr3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTState xmi:id="_sg50IEr3Eemiqfc15bo8Zw" base_State="_sg3-8Er3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sg_6wEr3Eemiqfc15bo8Zw" base_Pseudostate="_sg7pUEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTPort xmi:id="_sh7u4Er3Eemiqfc15bo8Zw" isWired="false" base_Port="_sh2PUEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:RTPort xmi:id="_siAAUEr3Eemiqfc15bo8Zw" isPublish="true" isWired="false" base_Port="_sh8V8Er3Eemiqfc15bo8Zw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_siOp0Er3Eemiqfc15bo8Zw" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_siRtIEr3Eemiqfc15bo8Zw" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:ParameterProperties xmi:id="_siqusEr3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_sio5gEr3Eemiqfc15bo8Zw"/>
  <RTCppProperties:ParameterProperties xmi:id="_si0fsEr3Eemiqfc15bo8Zw" type="pmd::Message" base_Parameter="_siz4oEr3Eemiqfc15bo8Zw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sjPWcEr3Eemiqfc15bo8Zw" base_Pseudostate="_sjNhQEr3Eemiqfc15bo8Zw"/>
  <UMLRealTime:CapsulePart xmi:id="_sj6E0Er3Eemiqfc15bo8Zw" base_Property="_sj5dwEr3Eemiqfc15bo8Zw"/>
</xmi:XMI>

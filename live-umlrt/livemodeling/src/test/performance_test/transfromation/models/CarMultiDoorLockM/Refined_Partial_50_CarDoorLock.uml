<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_0vhJYNq9EeahI77Vg4Dl9Q" name="CarDoorLock">
    <eAnnotations xmi:id="_R8398NrKEeahI77Vg4Dl9Q" source="UMLRT_Default_top">
      <details xmi:id="_R84lANrKEeahI77Vg4Dl9Q" key="top_name" value="Car"/>
    </eAnnotations>
    <eAnnotations xmi:id="_t4ziYErPEem8mfaYhGFVeA" source="dummy"/>
    <eAnnotations xmi:id="_2QC08ErhEemnov-03y4Irg" source="dummy"/>
    <eAnnotations xmi:id="_diI2UEsZEem927Az9GUHyw" source="dummy"/>
    <eAnnotations xmi:id="_X06IgEvvEeml-thjFyNx7Q" source="dummy"/>
    <eAnnotations xmi:id="_yNKysEwQEem8hY_DSjvvbw" source="dummy"/>
    <eAnnotations xmi:id="_tOjBIExTEemQ9LbCsZ0VWQ" source="dummy"/>
    <eAnnotations xmi:id="_DEtisEyBEemik9RUfh5nGQ" source="dummy"/>
    <eAnnotations xmi:id="_aZ3EMEyBEem4DfwzSry4oQ" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_iSbRENq_EeahI77Vg4Dl9Q" name="Car" isActive="true">
      <ownedAttribute xmi:id="_GVbv0NrBEeahI77Vg4Dl9Q" name="door1" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_SnJA8NrgEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Sm8zsNrgEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LNSPkNrBEeahI77Vg4Dl9Q" name="centralLock" visibility="protected" type="_s7aB8Nq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_V8mg4NrgEeal5dJZNvUqew" name="door2" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_5AKKQNrgEeal5dJZNvUqew" name="door3" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_AVcVwNrhEeal5dJZNvUqew" name="door4" visibility="protected" type="_ls0UUNq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_y67RQEr3EemjXuwJLQ28Uw" name="dbgAgent" type="_yet2YEr3EemjXuwJLQ28Uw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y7FCQUr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_y7FCQkr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_U4X_YNrCEeahI77Vg4Dl9Q" name="RTConnector1">
        <end xmi:id="_U4YmcNrCEeahI77Vg4Dl9Q" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_U4ZNgNrCEeahI77Vg4Dl9Q" partWithPort="_GVbv0NrBEeahI77Vg4Dl9Q" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_bwP6gNrgEeal5dJZNvUqew" name="RTConnector2">
        <end xmi:id="_bwRvsNrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_bwRvsdrgEeal5dJZNvUqew" partWithPort="_V8mg4NrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-3w20NrgEeal5dJZNvUqew" name="RTConnector3">
        <end xmi:id="_-3ysANrgEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-3zTENrgEeal5dJZNvUqew" partWithPort="_5AKKQNrgEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
      <ownedConnector xmi:id="_EUhacNrhEeal5dJZNvUqew" name="RTConnector4">
        <end xmi:id="_EUjPoNrhEeal5dJZNvUqew" partWithPort="_LNSPkNrBEeahI77Vg4Dl9Q" role="_k3gyENrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_EUjPodrhEeal5dJZNvUqew" partWithPort="_AVcVwNrhEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ls0UUNq_EeahI77Vg4Dl9Q" name="Door" isActive="true">
      <ownedAttribute xmi:id="_yAJcQNrBEeahI77Vg4Dl9Q" name="lock" visibility="protected" type="_xS9RANq_EeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_zv8SANrZEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_zvPucNrZEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_-jLfANrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_f3zGENrdEeal5dJZNvUqew" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_f3ouANrdEeal5dJZNvUqew" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_-n9H8NraEeal5dJZNvUqew" name="RTConnector1">
        <end xmi:id="_-oCngNraEeal5dJZNvUqew" role="_-jLfANrBEeahI77Vg4Dl9Q"/>
        <end xmi:id="_-oCngdraEeal5dJZNvUqew" partWithPort="_yAJcQNrBEeahI77Vg4Dl9Q" role="_WvH7ENrBEeahI77Vg4Dl9Q"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xS9RANq_EeahI77Vg4Dl9Q" name="Lock" classifierBehavior="__KYzgNrCEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WvH7ENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_-JnYYNrVEeaBAosuR3tfxw" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_-JjG8NrVEeaBAosuR3tfxw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_y0BYAEr3EemjXuwJLQ28Uw" name="dbgPortForLock" visibility="protected" type="_yflZEEr3EemjXuwJLQ28Uw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0EbUEr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_y0FpcEr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="__KYzgNrCEeahI77Vg4Dl9Q" name="lockSM">
        <region xmi:id="_BAOTwNrDEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_v7FiUNrDEeahI77Vg4Dl9Q" name="twiceLock" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_D3ixQNrmEeal5dJZNvUqew" name="replyTwiceUnlock">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;The Lock   &quot;&lt;&lt;this->borderPorts[0]->slotName()&lt;&lt;&quot;  is already unlocked&quot;&lt;&lt;std::endl;
    lockPort.lockStatus(false).send();
</body>
            </effect>
            <trigger xmi:id="_GTLJMNrFEeahI77Vg4Dl9Q" name="twiceLock" event="_XN1s0NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_y5qF8Er3EemjXuwJLQ28Uw" name="Trans__Initial135" source="_Cz87MNrDEeahI77Vg4Dl9Q" target="_y5XyEEr3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_y6yHUEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Initial1&quot;,&quot;locked&quot;,&quot;To__locked__39&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Initial1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_y5-2EEr3EemjXuwJLQ28Uw" name="From__locked__36" source="_FLMfYNrDEeahI77Vg4Dl9Q" target="_y5XyEEr3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_y6oWUEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;locked&quot;,&quot;locked&quot;,&quot;To__locked__39&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;locked&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_y6ArQEr3EemjXuwJLQ28Uw" name="PME_Trig37" event="_Zlrt8NrAEeahI77Vg4Dl9Q" port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
            <trigger xmi:id="_y6J1MEr3EemjXuwJLQ28Uw" name="PME_Trig38" event="_ygTKwEr3EemjXuwJLQ28Uw" port="_y0BYAEr3EemjXuwJLQ28Uw"/>
          </transition>
          <transition xmi:id="_y6elUEr3EemjXuwJLQ28Uw" name="To__locked__39" guard="_y6zVcUr3EemjXuwJLQ28Uw" source="_y5XyEEr3EemjXuwJLQ28Uw" target="_FLMfYNrDEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_y6zVcUr3EemjXuwJLQ28Uw" name="PME_checkDecesion40">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_y6zVcEr3EemjXuwJLQ28Uw" name="PME_checkDecesion40">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__locked__39&quot;,&quot;locked&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_Cz87MNrDEeahI77Vg4Dl9Q" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_FLMfYNrDEeahI77Vg4Dl9Q" name="locked"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_y5XyEEr3EemjXuwJLQ28Uw" name="DecesionPoint__34" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3SucUr3EemjXuwJLQ28Uw" name="loadHeap" specification="_y3SucEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y3ZcIEr3EemjXuwJLQ28Uw" name="unLoadHeap" specification="_y3Y1EEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4ExkEr3EemjXuwJLQ28Uw" name="sendMessage" specification="_y4EKgEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;lockPort&quot;) {
  if(message.signal==&quot;lockStatus&quot;) {
   if(message.payload.size()==1){
    lockPort.lockStatus( boost::any_cast&lt;bool>(message.payload[&quot;locked&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y4YTkUr3EemjXuwJLQ28Uw" name="sendInternalMessage" specification="_y4YTkEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y5Ca4Er3EemjXuwJLQ28Uw" name="initForPMD" specification="_y5Bz0Er3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Lock::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Lock::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;lockStatus&quot;,{ {&quot;locked&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;unlock&quot;,{});
this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;lock&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForLock&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_y3SucEr3EemjXuwJLQ28Uw" name="loadHeap" visibility="private" method="_y3SucUr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_y3Y1EEr3EemjXuwJLQ28Uw" name="unLoadHeap" visibility="private" method="_y3ZcIEr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_y4EKgEr3EemjXuwJLQ28Uw" name="sendMessage" visibility="private" method="_y4ExkEr3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_y4KRIEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_y4PJoEr3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_y4YTkEr3EemjXuwJLQ28Uw" name="sendInternalMessage" visibility="private" method="_y4YTkUr3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_y4ZhsEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_y4bW4Er3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_y5Bz0Er3EemjXuwJLQ28Uw" name="initForPMD" visibility="private" method="_y5Ca4Er3EemjXuwJLQ28Uw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_s7aB8Nq_EeahI77Vg4Dl9Q" name="CentralLock" classifierBehavior="_mTK68NrFEeahI77Vg4Dl9Q" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_k3gyENrBEeahI77Vg4Dl9Q" name="lockPort" visibility="public" type="_LXKZwNrAEeahI77Vg4Dl9Q" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_fVbt8NrfEeal5dJZNvUqew" value="4"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_fVTyINrfEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_Cey60NrUEeaBAosuR3tfxw" name="startupTimer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_pzTr8NroEeal5dJZNvUqew" name="tmpInt">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_t1vmoNroEeal5dJZNvUqew" value="0"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_u29zENroEeal5dJZNvUqew" name="locksCount">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_zKDY4NroEeal5dJZNvUqew" value="4"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_yiHIoEr3EemjXuwJLQ28Uw" name="dbgPortForCentralLock" visibility="protected" type="_yflZEEr3EemjXuwJLQ28Uw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yiHvsEr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_yiHvsUr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mTK68NrFEeahI77Vg4Dl9Q" name="centralLockSM">
        <region xmi:id="_oPcaYNrFEeahI77Vg4Dl9Q" name="Region1">
          <transition xmi:id="_5LhOENrSEeaBAosuR3tfxw" name="StartingUp__doorsOpen__2" source="_0JLVkNrSEeaBAosuR3tfxw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <trigger xmi:id="_HlMpYNrTEeaBAosuR3tfxw" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_KEVOMNrnEeal5dJZNvUqew" name="AllDoorClosed__doorsClosed__1" guard="_IUNCcNrpEeal5dJZNvUqew" source="_9fM5sNrmEeal5dJZNvUqew" target="_BIWYMNrHEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_IUNCcNrpEeal5dJZNvUqew">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_IUNCcdrpEeal5dJZNvUqew">
                <language>C++</language>
                <body>    return tmpInt==locksCount;
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_jCt-YNrnEeal5dJZNvUqew" name="Choice1__doorsOpen__3" guard="_l54t4NrpEeal5dJZNvUqew" source="_bRbzYNrnEeal5dJZNvUqew" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_l54t4NrpEeal5dJZNvUqew">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_l54t4drpEeal5dJZNvUqew">
                <language>C++</language>
                <body>    return tmpInt==locksCount;
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_ymbA4Er3EemjXuwJLQ28Uw" name="Trans__Init__State__56" source="_ymIF8Er3EemjXuwJLQ28Uw" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yp06MEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__5&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__5&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__5&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__5&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ymvJ8Er3EemjXuwJLQ28Uw" name="7" source="_9fM5sNrmEeal5dJZNvUqew" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ypTVwEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;AllDoorClosed&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;AllDoorClosed&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;AllDoorClosed&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;AllDoorClosed&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ymw_IEr3EemjXuwJLQ28Uw" name="8" source="_bRbzYNrnEeal5dJZNvUqew" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ypoF4Er3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Choice1&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Choice1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ym468Er3EemjXuwJLQ28Uw" name="From__doorsClosed__9" source="_BIWYMNrHEeahI77Vg4Dl9Q" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yqF_8Er3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsClosed&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;doorsClosed&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ym-agEr3EemjXuwJLQ28Uw" name="PME_Trig10" event="_ygTKwEr3EemjXuwJLQ28Uw" port="_yiHIoEr3EemjXuwJLQ28Uw"/>
            <trigger xmi:id="_ynL14Er3EemjXuwJLQ28Uw" name="PME_Trig11" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
            <trigger xmi:id="_ynXcEEr3EemjXuwJLQ28Uw" name="PME_Trig12" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_ynibMEr3EemjXuwJLQ28Uw" name="From__StartingUp__13" source="_0JLVkNrSEeaBAosuR3tfxw" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ypdt0Er3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;StartingUp&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;StartingUp&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ynuBYEr3EemjXuwJLQ28Uw" name="PME_Trig14" event="_ygTKwEr3EemjXuwJLQ28Uw" port="_yiHIoEr3EemjXuwJLQ28Uw"/>
            <trigger xmi:id="_yn4ZcEr3EemjXuwJLQ28Uw" name="PME_Trig15" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_yoBjYEr3EemjXuwJLQ28Uw" name="From__doorsOpen__16" source="_7a5GINrGEeahI77Vg4Dl9Q" target="_yl9G0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yp8O8Er3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;doorsClosed&quot;,&quot;To__doorsClosed__20&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;doorsOpen&quot;,&quot;To__doorsOpen__22&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;doorsOpen&quot;,&quot;StartingUp&quot;,&quot;To__StartingUp__21&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;doorsOpen&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_yoLUYEr3EemjXuwJLQ28Uw" name="PME_Trig17" event="_ygTKwEr3EemjXuwJLQ28Uw" port="_yiHIoEr3EemjXuwJLQ28Uw"/>
            <trigger xmi:id="_yoVscEr3EemjXuwJLQ28Uw" name="PME_Trig18" port="_Cey60NrUEeaBAosuR3tfxw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
            <trigger xmi:id="_yohSoEr3EemjXuwJLQ28Uw" name="PME_Trig19" event="_NUfP0NrFEeahI77Vg4Dl9Q" port="_k3gyENrBEeahI77Vg4Dl9Q"/>
          </transition>
          <transition xmi:id="_yo338Er3EemjXuwJLQ28Uw" name="To__doorsClosed__20" guard="_yqLfgEr3EemjXuwJLQ28Uw" source="_yl9G0Er3EemjXuwJLQ28Uw" target="_BIWYMNrHEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_yqLfgEr3EemjXuwJLQ28Uw" name="PME_checkDecesion23">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_yqK4cEr3EemjXuwJLQ28Uw" name="PME_checkDecesion23">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__doorsClosed__20&quot;,&quot;doorsClosed&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_yo5GEEr3EemjXuwJLQ28Uw" name="To__StartingUp__21" guard="_yqRmIEr3EemjXuwJLQ28Uw" source="_yl9G0Er3EemjXuwJLQ28Uw" target="_0JLVkNrSEeaBAosuR3tfxw">
            <ownedRule xmi:id="_yqRmIEr3EemjXuwJLQ28Uw" name="PME_checkDecesion25">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_yqQ_EEr3EemjXuwJLQ28Uw" name="PME_checkDecesion25">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__StartingUp__21&quot;,&quot;StartingUp&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_yo-loEr3EemjXuwJLQ28Uw" name="To__doorsOpen__22" guard="_yqPJ4Ur3EemjXuwJLQ28Uw" source="_yl9G0Er3EemjXuwJLQ28Uw" target="_7a5GINrGEeahI77Vg4Dl9Q">
            <ownedRule xmi:id="_yqPJ4Ur3EemjXuwJLQ28Uw" name="PME_checkDecesion24">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_yqPJ4Er3EemjXuwJLQ28Uw" name="PME_checkDecesion24">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__doorsOpen__22&quot;,&quot;doorsOpen&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_7a5GINrGEeahI77Vg4Dl9Q" name="doorsOpen">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_2oNS4NrJEeahI77Vg4Dl9Q" name="getLockCommand">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;Doors are open&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to close doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending Lock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.lock().send(4);
    tmpInt=1;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_BIWYMNrHEeahI77Vg4Dl9Q" name="doorsClosed">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_XyQE0NrpEeal5dJZNvUqew">
              <language>C++</language>
              <body>    std::cout&lt;&lt;&quot;Doors are closed&quot;&lt;&lt;std::endl;
    std::cout&lt;&lt;&quot;Press any key to open doors&quot;&lt;&lt;std::endl;
    getchar();
    std::cout&lt;&lt;&quot;Sending UnLock message to doors\n&quot;&lt;&lt;std::endl;
    /// send message to first door
    lockPort.unlock().send(4);
    tmpInt=1;
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_0JLVkNrSEeaBAosuR3tfxw" name="StartingUp">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_LssqQNrTEeaBAosuR3tfxw" name="startup">
              <language>C++</language>
              <body>    startupTimer.informIn(UMLRTTimespec(3,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_9fM5sNrmEeal5dJZNvUqew" name="AllDoorClosed" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_bRbzYNrnEeal5dJZNvUqew" name="Choice1" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yl9G0Er3EemjXuwJLQ28Uw" name="DecesionPoint__4" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ymIF8Er3EemjXuwJLQ28Uw" name="Init__State__5"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjZiEUr3EemjXuwJLQ28Uw" name="loadHeap" specification="_yjZiEEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.tmpInt&quot;,this->tmpInt);
heap.setVarValue(&quot;this.locksCount&quot;,this->locksCount);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yjkhMUr3EemjXuwJLQ28Uw" name="unLoadHeap" specification="_yjkhMEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.tmpInt&quot;,&amp;this->tmpInt);
heap.loadVarFromHeap(&quot;this.locksCount&quot;,&amp;this->locksCount);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ykXLYEr3EemjXuwJLQ28Uw" name="sendMessage" specification="_ykWkUEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;lockPort&quot;) {
  if(message.signal==&quot;unlock&quot;) {
   if(message.payload.size()==0){
    lockPort.unlock().sendAt(message.index);
result=1;
}
  }
  else if(message.signal==&quot;lock&quot;) {
   if(message.payload.size()==0){
    lockPort.lock().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yk0eYUr3EemjXuwJLQ28Uw" name="sendInternalMessage" specification="_yk0eYEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ylnvoUr3EemjXuwJLQ28Uw" name="initForPMD" specification="_ylnvoEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_CentralLock::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_CentralLock::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;unlock&quot;,{});
this->execContext.addOutPutMessages(&quot;lockPort&quot;,&quot;lock&quot;,{});
 this->execContext.addInputMessages(&quot;lockPort&quot;,&quot;lockStatus&quot;,{ {&quot;locked&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;startupTimer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForCentralLock&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_yjZiEEr3EemjXuwJLQ28Uw" name="loadHeap" visibility="private" method="_yjZiEUr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_yjkhMEr3EemjXuwJLQ28Uw" name="unLoadHeap" visibility="private" method="_yjkhMUr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_ykWkUEr3EemjXuwJLQ28Uw" name="sendMessage" visibility="private" method="_ykXLYEr3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_ykZAkEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ykqtYEr3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yk0eYEr3EemjXuwJLQ28Uw" name="sendInternalMessage" visibility="private" method="_yk0eYUr3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_yk1sgEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_yk-2cEr3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ylnvoEr3EemjXuwJLQ28Uw" name="initForPMD" visibility="private" method="_ylnvoUr3EemjXuwJLQ28Uw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_LXPSQNrAEeahI77Vg4Dl9Q" name="Locking">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_LXKZwNrAEeahI77Vg4Dl9Q" name="Locking">
        <interfaceRealization xmi:id="_LXV_8NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXSVkNrAEeahI77Vg4Dl9Q" contract="_LXSVkNrAEeahI77Vg4Dl9Q"/>
        <interfaceRealization xmi:id="_LXfJ4NrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q" contract="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXSVkNrAEeahI77Vg4Dl9Q" name="Locking">
        <ownedOperation xmi:id="_WHBOsNrAEeahI77Vg4Dl9Q" name="lock"/>
        <ownedOperation xmi:id="_Y7LYYNrAEeahI77Vg4Dl9Q" name="unlock"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXX1INrAEeahI77Vg4Dl9Q" name="Locking~">
        <ownedOperation xmi:id="_MKPDMNrFEeahI77Vg4Dl9Q" name="lockStatus">
          <ownedParameter xmi:id="_P-KAwNrFEeahI77Vg4Dl9Q" name="locked">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXaRYNrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXX1INrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_LXa4cNrAEeahI77Vg4Dl9Q" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_LXcGkNrAEeahI77Vg4Dl9Q" name="LockingIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_LXgYANrAEeahI77Vg4Dl9Q" client="_LXKZwNrAEeahI77Vg4Dl9Q" supplier="_LXcGkNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_XN1s0NrAEeahI77Vg4Dl9Q" operation="_WHBOsNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Zlrt8NrAEeahI77Vg4Dl9Q" operation="_Y7LYYNrAEeahI77Vg4Dl9Q"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_NUfP0NrFEeahI77Vg4Dl9Q" operation="_MKPDMNrFEeahI77Vg4Dl9Q"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yet2YEr3EemjXuwJLQ28Uw" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ygYDQEr3EemjXuwJLQ28Uw" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ygZRYEr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ygZ4cEr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_yiQ5oEr3EemjXuwJLQ28Uw" name="dbgPortForCentralLock" visibility="public" type="_yflZEEr3EemjXuwJLQ28Uw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_yiRgsEr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_yiSHwEr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_y0WIIEr3EemjXuwJLQ28Uw" name="dbgPortForLock" visibility="public" type="_yflZEEr3EemjXuwJLQ28Uw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_y0X9UEr3EemjXuwJLQ28Uw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_y0ZLcEr3EemjXuwJLQ28Uw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_yfRQAEr3EemjXuwJLQ28Uw" name="dbgAgent StateMachine">
        <region xmi:id="_yuy5wEr3EemjXuwJLQ28Uw" name="mainRegion">
          <transition xmi:id="_ywPEMEr3EemjXuwJLQ28Uw" name="Trans__Init__State__2829" source="_yvvU8Er3EemjXuwJLQ28Uw" target="_yvHC0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yywzwEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__28&quot;,&quot;New__State__27&quot;,&quot;To__New__State__27__32&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__28&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ywwooEr3EemjXuwJLQ28Uw" name="From__New__State__27__30" source="_yvZWsEr3EemjXuwJLQ28Uw" target="_yvHC0Er3EemjXuwJLQ28Uw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yzS_QEr3EemjXuwJLQ28Uw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__27&quot;,&quot;New__State__27&quot;,&quot;To__New__State__27__32&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__27&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_yxPJwEr3EemjXuwJLQ28Uw" name="PME_Trig31" port="_ygYDQEr3EemjXuwJLQ28Uw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_yyBM4Er3EemjXuwJLQ28Uw" name="To__New__State__27__32" guard="_yzfzkEr3EemjXuwJLQ28Uw" source="_yvHC0Er3EemjXuwJLQ28Uw" target="_yvZWsEr3EemjXuwJLQ28Uw">
            <ownedRule xmi:id="_yzfzkEr3EemjXuwJLQ28Uw" name="PME_checkDecesion33">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_yzelcEr3EemjXuwJLQ28Uw" name="PME_checkDecesion33">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__27__32&quot;,&quot;New__State__27&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yvHC0Er3EemjXuwJLQ28Uw" name="DecesionPoint__26" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_yvZWsEr3EemjXuwJLQ28Uw" name="New__State__27">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_y7GQYEr3EemjXuwJLQ28Uw" name="New__State__27">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yvvU8Er3EemjXuwJLQ28Uw" name="Init__State__28"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yrBNAUr3EemjXuwJLQ28Uw" name="loadHeap" specification="_yrBNAEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yrGskEr3EemjXuwJLQ28Uw" name="unLoadHeap" specification="_yrGFgEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yriKYEr3EemjXuwJLQ28Uw" name="sendMessage" specification="_yrhjUEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForCentralLock&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForCentralLock.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yr7L8Ur3EemjXuwJLQ28Uw" name="sendInternalMessage" specification="_yr7L8Er3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_yuLOsEr3EemjXuwJLQ28Uw" name="initForPMD" specification="_yuKAkEr3EemjXuwJLQ28Uw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForCentralLock&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_yrBNAEr3EemjXuwJLQ28Uw" name="loadHeap" visibility="private" method="_yrBNAUr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_yrGFgEr3EemjXuwJLQ28Uw" name="unLoadHeap" visibility="private" method="_yrGskEr3EemjXuwJLQ28Uw"/>
      <ownedOperation xmi:id="_yrhjUEr3EemjXuwJLQ28Uw" name="sendMessage" visibility="private" method="_yriKYEr3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_yrpfIEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_yruXoEr3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yr7L8Er3EemjXuwJLQ28Uw" name="sendInternalMessage" visibility="private" method="_yr7L8Ur3EemjXuwJLQ28Uw">
        <ownedParameter xmi:id="_ysJOYEr3EemjXuwJLQ28Uw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ysho4Er3EemjXuwJLQ28Uw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_yuKAkEr3EemjXuwJLQ28Uw" name="initForPMD" visibility="private" method="_yuLOsEr3EemjXuwJLQ28Uw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yfc2MEr3EemjXuwJLQ28Uw" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_yflZEEr3EemjXuwJLQ28Uw" name="dbgProtocol">
        <interfaceRealization xmi:id="_ygILoEr3EemjXuwJLQ28Uw" client="_yflZEEr3EemjXuwJLQ28Uw" supplier="_yfpDcEr3EemjXuwJLQ28Uw" contract="_yfpDcEr3EemjXuwJLQ28Uw"/>
        <interfaceRealization xmi:id="_ygNrMEr3EemjXuwJLQ28Uw" client="_yflZEEr3EemjXuwJLQ28Uw" supplier="_yfvKEEr3EemjXuwJLQ28Uw" contract="_yfvKEEr3EemjXuwJLQ28Uw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_yfpDcEr3EemjXuwJLQ28Uw" name="dbgProtocol">
        <ownedOperation xmi:id="_ygPgYEr3EemjXuwJLQ28Uw" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_yfrfsEr3EemjXuwJLQ28Uw" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_yfvKEEr3EemjXuwJLQ28Uw" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_yfwYMEr3EemjXuwJLQ28Uw" client="_yflZEEr3EemjXuwJLQ28Uw" supplier="_yfrfsEr3EemjXuwJLQ28Uw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_yf47EEr3EemjXuwJLQ28Uw" client="_yflZEEr3EemjXuwJLQ28Uw" supplier="_yfvKEEr3EemjXuwJLQ28Uw"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_ygTKwEr3EemjXuwJLQ28Uw" operation="_ygPgYEr3EemjXuwJLQ28Uw"/>
    </packagedElement>
    <profileApplication xmi:id="_0wPiINq9EeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_0wR-YNq9EeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_LVEcINrNEeahI77Vg4Dl9Q">
      <eAnnotations xmi:id="_LVFqQNrNEeahI77Vg4Dl9Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_yE6TYElDEemUxsIrz51xbw">
      <eAnnotations xmi:id="_yFErcElDEemUxsIrz51xbw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_iUqswNq_EeahI77Vg4Dl9Q" base_Class="_iSbRENq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_ltJEcNq_EeahI77Vg4Dl9Q" base_Class="_ls0UUNq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_s7p5kNq_EeahI77Vg4Dl9Q" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:Capsule xmi:id="_xTPk4Nq_EeahI77Vg4Dl9Q" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <UMLRealTime:ProtocolContainer xmi:id="_LXQgYNrAEeahI77Vg4Dl9Q" base_Package="_LXPSQNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXUKwNrAEeahI77Vg4Dl9Q" base_Interface="_LXSVkNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXZDQNrAEeahI77Vg4Dl9Q" base_Interface="_LXX1INrAEeahI77Vg4Dl9Q" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_LXdUsNrAEeahI77Vg4Dl9Q" base_Interface="_LXcGkNrAEeahI77Vg4Dl9Q" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_LXg_ENrAEeahI77Vg4Dl9Q" base_Collaboration="_LXKZwNrAEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_GVgBQNrBEeahI77Vg4Dl9Q" base_Property="_GVbv0NrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_LNWhANrBEeahI77Vg4Dl9Q" base_Property="_LNSPkNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_WvNaoNrBEeahI77Vg4Dl9Q" base_Port="_WvH7ENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_k3m4sNrBEeahI77Vg4Dl9Q" base_Port="_k3gyENrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:CapsulePart xmi:id="_yAPi4NrBEeahI77Vg4Dl9Q" base_Property="_yAJcQNrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTPort xmi:id="_-jPJYNrBEeahI77Vg4Dl9Q" base_Port="_-jLfANrBEeahI77Vg4Dl9Q"/>
  <UMLRealTime:RTConnector xmi:id="_U4ZNgdrCEeahI77Vg4Dl9Q" base_Connector="_U4X_YNrCEeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_QG5zcNrNEeahI77Vg4Dl9Q" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;&#xA;&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_qaE6YNrPEeay9vzLxQrrvQ" headerPreface="#include&lt;stdio.h>&#xA;#include&lt;iostream>&#xA;#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_xS9RANq_EeahI77Vg4Dl9Q" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <UMLRealTime:RTPort xmi:id="_Ce3MQNrUEeaBAosuR3tfxw" isWired="false" base_Port="_Cey60NrUEeaBAosuR3tfxw"/>
  <UMLRealTime:RTConnector xmi:id="_-oDOkNraEeal5dJZNvUqew" base_Connector="_-n9H8NraEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_V8w48NrgEeal5dJZNvUqew" base_Property="_V8mg4NrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_bwRvstrgEeal5dJZNvUqew" base_Connector="_bwP6gNrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_5AN0oNrgEeal5dJZNvUqew" base_Property="_5AKKQNrgEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_-3zTEdrgEeal5dJZNvUqew" base_Connector="_-3w20NrgEeal5dJZNvUqew"/>
  <UMLRealTime:CapsulePart xmi:id="_AVeyANrhEeal5dJZNvUqew" base_Property="_AVcVwNrhEeal5dJZNvUqew"/>
  <UMLRealTime:RTConnector xmi:id="_EUj2sNrhEeal5dJZNvUqew" base_Connector="_EUhacNrhEeal5dJZNvUqew"/>
  <UMLRealTime:Capsule xmi:id="_yfQo8Er3EemjXuwJLQ28Uw" base_Class="_yet2YEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_yfcPIEr3EemjXuwJLQ28Uw" base_StateMachine="_yfRQAEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_yfkyAEr3EemjXuwJLQ28Uw" base_Package="_yfc2MEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:Protocol xmi:id="_yfocYEr3EemjXuwJLQ28Uw" base_Collaboration="_yflZEEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTMessageSet xmi:id="_yf6wQEr3EemjXuwJLQ28Uw" base_Interface="_yfpDcEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTMessageSet xmi:id="_ygDTIEr3EemjXuwJLQ28Uw" base_Interface="_yfrfsEr3EemjXuwJLQ28Uw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_ygG9gEr3EemjXuwJLQ28Uw" base_Interface="_yfvKEEr3EemjXuwJLQ28Uw" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_ygoh8Er3EemjXuwJLQ28Uw" base_Port="_ygYDQEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTPort xmi:id="_yiJk4Er3EemjXuwJLQ28Uw" isWired="false" base_Port="_yiHIoEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTPort xmi:id="_yiT88Er3EemjXuwJLQ28Uw" isPublish="true" isWired="false" base_Port="_yiQ5oEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_yjEx8Er3EemjXuwJLQ28Uw" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_yjPxEEr3EemjXuwJLQ28Uw" base_Class="_s7aB8Nq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:ParameterProperties xmi:id="_ykmb8Er3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_ykZAkEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:ParameterProperties xmi:id="_yk5W4Er3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_yk1sgEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ymAxMEr3EemjXuwJLQ28Uw" base_Pseudostate="_yl9G0Er3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ymQBwEr3EemjXuwJLQ28Uw" base_Pseudostate="_ymIF8Er3EemjXuwJLQ28Uw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_yqu5IEr3EemjXuwJLQ28Uw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_yet2YEr3EemjXuwJLQ28Uw" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_yq4DEEr3EemjXuwJLQ28Uw" base_Class="_yet2YEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:ParameterProperties xmi:id="_yrsicEr3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_yrpfIEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:ParameterProperties xmi:id="_ysa7MEr3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_ysJOYEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_yvFNoEr3EemjXuwJLQ28Uw" base_Region="_yuy5wEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yvSB8Er3EemjXuwJLQ28Uw" base_Pseudostate="_yvHC0Er3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTState xmi:id="_yvlj8Er3EemjXuwJLQ28Uw" base_State="_yvZWsEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yv4e4Er3EemjXuwJLQ28Uw" base_Pseudostate="_yvvU8Er3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTPort xmi:id="_y0PacEr3EemjXuwJLQ28Uw" isWired="false" base_Port="_y0BYAEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:RTPort xmi:id="_y0hHQEr3EemjXuwJLQ28Uw" isPublish="true" isWired="false" base_Port="_y0WIIEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_y2LUIEr3EemjXuwJLQ28Uw" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:CapsuleProperties xmi:id="_y3QSMEr3EemjXuwJLQ28Uw" base_Class="_xS9RANq_EeahI77Vg4Dl9Q"/>
  <RTCppProperties:ParameterProperties xmi:id="_y4OikEr3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_y4KRIEr3EemjXuwJLQ28Uw"/>
  <RTCppProperties:ParameterProperties xmi:id="_y4av0Er3EemjXuwJLQ28Uw" type="pmd::Message" base_Parameter="_y4ZhsEr3EemjXuwJLQ28Uw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_y5aOUEr3EemjXuwJLQ28Uw" base_Pseudostate="_y5XyEEr3EemjXuwJLQ28Uw"/>
  <UMLRealTime:CapsulePart xmi:id="_y7FCQEr3EemjXuwJLQ28Uw" base_Property="_y67RQEr3EemjXuwJLQ28Uw"/>
</xmi:XMI>

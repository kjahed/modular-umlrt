<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_nx1tkML5EeaSH8bbL43htA" name="RootElement">
    <eAnnotations xmi:id="_IbhgEML7EeaSH8bbL43htA" source="UMLRT_Default_top">
      <details xmi:id="_IbjVQML7EeaSH8bbL43htA" key="top_name" value="Parcer_Router"/>
    </eAnnotations>
    <eAnnotations xmi:id="_-3WKsEsdEem-vt_KZAdFvA" source="dummy"/>
    <eAnnotations xmi:id="_Mi6ysEv2Eem-j5DEuf0x5g" source="dummy"/>
    <eAnnotations xmi:id="_mRwDYEwtEemV6_DVvEUQLQ" source="dummy"/>
    <eAnnotations xmi:id="_V40P0ExeEem0M51q7Bx3xw" source="dummy"/>
    <eAnnotations xmi:id="_oZJswEyFEem7cbk-KW0TAw" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_9X86YML5EeaSH8bbL43htA" name="Parcer_Router" isActive="true">
      <ownedAttribute xmi:id="_o9z8AML6EeaSH8bbL43htA" name="gen" visibility="protected" type="_GuPUUML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sW4woML6EeaSH8bbL43htA" name="top" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_uWG2YML6EeaSH8bbL43htA" name="right" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_wW-h8ML6EeaSH8bbL43htA" name="left" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_zY9sQML6EeaSH8bbL43htA" name="bin1" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YaaZIMMQEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YaWHsMMQEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bKsIYMMQEeaSH8bbL43htA" name="bin2" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ex4RgMMQEeaSH8bbL43htA" name="bin3" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_gzot4MMQEeaSH8bbL43htA" name="bin0" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ez4f8Er2EemS5Jmyw4QPnw" name="dbgAgent" type="_eOLx4Er2EemS5Jmyw4QPnw">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_e0EGIEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_e0EGIUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_9hn-UML6EeaSH8bbL43htA" name="RTConnector1">
        <end xmi:id="_9hsPwML6EeaSH8bbL43htA" partWithPort="_o9z8AML6EeaSH8bbL43htA" role="_a5ynoML6EeaSH8bbL43htA"/>
        <end xmi:id="_9hs20ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-P5ZkML6EeaSH8bbL43htA" name="RTConnector2">
        <end xmi:id="_-P8c4ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_-P8c4cL6EeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-9PnwML6EeaSH8bbL43htA" name="RTConnector3">
        <end xmi:id="_-9SEAML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_-9SrEML6EeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_0KAiIMMPEeaSH8bbL43htA" name="RTConnector4">
        <end xmi:id="_0KCXUMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_0KCXUcMPEeaSH8bbL43htA" partWithPort="_ex4RgMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_02AFcMMPEeaSH8bbL43htA" name="RTConnector5">
        <end xmi:id="_02B6oMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_02B6ocMPEeaSH8bbL43htA" partWithPort="_bKsIYMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_13afIMMPEeaSH8bbL43htA" name="RTConnector6">
        <end xmi:id="_13btQMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_13cUUMMPEeaSH8bbL43htA" partWithPort="_zY9sQML6EeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_2pVrUMMPEeaSH8bbL43htA" name="RTConnector7">
        <end xmi:id="_2pXggMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_2pXggcMPEeaSH8bbL43htA" partWithPort="_gzot4MMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GuPUUML6EeaSH8bbL43htA" name="Gen" classifierBehavior="_sgJk4ML7EeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_a5ynoML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ihPrwML7EeaSH8bbL43htA" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_TGKoYML8EeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_37GIwML8EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_48hwkML8EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_48kM0ML8EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN4IcMYtEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9chtwMYtEeaYV5cb1Zesag" value="8"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BH5zUMYuEeaYV5cb1Zesag" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_erJasEr2EemS5Jmyw4QPnw" name="dbgPortForGen" visibility="protected" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_erKBwEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_erKBwUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sgJk4ML7EeaSH8bbL43htA" name="GenStateMachine" isReentrant="false">
        <region xmi:id="_sgSu0ML7EeaSH8bbL43htA" name="Region">
          <transition xmi:id="_sgjNgML7EeaSH8bbL43htA" name="Initial" source="_sgYOYML7EeaSH8bbL43htA" target="_sgeVAML7EeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_6ZnPEML7EeaSH8bbL43htA">
              <language>C++</language>
              <body>initForPMD();
srand(time(0));
timer.informEvery(UMLRTTimespec(4,0));</body>
            </effect>
          </transition>
          <transition xmi:id="_yYjisML7EeaSH8bbL43htA" name="GENERATING__GENERATING__32" source="_sgeVAML7EeaSH8bbL43htA" target="_sgeVAML7EeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_I7aroML8EeaSH8bbL43htA" name="generation">
              <language>C++</language>
              <body>if (!this->successorFree) {
	log.show(&quot;impossible to generate a new parcel: the first chute is obfuscated\n&quot;);
}
  else {  
    int random = rand() % 4;
    parcel = Parcel();
    parcel.number = random;
    parcel.stage = 0; // 0 for &quot;top&quot;, 1 for &quot;left&quot;, 2 for &quot;right&quot;
    parcel.level = 2;
    enter.transmit(parcel).send();
    log.show(&quot;generating a parcel %d on stage %d\n&quot;, random, parcel.stage);
    this->successorFree = false;
}</body>
            </effect>
            <trigger xmi:id="_1e0JAML7EeaSH8bbL43htA" port="_ihPrwML7EeaSH8bbL43htA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_mEQaEMYdEeaYV5cb1Zesag" name="GENERATING__GENERATING__33" source="_sgeVAML7EeaSH8bbL43htA" target="_sgeVAML7EeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_GNInwMYuEeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_rdPQ8MYdEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_a5ynoML6EeaSH8bbL43htA"/>
          </transition>
          <transition xmi:id="_esxLUEr2EemS5Jmyw4QPnw" name="From__GENERATING__35" source="_sgeVAML7EeaSH8bbL43htA" target="_esgFkEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_es_NwEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;GENERATING&quot;,&quot;GENERATING&quot;,&quot;To__GENERATING__37&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;GENERATING&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_es5HIEr2EemS5Jmyw4QPnw" name="PME_Trig36" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_erJasEr2EemS5Jmyw4QPnw"/>
          </transition>
          <transition xmi:id="_es68UEr2EemS5Jmyw4QPnw" name="To__GENERATING__37" guard="_etDfMUr2EemS5Jmyw4QPnw" source="_esgFkEr2EemS5Jmyw4QPnw" target="_sgeVAML7EeaSH8bbL43htA">
            <ownedRule xmi:id="_etDfMUr2EemS5Jmyw4QPnw" name="PME_checkDecesion38">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_etDfMEr2EemS5Jmyw4QPnw" name="PME_checkDecesion38">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__GENERATING__37&quot;,&quot;GENERATING&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sgYOYML7EeaSH8bbL43htA" name="Pseudo31"/>
          <subvertex xmi:type="uml:State" xmi:id="_sgeVAML7EeaSH8bbL43htA" name="GENERATING"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_esgFkEr2EemS5Jmyw4QPnw" name="DecesionPoint__34" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_erpxAUr2EemS5Jmyw4QPnw" name="loadHeap" specification="_erpxAEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.delay&quot;,this->delay);
heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eryT4Ur2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_eryT4Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_er9TAEr2EemS5Jmyw4QPnw" name="sendMessage" specification="_er8r8Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    enter.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_esGc8Er2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_esF14Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_esamAEr2EemS5Jmyw4QPnw" name="initForPMD" specification="_esZ-8Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Gen::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Gen::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_erpxAEr2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_erpxAUr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_eryT4Er2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_eryT4Ur2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_er8r8Er2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_er9TAEr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_er96EEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_er-hIEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_esF14Er2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_esGc8Er2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_esHrEEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_esISIEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_esZ-8Er2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_esamAEr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IuNA8ML6EeaSH8bbL43htA" name="Stage" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejuiwML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gvpnwML6EeaSH8bbL43htA" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ieg9UML6EeaSH8bbL43htA" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Ko_yUML9EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ko_yUcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ko_yUsL9EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_QkCwQMMEEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_8dMHMMM5EeahHehXumVB-w" name="chute1" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ANvnsMM6EeahHehXumVB-w" name="chute2" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Dpq8AMM6EeahHehXumVB-w" name="sensor" visibility="protected" type="_AJLGMMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_KElJ8MM6EeahHehXumVB-w" name="switcher" visibility="protected" type="_O_UbEMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:id="_GmpDcMM6EeahHehXumVB-w" name="RTConnector1">
        <end xmi:id="_GmrfsMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_v-KQIMM4EeahHehXumVB-w"/>
        <end xmi:id="_GmrfscM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_CHUN4MM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_JFiHwMM6EeahHehXumVB-w" name="RTConnector2">
        <end xmi:id="_JFkkAMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_JFkkAcM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Ni2AkMM6EeahHehXumVB-w" name="RTConnector3">
        <end xmi:id="_Ni31wMM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_m5dgAMM5EeahHehXumVB-w"/>
        <end xmi:id="_Ni31wcM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_gMZLEMM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Q2rv4MM6EeahHehXumVB-w" name="RTConnector4">
        <end xmi:id="_Q2uMIMM6EeahHehXumVB-w" role="_ejuiwML6EeaSH8bbL43htA"/>
        <end xmi:id="_Q2uMIcM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_TMcGUMM6EeahHehXumVB-w" name="RTConnector5">
        <end xmi:id="_TMfJoMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_0cp_QMM5EeahHehXumVB-w"/>
        <end xmi:id="_TMfwsMM6EeahHehXumVB-w" role="_gvpnwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_T-SaAMM6EeahHehXumVB-w" name="RTConnector6">
        <end xmi:id="_T-VdUMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_3tk9cMM5EeahHehXumVB-w"/>
        <end xmi:id="_T-WEYMM6EeahHehXumVB-w" role="_ieg9UML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_fBuSQMM6EeahHehXumVB-w" name="RTConnector7">
        <end xmi:id="_fBwHcMM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_fBwHccM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_VxKF0MM6EeahHehXumVB-w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LOPUwML6EeaSH8bbL43htA" name="Bin" classifierBehavior="_SAHMAMMMEeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_l2PuIML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K51lgMMPEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K5yiMMMPEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LhdrYML9EeaSH8bbL43htA" name="parcels" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LhdrYcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LhdrYsL9EeaSH8bbL43htA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_P-w_UMMMEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_etHwoEr2EemS5Jmyw4QPnw" name="dbgPortForBin" visibility="protected" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etIXsEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_etIXsUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_SAHMAMMMEeaSH8bbL43htA" name="BinStateMachine" isReentrant="false">
        <region xmi:id="_SAKPUMMMEeaSH8bbL43htA" name="Region">
          <transition xmi:id="_SAPH0cMMEeaSH8bbL43htA" name="Initial" source="_SAMEgMMMEeaSH8bbL43htA" target="_SAN5sMMMEeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_JNwIoMX4EeaYV5cb1Zesag">
              <language>C++</language>
              <body>initForPMD();
enter.setFree(true).send();</body>
            </effect>
          </transition>
          <transition xmi:id="_YPSEAMMMEeaSH8bbL43htA" name="IDLE__IDLE__40" source="_SAN5sMMMEeaSH8bbL43htA" target="_SAN5sMMMEeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mJFFYMMMEeaSH8bbL43htA">
              <language>C++</language>
              <body>    log.show(&quot;%s received Parcel (%d)\n&quot;, getName(), p.number);
    enter.setFree(true).send();
</body>
            </effect>
            <trigger xmi:id="_bX4MoMMMEeaSH8bbL43htA" event="_SR6HoMMBEeaSH8bbL43htA" port="_l2PuIML6EeaSH8bbL43htA"/>
          </transition>
          <transition xmi:id="_euVRkEr2EemS5Jmyw4QPnw" name="From__IDLE__42" source="_SAN5sMMMEeaSH8bbL43htA" target="_euLgkEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_euiF4Er2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__44&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_euXt0Er2EemS5Jmyw4QPnw" name="PME_Trig43" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_etHwoEr2EemS5Jmyw4QPnw"/>
          </transition>
          <transition xmi:id="_eufpoEr2EemS5Jmyw4QPnw" name="To__IDLE__44" guard="_eum-YEr2EemS5Jmyw4QPnw" source="_euLgkEr2EemS5Jmyw4QPnw" target="_SAN5sMMMEeaSH8bbL43htA">
            <ownedRule xmi:id="_eum-YEr2EemS5Jmyw4QPnw" name="PME_checkDecesion45">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_eumXUEr2EemS5Jmyw4QPnw" name="PME_checkDecesion45">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__44&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_SAMEgMMMEeaSH8bbL43htA" name="Pseudo39"/>
          <subvertex xmi:type="uml:State" xmi:id="_SAN5sMMMEeaSH8bbL43htA" name="IDLE"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_euLgkEr2EemS5Jmyw4QPnw" name="DecesionPoint__41" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_etarkUr2EemS5Jmyw4QPnw" name="loadHeap" specification="_etarkEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_etdu4Er2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_etdH0Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_etrKQEr2EemS5Jmyw4QPnw" name="sendMessage" specification="_etqjMEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_etu0oUr2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_etu0oEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_euCWoUr2EemS5Jmyw4QPnw" name="initForPMD" specification="_euCWoEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Bin::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Bin::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_etarkEr2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_etarkUr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_etdH0Er2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_etdu4Er2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_etqjMEr2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_etrKQEr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_ets_cEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ettmgEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_etu0oEr2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_etu0oUr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_etwCwEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_etx38Er2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_euCWoEr2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_euCWoUr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QrBtkML6EeaSH8bbL43htA" name="transmission">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_Qq5xwML6EeaSH8bbL43htA" name="transmission">
        <interfaceRealization xmi:id="_QrQXEML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrKQcML6EeaSH8bbL43htA" contract="_QrKQcML6EeaSH8bbL43htA"/>
        <interfaceRealization xmi:id="_QreZgML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA" contract="_QrZhAML6EeaSH8bbL43htA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrKQcML6EeaSH8bbL43htA" name="transmission">
        <ownedOperation xmi:id="_NmRscMOlEeaV4cHHWddkKg" name="setFree">
          <ownedParameter xmi:id="_2eSnwMOlEeaV4cHHWddkKg" name="free">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrSzUML6EeaSH8bbL43htA" name="transmission~">
        <ownedOperation xmi:id="_PIeRgMMBEeaSH8bbL43htA" name="transmit">
          <ownedParameter xmi:id="_QFxAMMMBEeaSH8bbL43htA" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrXr0ML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrSzUML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_QrY58ML6EeaSH8bbL43htA" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrZhAML6EeaSH8bbL43htA" name="transmissionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrfnoML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_SR6HoMMBEeaSH8bbL43htA" operation="_PIeRgMMBEeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_OTwdgMOlEeaV4cHHWddkKg" operation="_NmRscMOlEeaV4cHHWddkKg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aEoEwML7EeaSH8bbL43htA" name="Parcel">
      <ownedAttribute xmi:id="_cj_qMML7EeaSH8bbL43htA" name="number" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2upQ0MMJEeaSH8bbL43htA" name="level">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_wiSxYMMLEeaSH8bbL43htA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BxJI8N5pEeakB9CQglrL_g" name="stage" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jvOOEMM4EeahHehXumVB-w" name="Chute" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_p1u5UMM4EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sK7PEMM4EeahHehXumVB-w" name="exit" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_v-KQIMM4EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:id="_4iC8wMM4EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8_D6oMM4EeahHehXumVB-w" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8_HlAMM4EeahHehXumVB-w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_gQNcAMOlEeaV4cHHWddkKg" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_qxGOYMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WbYyIMX5EeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oc-oIMYhEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1Wbm0MYhEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ewt3MEr2EemS5Jmyw4QPnw" name="dbgPortForChute" visibility="protected" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ewt3MUr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ewueQEr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mXBE0MM6EeahHehXumVB-w" name="ChuteStateMachine" isReentrant="false">
        <region xmi:id="_mXBE0cM6EeahHehXumVB-w" name="Region">
          <transition xmi:id="_mXBE0sM6EeahHehXumVB-w" name="Initial" source="_mXBE18M6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ez01kEr2EemS5Jmyw4QPnw" name="Initial__71">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_mXBE1MM6EeahHehXumVB-w" name="reception" source="_mXBE2MM6EeahHehXumVB-w" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mXBE1cM6EeahHehXumVB-w">
              <language>C++</language>
              <body>this->parcel = Parcel();
this->parcel.number = p.number;
this->parcel.level =p.level;
this->parcel.stage = p.stage;

log.show(&quot;Chute %s of stage %d becomes occupied\n&quot;, this->getName(), p.stage);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
            <trigger xmi:id="_mXBE1sM6EeahHehXumVB-w" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_nnQiEMOlEeaV4cHHWddkKg" name="IDLE__IDLE__58" source="_mXBE2MM6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_AMB4YMOmEeaV4cHHWddkKg">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_8Oj9QMOlEeaV4cHHWddkKg" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_9Jw84MX4EeaYV5cb1Zesag" name="transmission" source="_k2uPwMX4EeaYV5cb1Zesag" target="_aLwP8MX6EeaYV5cb1Zesag">
            <trigger xmi:id="_w7wScMX5EeaYV5cb1Zesag" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_DR_fYMX5EeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__55" source="_k2uPwMX4EeaYV5cb1Zesag" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LH2oYMX5EeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->successorFree =free;</body>
            </effect>
            <trigger xmi:id="_I-QeoMX5EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_eK17sMX6EeaYV5cb1Zesag" name="jam ?__IDLE__57" guard="_pg8RQMX6EeaYV5cb1Zesag" source="_aLwP8MX6EeaYV5cb1Zesag" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_pg8RQMX6EeaYV5cb1Zesag">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_pg8RQcX6EeaYV5cb1Zesag">
                <language>C++</language>
                <body>return this->successorFree;</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5gzAMMX6EeaYV5cb1Zesag">
              <language>C++</language>
              <body>	detection.detect(this->parcel).send();
	exit.transmit(this->parcel).send();
	this->successorFree = false;
log.show(&quot;Chute %s of stage %d is now free\n&quot;, this->getName(), this->parcel.stage);</body>
            </effect>
          </transition>
          <transition xmi:id="_toofYMX6EeaYV5cb1Zesag" name="jam ?__OCCUPIED__56" guard="_z09ewMX6EeaYV5cb1Zesag" source="_aLwP8MX6EeaYV5cb1Zesag" target="_k2uPwMX4EeaYV5cb1Zesag">
            <ownedRule xmi:id="_z09ewMX6EeaYV5cb1Zesag">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_z09ewcX6EeaYV5cb1Zesag">
                <language>C++</language>
                <body>return !this->successorFree;</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Br9q0MX7EeaYV5cb1Zesag">
              <language>C++</language>
              <body>log.show(&quot;JAM detected in %s of stage %d\n&quot;, this->getName(), this->parcel.level-1);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
          </transition>
          <transition xmi:id="_ey958Er2EemS5Jmyw4QPnw" name="60" source="_aLwP8MX6EeaYV5cb1Zesag" target="_eyyTwEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ezpPYEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;jam ?&quot;,&quot;IDLE&quot;,&quot;To__IDLE__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;jam ?&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__68&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;jam ?&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ezBkUEr2EemS5Jmyw4QPnw" name="From__IDLE__61" source="_mXBE2MM6EeahHehXumVB-w" target="_eyyTwEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ezmMEEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__68&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ezISAEr2EemS5Jmyw4QPnw" name="PME_Trig62" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_ewt3MEr2EemS5Jmyw4QPnw"/>
            <trigger xmi:id="_ezOYoEr2EemS5Jmyw4QPnw" name="PME_Trig63" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_ezSDAEr2EemS5Jmyw4QPnw" name="From__OCCUPIED__64" source="_k2uPwMX4EeaYV5cb1Zesag" target="_eyyTwEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ezvWAEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;IDLE&quot;,&quot;To__IDLE__67&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__68&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;OCCUPIED&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ezVtYEr2EemS5Jmyw4QPnw" name="PME_Trig65" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_ewt3MEr2EemS5Jmyw4QPnw"/>
            <trigger xmi:id="_ezbM8Er2EemS5Jmyw4QPnw" name="PME_Trig66" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_ezdpMEr2EemS5Jmyw4QPnw" name="To__IDLE__67" guard="_ezv9EUr2EemS5Jmyw4QPnw" source="_eyyTwEr2EemS5Jmyw4QPnw" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_ezv9EUr2EemS5Jmyw4QPnw" name="PME_checkDecesion69">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezv9EEr2EemS5Jmyw4QPnw" name="PME_checkDecesion69">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__67&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_ezgsgEr2EemS5Jmyw4QPnw" name="To__OCCUPIED__68" guard="_ezzncUr2EemS5Jmyw4QPnw" source="_eyyTwEr2EemS5Jmyw4QPnw" target="_k2uPwMX4EeaYV5cb1Zesag">
            <ownedRule xmi:id="_ezzncUr2EemS5Jmyw4QPnw" name="PME_checkDecesion70">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ezzncEr2EemS5Jmyw4QPnw" name="PME_checkDecesion70">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__OCCUPIED__68&quot;,&quot;OCCUPIED&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_mXBE18M6EeahHehXumVB-w" name="Pseudo54"/>
          <subvertex xmi:type="uml:State" xmi:id="_mXBE2MM6EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_t4ekIMX4EeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_k2uPwMX4EeaYV5cb1Zesag" name="OCCUPIED"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_aLwP8MX6EeaYV5cb1Zesag" name="jam ?" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_eyyTwEr2EemS5Jmyw4QPnw" name="DecesionPoint__59" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_exONgEr2EemS5Jmyw4QPnw" name="loadHeap" specification="_exNmcEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_exRQ0Ur2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_exRQ0Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_exvK4Ur2EemS5Jmyw4QPnw" name="sendMessage" specification="_exvK4Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;exit&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    exit.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;detect&quot;) {
   if(message.payload.size()==1){
    detection.detect( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ex4U0Er2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_ex3twEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eyicIEr2EemS5Jmyw4QPnw" name="initForPMD" specification="_eyh1EEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Chute::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Chute::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addOutPutMessages(&quot;exit&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;exit&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForChute&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_exNmcEr2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_exONgEr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_exRQ0Er2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_exRQ0Ur2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_exvK4Er2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_exvK4Ur2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_ex0DYEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ex1RgEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ex3twEr2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_ex4U0Er2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_ex9NUEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ex_pkEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_eyh1EEr2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_eyicIEr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wvPHwMM4EeahHehXumVB-w" name="detection">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_wvKPQMM4EeahHehXumVB-w" name="detection">
        <interfaceRealization xmi:id="_wvat8MM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvV1cMM4EeahHehXumVB-w" contract="_wvV1cMM4EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_wvltEMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w" contract="_wviCsMM4EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvV1cMM4EeahHehXumVB-w" name="detection"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvcjIMM4EeahHehXumVB-w" name="detection~">
        <ownedOperation xmi:id="_F05S4MM5EeahHehXumVB-w" name="detect">
          <ownedParameter xmi:id="_G2MX0MM5EeahHehXumVB-w" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvgNgMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvcjIMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_wvhboMM4EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wviCsMM4EeahHehXumVB-w" name="detectionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvmUIMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Mh59cMM5EeahHehXumVB-w" operation="_F05S4MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AJLGMMM5EeahHehXumVB-w" name="Sensor" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_CHUN4MM5EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_m5dgAMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uL2LsMM9EeahHehXumVB-w" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_eSkioEr2EemS5Jmyw4QPnw" name="dbgPortForSensor" visibility="protected" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eSlJsEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_eSlJsUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_IdCu8MM7EeahHehXumVB-w" name="SensorStateMachine" isReentrant="false">
        <region xmi:id="_IdCu8cM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_IdDWAMM7EeahHehXumVB-w" name="Initial" source="_IdDWBcM7EeahHehXumVB-w" target="_IdDWBsM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ejNmsEr2EemS5Jmyw4QPnw" name="Initial__8">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_IdDWAsM7EeahHehXumVB-w" name="IDLE__IDLE__2" source="_IdDWBsM7EeahHehXumVB-w" target="_IdDWBsM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_IdDWA8M7EeahHehXumVB-w">
              <language>C++</language>
              <body>    int reducedNumber = p.number/p.level; 
    int isPair = reducedNumber % 2;
    if (isPair == 0) {
    log.show(&quot;At stage %s (%d), turn left.\n&quot;, getName(), p.level);
    switchProtocol.setSwitch(0).send();
    }
    else {
    log.show(&quot;At stage %s (%d), turn right.\n&quot;, getName(), p.level);
    switchProtocol.setSwitch(1).send();
    }</body>
            </effect>
            <trigger xmi:id="_PGM0QMM7EeahHehXumVB-w" event="_Mh59cMM5EeahHehXumVB-w" port="_CHUN4MM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_eiRykEr2EemS5Jmyw4QPnw" name="From__IDLE__4" source="_IdDWBsM7EeahHehXumVB-w" target="_eha28Er2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ejD1sEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__6&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_eioX4Er2EemS5Jmyw4QPnw" name="PME_Trig5" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_eSkioEr2EemS5Jmyw4QPnw"/>
          </transition>
          <transition xmi:id="_ei2aUEr2EemS5Jmyw4QPnw" name="To__IDLE__6" guard="_ejGR8Ur2EemS5Jmyw4QPnw" source="_eha28Er2EemS5Jmyw4QPnw" target="_IdDWBsM7EeahHehXumVB-w">
            <ownedRule xmi:id="_ejGR8Ur2EemS5Jmyw4QPnw" name="PME_checkDecesion7">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ejGR8Er2EemS5Jmyw4QPnw" name="PME_checkDecesion7">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__6&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_IdDWBcM7EeahHehXumVB-w" name="Pseudo1"/>
          <subvertex xmi:type="uml:State" xmi:id="_IdDWBsM7EeahHehXumVB-w" name="IDLE"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_eha28Er2EemS5Jmyw4QPnw" name="DecesionPoint__3" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eZseUEr2EemS5Jmyw4QPnw" name="loadHeap" specification="_eZpbAEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eaLmgEr2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_eaKYYEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ecf6sEr2EemS5Jmyw4QPnw" name="sendMessage" specification="_eceskEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;switchProtocol&quot;) {
  if(message.signal==&quot;setSwitch&quot;) {
   if(message.payload.size()==1){
    switchProtocol.setSwitch( boost::any_cast&lt;int>(message.payload[&quot;c&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eeQ1QUr2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_eeQ1QEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_egbYcUr2EemS5Jmyw4QPnw" name="initForPMD" specification="_egbYcEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Sensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Sensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForSensor&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_eZpbAEr2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_eZseUEr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_eaKYYEr2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_eaLmgEr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_eceskEr2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_ecf6sEr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_ectWEEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_edHlwEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_eeQ1QEr2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_eeQ1QUr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_eeqd4Er2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_eeuIQEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_egbYcEr2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_egbYcUr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O_UbEMM5EeahHehXumVB-w" name="Switcher" classifierBehavior="_yUE3QMM7EeahHehXumVB-w" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gMZLEMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0cp_QMM5EeahHehXumVB-w" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_3tk9cMM5EeahHehXumVB-w" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_VxKF0MM6EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:id="_tx4ecMM7EeahHehXumVB-w" name="choice">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Yk87wMM9EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA"/>
      <ownedAttribute xmi:id="_GGZlEMOmEeaV4cHHWddkKg" name="leftSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J43KEMOmEeaV4cHHWddkKg" name="rightSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_x2tmMMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_b1lNUMYiEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_eEeGwMYiEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_4c8vAMYlEeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejR4IEr2EemS5Jmyw4QPnw" name="dbgPortForSwitcher" visibility="protected" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ejSfMEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ejTtUEr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_yUE3QMM7EeahHehXumVB-w" name="SwitcherStateMachine" isReentrant="false">
        <region xmi:id="_yUMMAMM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_yUTgwcM7EeahHehXumVB-w" name="Initial" source="_yUOoQMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_erD7IEr2EemS5Jmyw4QPnw" name="Initial__30">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_2LEW8MM7EeahHehXumVB-w" name="IDLE__IDLE__10" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ci9gsMM8EeahHehXumVB-w">
              <language>C++</language>
              <body>this->choice = c;</body>
            </effect>
            <trigger xmi:id="_82qsQMM7EeahHehXumVB-w" event="_cjDs4MM5EeahHehXumVB-w" port="_gMZLEMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_GIbLgMM8EeahHehXumVB-w" name="reception" source="_yUSSoMM7EeahHehXumVB-w" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_fAyMMMM8EeahHehXumVB-w">
              <language>C++</language>
              <body>this->parcel = Parcel();
this->parcel.number = p.number;
this->parcel.level = p.level;
this->parcel.stage = p.stage;
log.show(&quot;Switcher %s of stage %d becomes occupied\n&quot;, this->getName(), p.stage);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
            <trigger xmi:id="_J-RbsMM8EeahHehXumVB-w" event="_SR6HoMMBEeaSH8bbL43htA" port="_VxKF0MM6EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_ueXm0MX1EeaYV5cb1Zesag" name="IDLE__IDLE__12" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_96BcgMX1EeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;left successor of switcher becomes free\n&quot;);
this->leftSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_4FUS8MX1EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_3tk9cMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_A2lUQMX2EeaYV5cb1Zesag" name="IDLE__IDLE__13" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_GFMuMMX2EeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;right successor of switcher becomes free\n&quot;);
this->rightSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_IyVp4MX2EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_0cp_QMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_TZCXcMYlEeaYV5cb1Zesag" name="Jam ?__OCCUPIED__15" guard="_NQku8MYmEeaYV5cb1Zesag" source="_RQRUIMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <ownedRule xmi:id="_NQku8MYmEeaYV5cb1Zesag">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_NQku8cYmEeaYV5cb1Zesag">
                <language>C++</language>
                <body>bool isFree = (choice == 0) ? this->leftSuccessorFree : this->rightSuccessorFree;
return !isFree;</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_89scoMbxEeakjcfRNzjEZw">
              <language>C++</language>
              <body>log.show(&quot;JAM detected in %s of stage %d\n&quot;, this->getName(), this->parcel.level-1);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
          </transition>
          <transition xmi:id="_UO4aUMYlEeaYV5cb1Zesag" name="Jam ?__IDLE__17" guard="_Qkpu0MYmEeaYV5cb1Zesag" source="_RQRUIMYlEeaYV5cb1Zesag" target="_yUSSoMM7EeahHehXumVB-w">
            <ownedRule xmi:id="_Qkpu0MYmEeaYV5cb1Zesag">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_Qkpu0cYmEeaYV5cb1Zesag">
                <language>C++</language>
                <body>bool isFree = (choice == 0) ? this->leftSuccessorFree : this->rightSuccessorFree;
return isFree;</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_haaLAMYmEeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->parcel.level--;

log.show(&quot;Switcher %s of stage %d is now free\n&quot;, this->getName(), this->parcel.stage);

if (choice == 0) {
	this->parcel.stage = 1;
	left.transmit(this->parcel).send();
	this->leftSuccessorFree = false;
}
else {
	this->parcel.stage = 2;
	right.transmit(this->parcel).send();
	this->rightSuccessorFree = false;
}</body>
            </effect>
          </transition>
          <transition xmi:id="_BK59oMYmEeaYV5cb1Zesag" name="transmission" source="_GOTbgMYlEeaYV5cb1Zesag" target="_RQRUIMYlEeaYV5cb1Zesag">
            <trigger xmi:id="_E7SfAMYmEeaYV5cb1Zesag" port="_4c8vAMYlEeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_AAZAYMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__16" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_IFuv0MYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;right successor of switcher becomes free\n&quot;);
this->rightSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_D_7YEMYoEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_0cp_QMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_LJ32QMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__14" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_R25H4MYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;left successor of switcher becomes free\n&quot;);
this->leftSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_PMRUsMYoEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_3tk9cMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_i9e1YMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__11" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yidmMMYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>log.show(&quot;Impossible to activate the switch of %s: the switch gate is obstructed by a parcel\n&quot;, this->getName());</body>
            </effect>
            <trigger xmi:id="_oHSAwMYoEeaYV5cb1Zesag" event="_cjDs4MM5EeahHehXumVB-w" port="_gMZLEMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_epQkUEr2EemS5Jmyw4QPnw" name="19" source="_RQRUIMYlEeaYV5cb1Zesag" target="_eoehMEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eq2fwEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Jam ?&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__26&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Jam ?&quot;,&quot;IDLE&quot;,&quot;To__IDLE__27&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Jam ?&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_epYgIEr2EemS5Jmyw4QPnw" name="From__OCCUPIED__20" source="_GOTbgMYlEeaYV5cb1Zesag" target="_eoehMEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eqtV0Er2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__26&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;IDLE&quot;,&quot;To__IDLE__27&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;OCCUPIED&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_epktYEr2EemS5Jmyw4QPnw" name="PME_Trig21" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_ejR4IEr2EemS5Jmyw4QPnw"/>
            <trigger xmi:id="_epwTkEr2EemS5Jmyw4QPnw" name="PME_Trig22" event="_SR6HoMMBEeaSH8bbL43htA" port="_VxKF0MM6EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_ep6roEr2EemS5Jmyw4QPnw" name="From__IDLE__23" source="_yUSSoMM7EeahHehXumVB-w" target="_eoehMEr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_eq7YQEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__26&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__27&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_eqIuEEr2EemS5Jmyw4QPnw" name="PME_Trig24" event="_eP3z8Er2EemS5Jmyw4QPnw" port="_ejR4IEr2EemS5Jmyw4QPnw"/>
            <trigger xmi:id="_eqPbwEr2EemS5Jmyw4QPnw" name="PME_Trig25" port="_4c8vAMYlEeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_eqbpAEr2EemS5Jmyw4QPnw" name="To__OCCUPIED__26" guard="_eq_psEr2EemS5Jmyw4QPnw" source="_eoehMEr2EemS5Jmyw4QPnw" target="_GOTbgMYlEeaYV5cb1Zesag">
            <ownedRule xmi:id="_eq_psEr2EemS5Jmyw4QPnw" name="PME_checkDecesion28">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_eq_CoEr2EemS5Jmyw4QPnw" name="PME_checkDecesion28">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__OCCUPIED__26&quot;,&quot;OCCUPIED&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_eqc3IEr2EemS5Jmyw4QPnw" name="To__IDLE__27" guard="_erA30Ur2EemS5Jmyw4QPnw" source="_eoehMEr2EemS5Jmyw4QPnw" target="_yUSSoMM7EeahHehXumVB-w">
            <ownedRule xmi:id="_erA30Ur2EemS5Jmyw4QPnw" name="PME_checkDecesion29">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_erA30Er2EemS5Jmyw4QPnw" name="PME_checkDecesion29">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__27&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yUOoQMM7EeahHehXumVB-w" name="Pseudo9"/>
          <subvertex xmi:type="uml:State" xmi:id="_yUSSoMM7EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_gwFREMYlEeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_GOTbgMYlEeaYV5cb1Zesag" name="OCCUPIED"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_RQRUIMYlEeaYV5cb1Zesag" name="Jam ?" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_eoehMEr2EemS5Jmyw4QPnw" name="DecesionPoint__18" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ekgAIUr2EemS5Jmyw4QPnw" name="loadHeap" specification="_ekgAIEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.choice&quot;,this->choice);
heap.setVarValue(&quot;this.leftSuccessorFree&quot;,this->leftSuccessorFree);
heap.setVarValue(&quot;this.rightSuccessorFree&quot;,this->rightSuccessorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ekrmUEr2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_ekq_QEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.choice&quot;,&amp;this->choice);
heap.loadVarFromHeap(&quot;this.leftSuccessorFree&quot;,&amp;this->leftSuccessorFree);
heap.loadVarFromHeap(&quot;this.rightSuccessorFree&quot;,&amp;this->rightSuccessorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_el5uUEr2EemS5Jmyw4QPnw" name="sendMessage" specification="_el4gMEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;right&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    right.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;left&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    left.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_emI-4Ur2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_emI-4Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_enzy0Ur2EemS5Jmyw4QPnw" name="initForPMD" specification="_enzy0Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Switcher::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Switcher::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;right&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;left&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;right&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;left&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForSwitcher&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ekgAIEr2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_ekgAIUr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_ekq_QEr2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_ekrmUEr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_el4gMEr2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_el5uUEr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_el8xoEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emEGYEr2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_emI-4Er2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_emI-4Ur2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_emPFgEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_emTW8Er2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_enzy0Er2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_enzy0Ur2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RDfSQMM5EeahHehXumVB-w" name="switchProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_RDbn4MM5EeahHehXumVB-w" name="switchProtocol">
        <interfaceRealization xmi:id="_RDkx0MM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDiVkMM5EeahHehXumVB-w" contract="_RDiVkMM5EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_RDsGkMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w" contract="_RDpDQMM5EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDiVkMM5EeahHehXumVB-w" name="switchProtocol"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDlY4MM5EeahHehXumVB-w" name="switchProtocol~">
        <ownedOperation xmi:id="_XR2R8MM5EeahHehXumVB-w" name="setSwitch">
          <ownedParameter xmi:id="_YFqUgMM5EeahHehXumVB-w" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDn1IMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDlY4MM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_RDocMMM5EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDpDQMM5EeahHehXumVB-w" name="switchProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDtUsMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_cjDs4MM5EeahHehXumVB-w" operation="_XR2R8MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eOLx4Er2EemS5Jmyw4QPnw" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_eP5pIEr2EemS5Jmyw4QPnw" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eP63QEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_eP9TgEr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_eSzMIEr2EemS5Jmyw4QPnw" name="dbgPortForSensor" visibility="public" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_eS1BUEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_eS1oYEr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejbCEEr2EemS5Jmyw4QPnw" name="dbgPortForSwitcher" visibility="public" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ejbpIEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ejbpIUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_erLP4Er2EemS5Jmyw4QPnw" name="dbgPortForGen" visibility="public" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_erL28Er2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_erL28Ur2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_etKz8Er2EemS5Jmyw4QPnw" name="dbgPortForBin" visibility="public" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_etNQMEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_etN3QEr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ewvsYEr2EemS5Jmyw4QPnw" name="dbgPortForChute" visibility="public" type="_ePFw0Er2EemS5Jmyw4QPnw" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ewwTcEr2EemS5Jmyw4QPnw" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ewwTcUr2EemS5Jmyw4QPnw" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_eOsIMEr2EemS5Jmyw4QPnw" name="dbgAgent StateMachine">
        <region xmi:id="_ev-QUEr2EemS5Jmyw4QPnw" name="mainRegion">
          <transition xmi:id="_ewPWEEr2EemS5Jmyw4QPnw" name="Trans__Init__State__4849" source="_ewHaQEr2EemS5Jmyw4QPnw" target="_ewAskUr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ewkGMEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__48&quot;,&quot;New__State__47&quot;,&quot;To__New__State__47__52&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__48&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_ewRyUEr2EemS5Jmyw4QPnw" name="From__New__State__47__50" source="_ewGMIEr2EemS5Jmyw4QPnw" target="_ewAskUr2EemS5Jmyw4QPnw">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ewlUUEr2EemS5Jmyw4QPnw">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__47&quot;,&quot;New__State__47&quot;,&quot;To__New__State__47__52&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__47&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ewUOkEr2EemS5Jmyw4QPnw" name="PME_Trig51" port="_eP5pIEr2EemS5Jmyw4QPnw">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_ewbjUEr2EemS5Jmyw4QPnw" name="To__New__State__47__52" guard="_ewmicEr2EemS5Jmyw4QPnw" source="_ewAskUr2EemS5Jmyw4QPnw" target="_ewGMIEr2EemS5Jmyw4QPnw">
            <ownedRule xmi:id="_ewmicEr2EemS5Jmyw4QPnw" name="PME_checkDecesion53">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_ewl7YEr2EemS5Jmyw4QPnw" name="PME_checkDecesion53">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__47__52&quot;,&quot;New__State__47&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ewAskUr2EemS5Jmyw4QPnw" name="DecesionPoint__46" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_ewGMIEr2EemS5Jmyw4QPnw" name="New__State__47">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_e0FUQEr2EemS5Jmyw4QPnw" name="New__State__47">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ewHaQEr2EemS5Jmyw4QPnw" name="Init__State__48"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eu1A0Ur2EemS5Jmyw4QPnw" name="loadHeap" specification="_eu1A0Er2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_eu22AUr2EemS5Jmyw4QPnw" name="unLoadHeap" specification="_eu22AEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_evWlQUr2EemS5Jmyw4QPnw" name="sendMessage" specification="_evWlQEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForSensor&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForSensor.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForSwitcher&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForSwitcher.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForGen&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForGen.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForBin&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForBin.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_evhkYUr2EemS5Jmyw4QPnw" name="sendInternalMessage" specification="_evhkYEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_evz4QEr2EemS5Jmyw4QPnw" name="initForPMD" specification="_evzRMEr2EemS5Jmyw4QPnw">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForSensor&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForSwitcher&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_eu1A0Er2EemS5Jmyw4QPnw" name="loadHeap" visibility="private" method="_eu1A0Ur2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_eu22AEr2EemS5Jmyw4QPnw" name="unLoadHeap" visibility="private" method="_eu22AUr2EemS5Jmyw4QPnw"/>
      <ownedOperation xmi:id="_evWlQEr2EemS5Jmyw4QPnw" name="sendMessage" visibility="private" method="_evWlQUr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_evbdwEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_evcr4Er2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_evhkYEr2EemS5Jmyw4QPnw" name="sendInternalMessage" visibility="private" method="_evhkYUr2EemS5Jmyw4QPnw">
        <ownedParameter xmi:id="_evlOwEr2EemS5Jmyw4QPnw" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_evl10Er2EemS5Jmyw4QPnw" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_evzRMEr2EemS5Jmyw4QPnw" name="initForPMD" visibility="private" method="_evz4QEr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ePA4UEr2EemS5Jmyw4QPnw" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_ePFw0Er2EemS5Jmyw4QPnw" name="dbgProtocol">
        <interfaceRealization xmi:id="_ePsNwEr2EemS5Jmyw4QPnw" client="_ePFw0Er2EemS5Jmyw4QPnw" supplier="_ePMegEr2EemS5Jmyw4QPnw" contract="_ePMegEr2EemS5Jmyw4QPnw"/>
        <interfaceRealization xmi:id="_ePxGQEr2EemS5Jmyw4QPnw" client="_ePFw0Er2EemS5Jmyw4QPnw" supplier="_ePQI4Er2EemS5Jmyw4QPnw" contract="_ePQI4Er2EemS5Jmyw4QPnw"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ePMegEr2EemS5Jmyw4QPnw" name="dbgProtocol">
        <ownedOperation xmi:id="_eP0woEr2EemS5Jmyw4QPnw" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ePO6wEr2EemS5Jmyw4QPnw" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ePQI4Er2EemS5Jmyw4QPnw" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_ePSlIEr2EemS5Jmyw4QPnw" client="_ePFw0Er2EemS5Jmyw4QPnw" supplier="_ePO6wEr2EemS5Jmyw4QPnw"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_ePXdoEr2EemS5Jmyw4QPnw" client="_ePFw0Er2EemS5Jmyw4QPnw" supplier="_ePQI4Er2EemS5Jmyw4QPnw"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_eP3z8Er2EemS5Jmyw4QPnw" operation="_eP0woEr2EemS5Jmyw4QPnw"/>
    </packagedElement>
    <profileApplication xmi:id="_nykGUML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_nyl7gML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dJfAML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dKtIML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dLUMML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dL7QML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_9cQyoML5EeaSH8bbL43htA" base_Class="_9X86YML5EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Gu9tEML6EeaSH8bbL43htA" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Iu5kgML6EeaSH8bbL43htA" base_Class="_IuNA8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_LOpkcML6EeaSH8bbL43htA" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_QrF_AML6EeaSH8bbL43htA" base_Package="_QrBtkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrOh4ML6EeaSH8bbL43htA" base_Interface="_QrKQcML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrWdsML6EeaSH8bbL43htA" base_Interface="_QrSzUML6EeaSH8bbL43htA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrckUML6EeaSH8bbL43htA" base_Interface="_QrZhAML6EeaSH8bbL43htA" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_QrgOsML6EeaSH8bbL43htA" base_Collaboration="_Qq5xwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_a5_b8ML6EeaSH8bbL43htA" base_Port="_a5ynoML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ej0CUML6EeaSH8bbL43htA" base_Port="_ejuiwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_gvt5MML6EeaSH8bbL43htA" base_Port="_gvpnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ieknsML6EeaSH8bbL43htA" base_Port="_ieg9UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_l2SKYML6EeaSH8bbL43htA" base_Port="_l2PuIML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_o94NcML6EeaSH8bbL43htA" base_Property="_o9z8AML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_sW7z8ML6EeaSH8bbL43htA" base_Property="_sW4woML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_uWJ5sML6EeaSH8bbL43htA" base_Property="_uWG2YML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_wXCMUML6EeaSH8bbL43htA" base_Property="_wW-h8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_zZAIgML6EeaSH8bbL43htA" base_Property="_zY9sQML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_9hs20cL6EeaSH8bbL43htA" base_Connector="_9hn-UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-P8c4sL6EeaSH8bbL43htA" base_Connector="_-P5ZkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-9SrEcL6EeaSH8bbL43htA" base_Connector="_-9PnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ihRg8ML7EeaSH8bbL43htA" isWired="false" base_Port="_ihPrwML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sgbRsML7EeaSH8bbL43htA" base_Pseudostate="_sgYOYML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_sggKMML7EeaSH8bbL43htA" base_State="_sgeVAML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sglCsML7EeaSH8bbL43htA" base_Region="_sgSu0ML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_shjTEML7EeaSH8bbL43htA" base_StateMachine="_sgJk4ML7EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_TGQH8ML8EeaSH8bbL43htA" isWired="false" base_Port="_TGKoYML8EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_QkHBsMMEEeaSH8bbL43htA" isWired="false" base_Port="_QkCwQMMEEeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_P-0CoMMMEeaSH8bbL43htA" isWired="false" base_Port="_P-w_UMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SANSoMMMEeaSH8bbL43htA" base_Pseudostate="_SAMEgMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_SAPH0MMMEeaSH8bbL43htA" base_State="_SAN5sMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_SAPu4MMMEeaSH8bbL43htA" base_Region="_SAKPUMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_SBGqkMMMEeaSH8bbL43htA" base_StateMachine="_SAHMAMMMEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_0KCXUsMPEeaSH8bbL43htA" base_Connector="_0KAiIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_02B6osMPEeaSH8bbL43htA" base_Connector="_02AFcMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_13cUUcMPEeaSH8bbL43htA" base_Connector="_13afIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_2pYHkMMPEeaSH8bbL43htA" base_Connector="_2pVrUMMPEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_bKtWgMMQEeaSH8bbL43htA" base_Property="_bKsIYMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_ex6GsMMQEeaSH8bbL43htA" base_Property="_ex4RgMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_gzrKIMMQEeaSH8bbL43htA" base_Property="_gzot4MMQEeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_j0w1YMM4EeahHehXumVB-w" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_p187wMM4EeahHehXumVB-w" base_Port="_p1u5UMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_sK-SYMM4EeahHehXumVB-w" base_Port="_sK7PEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_v-PIoMM4EeahHehXumVB-w" base_Port="_v-KQIMM4EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_wvSyIMM4EeahHehXumVB-w" base_Package="_wvPHwMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvY4wMM4EeahHehXumVB-w" base_Interface="_wvV1cMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wve_YMM4EeahHehXumVB-w" base_Interface="_wvcjIMM4EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvke8MM4EeahHehXumVB-w" base_Interface="_wviCsMM4EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_wvniQMM4EeahHehXumVB-w" base_Collaboration="_wvKPQMM4EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_AJ77MMM5EeahHehXumVB-w" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_CHYfUMM5EeahHehXumVB-w" base_Port="_CHUN4MM5EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_O_8GIMM5EeahHehXumVB-w" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_RDhugMM5EeahHehXumVB-w" base_Package="_RDfSQMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDkKwMM5EeahHehXumVB-w" base_Interface="_RDiVkMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDnOEMM5EeahHehXumVB-w" base_Interface="_RDlY4MM5EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDrfgMM5EeahHehXumVB-w" base_Interface="_RDpDQMM5EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_RDt7wMM5EeahHehXumVB-w" base_Collaboration="_RDbn4MM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_gMcOYMM5EeahHehXumVB-w" base_Port="_gMZLEMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_m5f8QMM5EeahHehXumVB-w" base_Port="_m5dgAMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_0csbgMM5EeahHehXumVB-w" base_Port="_0cp_QMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_3ton0MM5EeahHehXumVB-w" base_Port="_3tk9cMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_8dOjcMM5EeahHehXumVB-w" base_Property="_8dMHMMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_ANxc4MM6EeahHehXumVB-w" base_Property="_ANvnsMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_DptYQMM6EeahHehXumVB-w" base_Property="_Dpq8AMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_GmrfssM6EeahHehXumVB-w" base_Connector="_GmpDcMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_JFkkAsM6EeahHehXumVB-w" base_Connector="_JFiHwMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_KEoNQMM6EeahHehXumVB-w" base_Property="_KElJ8MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Ni31wsM6EeahHehXumVB-w" base_Connector="_Ni2AkMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Q2uzMMM6EeahHehXumVB-w" base_Connector="_Q2rv4MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_TMfwscM6EeahHehXumVB-w" base_Connector="_TMcGUMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_T-WEYcM6EeahHehXumVB-w" base_Connector="_T-SaAMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_VxL7AMM6EeahHehXumVB-w" base_Port="_VxKF0MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_fBwHcsM6EeahHehXumVB-w" base_Connector="_fBuSQMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_mXF9UMM6EeahHehXumVB-w" base_StateMachine="_mXBE0MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_mXGkYMM6EeahHehXumVB-w" base_Region="_mXBE0cM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mXHLcMM6EeahHehXumVB-w" base_Pseudostate="_mXBE18M6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_mXHygMM6EeahHehXumVB-w" base_State="_mXBE2MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_IdGZUMM7EeahHehXumVB-w" base_StateMachine="_IdCu8MM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_IdHAYMM7EeahHehXumVB-w" base_Region="_IdCu8cM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_IdHncMM7EeahHehXumVB-w" base_Pseudostate="_IdDWBcM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_IdHnccM7EeahHehXumVB-w" base_State="_IdDWBsM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yUREgMM7EeahHehXumVB-w" base_Pseudostate="_yUOoQMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_yUTgwMM7EeahHehXumVB-w" base_State="_yUSSoMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_yUUu4MM7EeahHehXumVB-w" base_Region="_yUMMAMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_yVXQsMM7EeahHehXumVB-w" base_StateMachine="_yUE3QMM7EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_uL4n8MM9EeahHehXumVB-w" isWired="false" base_Port="_uL2LsMM9EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_qxaXcMX2EeaYV5cb1Zesag" isWired="false" base_Port="_qxGOYMX2EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_x2xQkMX2EeaYV5cb1Zesag" isWired="false" base_Port="_x2tmMMX2EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_k2x6IMX4EeaYV5cb1Zesag" base_State="_k2uPwMX4EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_Wbb1cMX5EeaYV5cb1Zesag" isWired="false" base_Port="_WbYyIMX5EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aL1IcMX6EeaYV5cb1Zesag" base_Pseudostate="_aLwP8MX6EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_GOUpoMYlEeaYV5cb1Zesag" base_State="_GOTbgMYlEeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_RQTwYMYlEeaYV5cb1Zesag" base_Pseudostate="_RQRUIMYlEeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_4c99IMYlEeaYV5cb1Zesag" isWired="false" base_Port="_4c8vAMYlEeaYV5cb1Zesag"/>
  <RTCppProperties:PassiveClassProperties xmi:id="_TuYcgN5nEeakB9CQglrL_g" headerPreface="" base_Class="_aEoEwML7EeaSH8bbL43htA" privateDeclarations="" publicDeclarations=""/>
  <UMLRealTime:Capsule xmi:id="_eOq6EEr2EemS5Jmyw4QPnw" base_Class="_eOLx4Er2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_eO_DIEr2EemS5Jmyw4QPnw" base_StateMachine="_eOsIMEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:ProtocolContainer xmi:id="_ePFJwEr2EemS5Jmyw4QPnw" base_Package="_ePA4UEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:Protocol xmi:id="_ePL3cEr2EemS5Jmyw4QPnw" base_Collaboration="_ePFw0Er2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTMessageSet xmi:id="_ePfZcEr2EemS5Jmyw4QPnw" base_Interface="_ePMegEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTMessageSet xmi:id="_ePn8UEr2EemS5Jmyw4QPnw" base_Interface="_ePO6wEr2EemS5Jmyw4QPnw" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_ePq_oEr2EemS5Jmyw4QPnw" base_Interface="_ePQI4Er2EemS5Jmyw4QPnw" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_eQI5sEr2EemS5Jmyw4QPnw" base_Port="_eP5pIEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_eSsecEr2EemS5Jmyw4QPnw" isWired="false" base_Port="_eSkioEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_eS3dkEr2EemS5Jmyw4QPnw" isPublish="true" isWired="false" base_Port="_eSzMIEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_eY0UkEr2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_AJLGMMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_eZTcwEr2EemS5Jmyw4QPnw" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_eeNK4Er2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_edHlwEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_ee2rIEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_eeuIQEr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ehiLsEr2EemS5Jmyw4QPnw" base_Pseudostate="_eha28Er2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_ejYl0Er2EemS5Jmyw4QPnw" isWired="false" base_Port="_ejR4IEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_ejc3QEr2EemS5Jmyw4QPnw" isPublish="true" isWired="false" base_Port="_ejbCEEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ekKo8Er2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_O_UbEMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ekO6YEr2EemS5Jmyw4QPnw" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_emFUgEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_emEGYEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_emZdkEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_emTW8Er2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eoiyoEr2EemS5Jmyw4QPnw" base_Pseudostate="_eoehMEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_erKo0Er2EemS5Jmyw4QPnw" isWired="false" base_Port="_erJasEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_erOTMEr2EemS5Jmyw4QPnw" isPublish="true" isWired="false" base_Port="_erLP4Er2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_erex4Er2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_GuPUUML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_erhOIEr2EemS5Jmyw4QPnw" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_esA9YEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_er-hIEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_esI5MEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_esISIEr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eskXAEr2EemS5Jmyw4QPnw" base_Pseudostate="_esgFkEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_etI-wEr2EemS5Jmyw4QPnw" isWired="false" base_Port="_etHwoEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_etOeUEr2EemS5Jmyw4QPnw" isPublish="true" isWired="false" base_Port="_etKz8Er2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_etT94Er2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_LOPUwML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_etZdcEr2EemS5Jmyw4QPnw" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_etuNkEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_ettmgEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_et2wcEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_etx38Er2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_euMusEr2EemS5Jmyw4QPnw" base_Pseudostate="_euLgkEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_eur24Er2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_eOLx4Er2EemS5Jmyw4QPnw" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_euzysEr2EemS5Jmyw4QPnw" base_Class="_eOLx4Er2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_evehEEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_evcr4Er2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_evnD8Er2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_evl10Er2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTRegion xmi:id="_ewAskEr2EemS5Jmyw4QPnw" base_Region="_ev-QUEr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ewFlEEr2EemS5Jmyw4QPnw" base_Pseudostate="_ewAskUr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTState xmi:id="_ewGzMEr2EemS5Jmyw4QPnw" base_State="_ewGMIEr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ewJ2gEr2EemS5Jmyw4QPnw" base_Pseudostate="_ewHaQEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_ewvFUEr2EemS5Jmyw4QPnw" isWired="false" base_Port="_ewt3MEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:RTPort xmi:id="_eww6gEr2EemS5Jmyw4QPnw" isPublish="true" isWired="false" base_Port="_ewvsYEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:CapsuleProperties xmi:id="_exEcgEr2EemS5Jmyw4QPnw" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_jvOOEMM4EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_exLKMEr2EemS5Jmyw4QPnw" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_ex2foEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_ex1RgEr2EemS5Jmyw4QPnw"/>
  <RTCppProperties:ParameterProperties xmi:id="_eyA3sEr2EemS5Jmyw4QPnw" type="pmd::Message" base_Parameter="_ex_pkEr2EemS5Jmyw4QPnw"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_eyy60Er2EemS5Jmyw4QPnw" base_Pseudostate="_eyyTwEr2EemS5Jmyw4QPnw"/>
  <UMLRealTime:CapsulePart xmi:id="_e0DfEEr2EemS5Jmyw4QPnw" base_Property="_ez4f8Er2EemS5Jmyw4QPnw"/>
</xmi:XMI>

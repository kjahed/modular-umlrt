<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_nx1tkML5EeaSH8bbL43htA" name="RootElement">
    <eAnnotations xmi:id="_IbhgEML7EeaSH8bbL43htA" source="UMLRT_Default_top">
      <details xmi:id="_IbjVQML7EeaSH8bbL43htA" key="top_name" value="Parcer_Router"/>
    </eAnnotations>
    <eAnnotations xmi:id="_xj27YEsdEemq86Vz4eTg6w" source="dummy"/>
    <eAnnotations xmi:id="_5VNnsEv1EemdA8zSE5eE5Q" source="dummy"/>
    <eAnnotations xmi:id="_gO78cEwZEem3BKG29lRNPA" source="dummy"/>
    <eAnnotations xmi:id="_n7iD0ExdEemNVcH8fFxYTw" source="dummy"/>
    <eAnnotations xmi:id="_bs5ckEyFEemz-u-BIEXXmw" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_9X86YML5EeaSH8bbL43htA" name="Parcer_Router" isActive="true">
      <ownedAttribute xmi:id="_o9z8AML6EeaSH8bbL43htA" name="gen" visibility="protected" type="_GuPUUML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sW4woML6EeaSH8bbL43htA" name="top" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_uWG2YML6EeaSH8bbL43htA" name="right" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_wW-h8ML6EeaSH8bbL43htA" name="left" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_zY9sQML6EeaSH8bbL43htA" name="bin1" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YaaZIMMQEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YaWHsMMQEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bKsIYMMQEeaSH8bbL43htA" name="bin2" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ex4RgMMQEeaSH8bbL43htA" name="bin3" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_gzot4MMQEeaSH8bbL43htA" name="bin0" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sZxt4Er2EemMAIjsl7W43A" name="dbgAgent" type="_sBwPcEr2EemMAIjsl7W43A">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sZyU8Ur2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sZyU8kr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_9hn-UML6EeaSH8bbL43htA" name="RTConnector1">
        <end xmi:id="_9hsPwML6EeaSH8bbL43htA" partWithPort="_o9z8AML6EeaSH8bbL43htA" role="_a5ynoML6EeaSH8bbL43htA"/>
        <end xmi:id="_9hs20ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-P5ZkML6EeaSH8bbL43htA" name="RTConnector2">
        <end xmi:id="_-P8c4ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_-P8c4cL6EeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-9PnwML6EeaSH8bbL43htA" name="RTConnector3">
        <end xmi:id="_-9SEAML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_-9SrEML6EeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_0KAiIMMPEeaSH8bbL43htA" name="RTConnector4">
        <end xmi:id="_0KCXUMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_0KCXUcMPEeaSH8bbL43htA" partWithPort="_ex4RgMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_02AFcMMPEeaSH8bbL43htA" name="RTConnector5">
        <end xmi:id="_02B6oMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_02B6ocMPEeaSH8bbL43htA" partWithPort="_bKsIYMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_13afIMMPEeaSH8bbL43htA" name="RTConnector6">
        <end xmi:id="_13btQMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_13cUUMMPEeaSH8bbL43htA" partWithPort="_zY9sQML6EeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_2pVrUMMPEeaSH8bbL43htA" name="RTConnector7">
        <end xmi:id="_2pXggMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_2pXggcMPEeaSH8bbL43htA" partWithPort="_gzot4MMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GuPUUML6EeaSH8bbL43htA" name="Gen" classifierBehavior="_sgJk4ML7EeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_a5ynoML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ihPrwML7EeaSH8bbL43htA" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_TGKoYML8EeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_37GIwML8EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_48hwkML8EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_48kM0ML8EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN4IcMYtEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9chtwMYtEeaYV5cb1Zesag" value="8"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BH5zUMYuEeaYV5cb1Zesag" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sQFmYEr2EemMAIjsl7W43A" name="dbgPortForGen" visibility="protected" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sQFmYUr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sQGNcEr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sgJk4ML7EeaSH8bbL43htA" name="GenStateMachine" isReentrant="false">
        <region xmi:id="_sgSu0ML7EeaSH8bbL43htA" name="Region">
          <transition xmi:id="_sR91sEr2EemMAIjsl7W43A" name="Trans__Init__State__1920" source="_sR6LUEr2EemMAIjsl7W43A" target="_sR0rwEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sSc94Er2EemMAIjsl7W43A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__19&quot;,&quot;New__State__18&quot;,&quot;To__New__State__18__25&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__19&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sSAR8Er2EemMAIjsl7W43A" name="From__New__State__18__21" source="_sR154Ur2EemMAIjsl7W43A" target="_sR0rwEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sSXeUEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__18&quot;,&quot;New__State__18&quot;,&quot;To__New__State__18__25&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__18&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sSDVQEr2EemMAIjsl7W43A" name="PME_Trig22" event="_OTwdgMOlEeaV4cHHWddkKg" port="_a5ynoML6EeaSH8bbL43htA"/>
            <trigger xmi:id="_sSKC8Er2EemMAIjsl7W43A" name="PME_Trig23" event="_sDhKAEr2EemMAIjsl7W43A" port="_sQFmYEr2EemMAIjsl7W43A"/>
            <trigger xmi:id="_sSNtUEr2EemMAIjsl7W43A" name="PME_Trig24" port="_ihPrwML7EeaSH8bbL43htA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sSUbAEr2EemMAIjsl7W43A" name="To__New__State__18__25" guard="_sSc94kr2EemMAIjsl7W43A" source="_sR0rwEr2EemMAIjsl7W43A" target="_sR154Ur2EemMAIjsl7W43A">
            <ownedRule xmi:id="_sSc94kr2EemMAIjsl7W43A" name="PME_checkDecesion26">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sSc94Ur2EemMAIjsl7W43A" name="PME_checkDecesion26">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__18__25&quot;,&quot;New__State__18&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sR0rwEr2EemMAIjsl7W43A" name="DecesionPoint__17" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sR154Ur2EemMAIjsl7W43A" name="New__State__18"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sR6LUEr2EemMAIjsl7W43A" name="Init__State__19"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sQlVoUr2EemMAIjsl7W43A" name="loadHeap" specification="_sQlVoEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.delay&quot;,this->delay);
heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sQpnEEr2EemMAIjsl7W43A" name="unLoadHeap" specification="_sQpAAEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sRCBkUr2EemMAIjsl7W43A" name="sendMessage" specification="_sRCBkEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    enter.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sRMZoUr2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sRMZoEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sRqTsUr2EemMAIjsl7W43A" name="initForPMD" specification="_sRqTsEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Gen::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Gen::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sQlVoEr2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sQlVoUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sQpAAEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sQpnEEr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sRCBkEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sRCBkUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sRDPsEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sREd0Er2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sRMZoEr2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sRMZoUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sRNnwEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sRR5MEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sRqTsEr2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sRqTsUr2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IuNA8ML6EeaSH8bbL43htA" name="Stage" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejuiwML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gvpnwML6EeaSH8bbL43htA" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ieg9UML6EeaSH8bbL43htA" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Ko_yUML9EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ko_yUcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ko_yUsL9EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_QkCwQMMEEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_8dMHMMM5EeahHehXumVB-w" name="chute1" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ANvnsMM6EeahHehXumVB-w" name="chute2" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Dpq8AMM6EeahHehXumVB-w" name="sensor" visibility="protected" type="_AJLGMMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_KElJ8MM6EeahHehXumVB-w" name="switcher" visibility="protected" type="_O_UbEMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:id="_GmpDcMM6EeahHehXumVB-w" name="RTConnector1">
        <end xmi:id="_GmrfsMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_v-KQIMM4EeahHehXumVB-w"/>
        <end xmi:id="_GmrfscM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_CHUN4MM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_JFiHwMM6EeahHehXumVB-w" name="RTConnector2">
        <end xmi:id="_JFkkAMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_JFkkAcM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Ni2AkMM6EeahHehXumVB-w" name="RTConnector3">
        <end xmi:id="_Ni31wMM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_m5dgAMM5EeahHehXumVB-w"/>
        <end xmi:id="_Ni31wcM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_gMZLEMM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Q2rv4MM6EeahHehXumVB-w" name="RTConnector4">
        <end xmi:id="_Q2uMIMM6EeahHehXumVB-w" role="_ejuiwML6EeaSH8bbL43htA"/>
        <end xmi:id="_Q2uMIcM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_TMcGUMM6EeahHehXumVB-w" name="RTConnector5">
        <end xmi:id="_TMfJoMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_0cp_QMM5EeahHehXumVB-w"/>
        <end xmi:id="_TMfwsMM6EeahHehXumVB-w" role="_gvpnwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_T-SaAMM6EeahHehXumVB-w" name="RTConnector6">
        <end xmi:id="_T-VdUMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_3tk9cMM5EeahHehXumVB-w"/>
        <end xmi:id="_T-WEYMM6EeahHehXumVB-w" role="_ieg9UML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_fBuSQMM6EeahHehXumVB-w" name="RTConnector7">
        <end xmi:id="_fBwHcMM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_fBwHccM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_VxKF0MM6EeahHehXumVB-w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LOPUwML6EeaSH8bbL43htA" name="Bin" classifierBehavior="_SAHMAMMMEeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_l2PuIML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K51lgMMPEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K5yiMMMPEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LhdrYML9EeaSH8bbL43htA" name="parcels" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LhdrYcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LhdrYsL9EeaSH8bbL43htA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_P-w_UMMMEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sKLysEr2EemMAIjsl7W43A" name="dbgPortForBin" visibility="protected" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sKMZwEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sKNA0Er2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_SAHMAMMMEeaSH8bbL43htA" name="BinStateMachine" isReentrant="false">
        <region xmi:id="_SAKPUMMMEeaSH8bbL43htA" name="Region">
          <transition xmi:id="_YPSEAMMMEeaSH8bbL43htA" name="IDLE__IDLE__9" source="_SAN5sMMMEeaSH8bbL43htA" target="_SAN5sMMMEeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mJFFYMMMEeaSH8bbL43htA">
              <language>C++</language>
              <body>    log.show(&quot;%s received Parcel (%d)\n&quot;, getName(), p.number);
    enter.setFree(true).send();
</body>
            </effect>
            <trigger xmi:id="_bX4MoMMMEeaSH8bbL43htA" event="_SR6HoMMBEeaSH8bbL43htA" port="_l2PuIML6EeaSH8bbL43htA"/>
          </transition>
          <transition xmi:id="_sO3eYEr2EemMAIjsl7W43A" name="Trans__Init__State__1112" source="_sOz0AEr2EemMAIjsl7W43A" target="_sOuUcEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sP4yEEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__11&quot;,&quot;IDLE&quot;,&quot;To__IDLE__15&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__11&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sPHWAEr2EemMAIjsl7W43A" name="From__IDLE__13" source="_SAN5sMMMEeaSH8bbL43htA" target="_sOuUcEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sPwPMEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__15&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sPSVIEr2EemMAIjsl7W43A" name="PME_Trig14" event="_sDhKAEr2EemMAIjsl7W43A" port="_sKLysEr2EemMAIjsl7W43A"/>
          </transition>
          <transition xmi:id="_sPlQEEr2EemMAIjsl7W43A" name="To__IDLE__15" guard="_sP71YUr2EemMAIjsl7W43A" source="_sOuUcEr2EemMAIjsl7W43A" target="_SAN5sMMMEeaSH8bbL43htA">
            <ownedRule xmi:id="_sP71YUr2EemMAIjsl7W43A" name="PME_checkDecesion16">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sP71YEr2EemMAIjsl7W43A" name="PME_checkDecesion16">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__15&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_SAN5sMMMEeaSH8bbL43htA" name="IDLE"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sOuUcEr2EemMAIjsl7W43A" name="DecesionPoint__10" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sOz0AEr2EemMAIjsl7W43A" name="Init__State__11"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sNuO4Ur2EemMAIjsl7W43A" name="loadHeap" specification="_sNuO4Er2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sN1joUr2EemMAIjsl7W43A" name="unLoadHeap" specification="_sN1joEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sOENIEr2EemMAIjsl7W43A" name="sendMessage" specification="_sODmEEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sOMI8Er2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sOLh4Er2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sOoN0Ur2EemMAIjsl7W43A" name="initForPMD" specification="_sOoN0Er2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Bin::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Bin::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sNuO4Er2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sNuO4Ur2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sN1joEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sN1joUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sODmEEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sOENIEr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sOGpYEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sOJssEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sOLh4Er2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sOMI8Er2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sOPMQEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sOUEwEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sOoN0Er2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sOoN0Ur2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QrBtkML6EeaSH8bbL43htA" name="transmission">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_Qq5xwML6EeaSH8bbL43htA" name="transmission">
        <interfaceRealization xmi:id="_QrQXEML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrKQcML6EeaSH8bbL43htA" contract="_QrKQcML6EeaSH8bbL43htA"/>
        <interfaceRealization xmi:id="_QreZgML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA" contract="_QrZhAML6EeaSH8bbL43htA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrKQcML6EeaSH8bbL43htA" name="transmission">
        <ownedOperation xmi:id="_NmRscMOlEeaV4cHHWddkKg" name="setFree">
          <ownedParameter xmi:id="_2eSnwMOlEeaV4cHHWddkKg" name="free">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrSzUML6EeaSH8bbL43htA" name="transmission~">
        <ownedOperation xmi:id="_PIeRgMMBEeaSH8bbL43htA" name="transmit">
          <ownedParameter xmi:id="_QFxAMMMBEeaSH8bbL43htA" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrXr0ML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrSzUML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_QrY58ML6EeaSH8bbL43htA" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrZhAML6EeaSH8bbL43htA" name="transmissionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrfnoML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_SR6HoMMBEeaSH8bbL43htA" operation="_PIeRgMMBEeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_OTwdgMOlEeaV4cHHWddkKg" operation="_NmRscMOlEeaV4cHHWddkKg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aEoEwML7EeaSH8bbL43htA" name="Parcel">
      <ownedAttribute xmi:id="_cj_qMML7EeaSH8bbL43htA" name="number" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2upQ0MMJEeaSH8bbL43htA" name="level">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_wiSxYMMLEeaSH8bbL43htA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BxJI8N5pEeakB9CQglrL_g" name="stage" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jvOOEMM4EeahHehXumVB-w" name="Chute" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_p1u5UMM4EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sK7PEMM4EeahHehXumVB-w" name="exit" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_v-KQIMM4EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:id="_4iC8wMM4EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8_D6oMM4EeahHehXumVB-w" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8_HlAMM4EeahHehXumVB-w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_gQNcAMOlEeaV4cHHWddkKg" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_qxGOYMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WbYyIMX5EeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oc-oIMYhEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1Wbm0MYhEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sUqkYEr2EemMAIjsl7W43A" name="dbgPortForChute" visibility="protected" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sUrLcEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sUrLcUr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mXBE0MM6EeahHehXumVB-w" name="ChuteStateMachine" isReentrant="false">
        <region xmi:id="_mXBE0cM6EeahHehXumVB-w" name="Region">
          <transition xmi:id="_mXBE1MM6EeahHehXumVB-w" name="reception" source="_mXBE2MM6EeahHehXumVB-w" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mXBE1cM6EeahHehXumVB-w">
              <language>C++</language>
              <body>this->parcel = Parcel();
this->parcel.number = p.number;
this->parcel.level =p.level;
this->parcel.stage = p.stage;

log.show(&quot;Chute %s of stage %d becomes occupied\n&quot;, this->getName(), p.stage);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
            <trigger xmi:id="_mXBE1sM6EeahHehXumVB-w" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_nnQiEMOlEeaV4cHHWddkKg" name="IDLE__IDLE__37" source="_mXBE2MM6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_AMB4YMOmEeaV4cHHWddkKg">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_8Oj9QMOlEeaV4cHHWddkKg" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_DR_fYMX5EeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__36" source="_k2uPwMX4EeaYV5cb1Zesag" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LH2oYMX5EeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->successorFree =free;</body>
            </effect>
            <trigger xmi:id="_I-QeoMX5EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_sWlP8Er2EemMAIjsl7W43A" name="Trans__Init__State__3940" source="_sWd7MEr2EemMAIjsl7W43A" target="_sWcGAEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sXU20Er2EemMAIjsl7W43A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__39&quot;,&quot;IDLE&quot;,&quot;To__IDLE__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;Init__State__39&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__48&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__39&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sWoTQEr2EemMAIjsl7W43A" name="From__OCCUPIED__41" source="_k2uPwMX4EeaYV5cb1Zesag" target="_sWcGAEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sXZIQEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;IDLE&quot;,&quot;To__IDLE__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__48&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;OCCUPIED&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sWvoAEr2EemMAIjsl7W43A" name="PME_Trig42" event="_sDhKAEr2EemMAIjsl7W43A" port="_sUqkYEr2EemMAIjsl7W43A"/>
            <trigger xmi:id="_sWxdMEr2EemMAIjsl7W43A" name="PME_Trig43" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
            <trigger xmi:id="_sWzSYEr2EemMAIjsl7W43A" name="PME_Trig44" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sW6nIEr2EemMAIjsl7W43A" name="From__IDLE__45" source="_mXBE2MM6EeahHehXumVB-w" target="_sWcGAEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sXbkgEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__49&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__48&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sXDxEEr2EemMAIjsl7W43A" name="PME_Trig46" event="_sDhKAEr2EemMAIjsl7W43A" port="_sUqkYEr2EemMAIjsl7W43A"/>
            <trigger xmi:id="_sXFmQEr2EemMAIjsl7W43A" name="PME_Trig47" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sXNiEEr2EemMAIjsl7W43A" name="To__OCCUPIED__48" guard="_sXiSMUr2EemMAIjsl7W43A" source="_sWcGAEr2EemMAIjsl7W43A" target="_k2uPwMX4EeaYV5cb1Zesag">
            <ownedRule xmi:id="_sXiSMUr2EemMAIjsl7W43A" name="PME_checkDecesion51">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sXiSMEr2EemMAIjsl7W43A" name="PME_checkDecesion51">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__OCCUPIED__48&quot;,&quot;OCCUPIED&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_sXOwMEr2EemMAIjsl7W43A" name="To__IDLE__49" guard="_sXgdAUr2EemMAIjsl7W43A" source="_sWcGAEr2EemMAIjsl7W43A" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_sXgdAUr2EemMAIjsl7W43A" name="PME_checkDecesion50">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sXgdAEr2EemMAIjsl7W43A" name="PME_checkDecesion50">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__49&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_mXBE2MM6EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_t4ekIMX4EeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_k2uPwMX4EeaYV5cb1Zesag" name="OCCUPIED"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sWcGAEr2EemMAIjsl7W43A" name="DecesionPoint__38" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sWd7MEr2EemMAIjsl7W43A" name="Init__State__39"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVBJsUr2EemMAIjsl7W43A" name="loadHeap" specification="_sVBJsEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVJskEr2EemMAIjsl7W43A" name="unLoadHeap" specification="_sVJFgEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sViuIUr2EemMAIjsl7W43A" name="sendMessage" specification="_sViuIEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;exit&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    exit.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;detect&quot;) {
   if(message.payload.size()==1){
    detection.detect( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sVqp8Ur2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sVqp8Er2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sWRG4Ur2EemMAIjsl7W43A" name="initForPMD" specification="_sWRG4Er2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Chute::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Chute::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addOutPutMessages(&quot;exit&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;exit&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForChute&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sVBJsEr2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sVBJsUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sVJFgEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sVJskEr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sViuIEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sViuIUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sVoNsEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sVpb0Er2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sVqp8Er2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sVqp8Ur2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sVuUUEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sVx-sEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sWRG4Er2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sWRG4Ur2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wvPHwMM4EeahHehXumVB-w" name="detection">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_wvKPQMM4EeahHehXumVB-w" name="detection">
        <interfaceRealization xmi:id="_wvat8MM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvV1cMM4EeahHehXumVB-w" contract="_wvV1cMM4EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_wvltEMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w" contract="_wviCsMM4EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvV1cMM4EeahHehXumVB-w" name="detection"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvcjIMM4EeahHehXumVB-w" name="detection~">
        <ownedOperation xmi:id="_F05S4MM5EeahHehXumVB-w" name="detect">
          <ownedParameter xmi:id="_G2MX0MM5EeahHehXumVB-w" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvgNgMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvcjIMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_wvhboMM4EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wviCsMM4EeahHehXumVB-w" name="detectionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvmUIMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Mh59cMM5EeahHehXumVB-w" operation="_F05S4MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AJLGMMM5EeahHehXumVB-w" name="Sensor" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_CHUN4MM5EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_m5dgAMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uL2LsMM9EeahHehXumVB-w" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sSezEEr2EemMAIjsl7W43A" name="dbgPortForSensor" visibility="protected" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sSfaIEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sSgBMEr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_IdCu8MM7EeahHehXumVB-w" name="SensorStateMachine" isReentrant="false">
        <region xmi:id="_IdCu8cM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_sUPtoEr2EemMAIjsl7W43A" name="Trans__Pseudo2730" source="_IdDWBcM7EeahHehXumVB-w" target="_sUHx0Er2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sUhacEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo27&quot;,&quot;New__State__29&quot;,&quot;To__New__State__29__34&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo27&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sUV0QEr2EemMAIjsl7W43A" name="From__New__State__29__31" source="_sUNRYEr2EemMAIjsl7W43A" target="_sUHx0Er2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sUiokEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__29&quot;,&quot;New__State__29&quot;,&quot;To__New__State__29__34&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__29&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sUXCYEr2EemMAIjsl7W43A" name="PME_Trig32" event="_sDhKAEr2EemMAIjsl7W43A" port="_sSezEEr2EemMAIjsl7W43A"/>
            <trigger xmi:id="_sUYQgEr2EemMAIjsl7W43A" name="PME_Trig33" event="_Mh59cMM5EeahHehXumVB-w" port="_CHUN4MM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_sUch8Er2EemMAIjsl7W43A" name="To__New__State__29__34" guard="_sUj2sUr2EemMAIjsl7W43A" source="_sUHx0Er2EemMAIjsl7W43A" target="_sUNRYEr2EemMAIjsl7W43A">
            <ownedRule xmi:id="_sUj2sUr2EemMAIjsl7W43A" name="PME_checkDecesion35">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sUj2sEr2EemMAIjsl7W43A" name="PME_checkDecesion35">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__29__34&quot;,&quot;New__State__29&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_IdDWBcM7EeahHehXumVB-w" name="Pseudo27"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sUHx0Er2EemMAIjsl7W43A" name="DecesionPoint__28" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sUNRYEr2EemMAIjsl7W43A" name="New__State__29"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sS8GEEr2EemMAIjsl7W43A" name="loadHeap" specification="_sS7fAEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sS9UMUr2EemMAIjsl7W43A" name="unLoadHeap" specification="_sS9UMEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sTSrYUr2EemMAIjsl7W43A" name="sendMessage" specification="_sTSrYEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;switchProtocol&quot;) {
  if(message.signal==&quot;setSwitch&quot;) {
   if(message.payload.size()==1){
    switchProtocol.setSwitch( boost::any_cast&lt;int>(message.payload[&quot;c&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sTbOQUr2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sTbOQEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sT8ysEr2EemMAIjsl7W43A" name="initForPMD" specification="_sT8LoEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Sensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Sensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForSensor&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sS7fAEr2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sS8GEEr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sS9UMEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sS9UMUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sTSrYEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sTSrYUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sTYyAEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sTZZEEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sTbOQEr2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sTbOQUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sTeRkEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sTgGwEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sT8LoEr2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sT8ysEr2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O_UbEMM5EeahHehXumVB-w" name="Switcher" classifierBehavior="_yUE3QMM7EeahHehXumVB-w" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gMZLEMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0cp_QMM5EeahHehXumVB-w" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_3tk9cMM5EeahHehXumVB-w" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_VxKF0MM6EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:id="_tx4ecMM7EeahHehXumVB-w" name="choice">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Yk87wMM9EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA"/>
      <ownedAttribute xmi:id="_GGZlEMOmEeaV4cHHWddkKg" name="leftSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J43KEMOmEeaV4cHHWddkKg" name="rightSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_x2tmMMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_b1lNUMYiEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_eEeGwMYiEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_4c8vAMYlEeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sXnKsEr2EemMAIjsl7W43A" name="dbgPortForSwitcher" visibility="protected" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sXo_4Er2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sXpm8Er2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_yUE3QMM7EeahHehXumVB-w" name="SwitcherStateMachine" isReentrant="false">
        <region xmi:id="_yUMMAMM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_yUTgwcM7EeahHehXumVB-w" name="Initial" source="_yUOoQMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sZxG0Er2EemMAIjsl7W43A" name="Initial__63">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_2LEW8MM7EeahHehXumVB-w" name="IDLE__IDLE__53" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_Ci9gsMM8EeahHehXumVB-w">
              <language>C++</language>
              <body>this->choice = c;</body>
            </effect>
            <trigger xmi:id="_82qsQMM7EeahHehXumVB-w" event="_cjDs4MM5EeahHehXumVB-w" port="_gMZLEMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_ueXm0MX1EeaYV5cb1Zesag" name="IDLE__IDLE__54" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_96BcgMX1EeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;left successor of switcher becomes free\n&quot;);
this->leftSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_4FUS8MX1EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_3tk9cMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_A2lUQMX2EeaYV5cb1Zesag" name="IDLE__IDLE__55" source="_yUSSoMM7EeahHehXumVB-w" target="_yUSSoMM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_GFMuMMX2EeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;right successor of switcher becomes free\n&quot;);
this->rightSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_IyVp4MX2EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_0cp_QMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_sZUa4Er2EemMAIjsl7W43A" name="From__IDLE__57" source="_yUSSoMM7EeahHehXumVB-w" target="_sZKp4Er2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sZuqkEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__61&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sZcWsEr2EemMAIjsl7W43A" name="PME_Trig58" event="_sDhKAEr2EemMAIjsl7W43A" port="_sXnKsEr2EemMAIjsl7W43A"/>
            <trigger xmi:id="_sZey8Er2EemMAIjsl7W43A" name="PME_Trig59" event="_SR6HoMMBEeaSH8bbL43htA" port="_VxKF0MM6EeahHehXumVB-w"/>
            <trigger xmi:id="_sZmuwEr2EemMAIjsl7W43A" name="PME_Trig60" port="_4c8vAMYlEeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sZoj8Er2EemMAIjsl7W43A" name="To__IDLE__61" guard="_sZwfwUr2EemMAIjsl7W43A" source="_sZKp4Er2EemMAIjsl7W43A" target="_yUSSoMM7EeahHehXumVB-w">
            <ownedRule xmi:id="_sZwfwUr2EemMAIjsl7W43A" name="PME_checkDecesion62">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sZwfwEr2EemMAIjsl7W43A" name="PME_checkDecesion62">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__61&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yUOoQMM7EeahHehXumVB-w" name="Pseudo52"/>
          <subvertex xmi:type="uml:State" xmi:id="_yUSSoMM7EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_gwFREMYlEeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sZKp4Er2EemMAIjsl7W43A" name="DecesionPoint__56" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYBaYUr2EemMAIjsl7W43A" name="loadHeap" specification="_sYBaYEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.choice&quot;,this->choice);
heap.setVarValue(&quot;this.leftSuccessorFree&quot;,this->leftSuccessorFree);
heap.setVarValue(&quot;this.rightSuccessorFree&quot;,this->rightSuccessorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYDPkUr2EemMAIjsl7W43A" name="unLoadHeap" specification="_sYDPkEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.choice&quot;,&amp;this->choice);
heap.loadVarFromHeap(&quot;this.leftSuccessorFree&quot;,&amp;this->leftSuccessorFree);
heap.loadVarFromHeap(&quot;this.rightSuccessorFree&quot;,&amp;this->rightSuccessorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYWxkUr2EemMAIjsl7W43A" name="sendMessage" specification="_sYWxkEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;right&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    right.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;left&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    left.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sYfUcUr2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sYfUcEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sY_qwUr2EemMAIjsl7W43A" name="initForPMD" specification="_sY_qwEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Switcher::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Switcher::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;right&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;left&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;right&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;left&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForSwitcher&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sYBaYEr2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sYBaYUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sYDPkEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sYDPkUr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sYWxkEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sYWxkUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sYX_sEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sYX_sUr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sYfUcEr2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sYfUcUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sYf7gEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sYgikEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sY_qwEr2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sY_qwUr2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RDfSQMM5EeahHehXumVB-w" name="switchProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_RDbn4MM5EeahHehXumVB-w" name="switchProtocol">
        <interfaceRealization xmi:id="_RDkx0MM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDiVkMM5EeahHehXumVB-w" contract="_RDiVkMM5EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_RDsGkMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w" contract="_RDpDQMM5EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDiVkMM5EeahHehXumVB-w" name="switchProtocol"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDlY4MM5EeahHehXumVB-w" name="switchProtocol~">
        <ownedOperation xmi:id="_XR2R8MM5EeahHehXumVB-w" name="setSwitch">
          <ownedParameter xmi:id="_YFqUgMM5EeahHehXumVB-w" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDn1IMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDlY4MM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_RDocMMM5EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDpDQMM5EeahHehXumVB-w" name="switchProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDtUsMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_cjDs4MM5EeahHehXumVB-w" operation="_XR2R8MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sBwPcEr2EemMAIjsl7W43A" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sDi_MEr2EemMAIjsl7W43A" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sDlbcEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sDn3sEr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sNY3sEr2EemMAIjsl7W43A" name="dbgPortForBin" visibility="public" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sNZewEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sNZewUr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sQNiMEr2EemMAIjsl7W43A" name="dbgPortForGen" visibility="public" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sQOwUEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sQOwUUr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sSmH0Er2EemMAIjsl7W43A" name="dbgPortForSensor" visibility="public" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sSmu4Er2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sSnV8Er2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sUtAoEr2EemMAIjsl7W43A" name="dbgPortForChute" visibility="public" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sUtnsEr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sUtnsUr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sXtRUEr2EemMAIjsl7W43A" name="dbgPortForSwitcher" visibility="public" type="_sCtRsEr2EemMAIjsl7W43A" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_sXtRUUr2EemMAIjsl7W43A" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_sXtRUkr2EemMAIjsl7W43A" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sCP-sEr2EemMAIjsl7W43A" name="dbgAgent StateMachine">
        <region xmi:id="_sImeUEr2EemMAIjsl7W43A" name="mainRegion">
          <transition xmi:id="_sJE_cEr2EemMAIjsl7W43A" name="Trans__Init__State__34" source="_sI6nYEr2EemMAIjsl7W43A" target="_sIo6kEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJyxIEr2EemMAIjsl7W43A">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_sJP-kEr2EemMAIjsl7W43A" name="From__New__State__2__5" source="_sIw2YEr2EemMAIjsl7W43A" target="_sIo6kEr2EemMAIjsl7W43A">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_sJ5e0Er2EemMAIjsl7W43A">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_sJYhcEr2EemMAIjsl7W43A" name="PME_Trig6" port="_sDi_MEr2EemMAIjsl7W43A">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_sJqOQEr2EemMAIjsl7W43A" name="To__New__State__2__7" guard="_sKAMgEr2EemMAIjsl7W43A" source="_sIo6kEr2EemMAIjsl7W43A" target="_sIw2YEr2EemMAIjsl7W43A">
            <ownedRule xmi:id="_sKAMgEr2EemMAIjsl7W43A" name="PME_checkDecesion8">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_sJ--YEr2EemMAIjsl7W43A" name="PME_checkDecesion8">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__2__7&quot;,&quot;New__State__2&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sIo6kEr2EemMAIjsl7W43A" name="DecesionPoint__1" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_sIw2YEr2EemMAIjsl7W43A" name="New__State__2">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_sZy8AEr2EemMAIjsl7W43A" name="New__State__2">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_sI6nYEr2EemMAIjsl7W43A" name="Init__State__3"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sHGpgEr2EemMAIjsl7W43A" name="loadHeap" specification="_sHFbYEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sHTd0Er2EemMAIjsl7W43A" name="unLoadHeap" specification="_sHRooEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sHgSIUr2EemMAIjsl7W43A" name="sendMessage" specification="_sHgSIEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>int result=-1;
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sH9lIUr2EemMAIjsl7W43A" name="sendInternalMessage" specification="_sH9lIEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_sIctUUr2EemMAIjsl7W43A" name="initForPMD" specification="_sIctUEr2EemMAIjsl7W43A">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
  this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_sHFbYEr2EemMAIjsl7W43A" name="loadHeap" visibility="private" method="_sHGpgEr2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sHRooEr2EemMAIjsl7W43A" name="unLoadHeap" visibility="private" method="_sHTd0Er2EemMAIjsl7W43A"/>
      <ownedOperation xmi:id="_sHgSIEr2EemMAIjsl7W43A" name="sendMessage" visibility="private" method="_sHgSIUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sHpcEEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sHttgEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sH9lIEr2EemMAIjsl7W43A" name="sendInternalMessage" visibility="private" method="_sH9lIUr2EemMAIjsl7W43A">
        <ownedParameter xmi:id="_sIABYEr2EemMAIjsl7W43A" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_sIH9MEr2EemMAIjsl7W43A" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_sIctUEr2EemMAIjsl7W43A" name="initForPMD" visibility="private" method="_sIctUUr2EemMAIjsl7W43A"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_sCkHwEr2EemMAIjsl7W43A" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_sCtRsEr2EemMAIjsl7W43A" name="dbgProtocol">
        <interfaceRealization xmi:id="_sDTHkEr2EemMAIjsl7W43A" client="_sCtRsEr2EemMAIjsl7W43A" supplier="_sCvt8Er2EemMAIjsl7W43A" contract="_sCvt8Er2EemMAIjsl7W43A"/>
        <interfaceRealization xmi:id="_sDYAEEr2EemMAIjsl7W43A" client="_sCtRsEr2EemMAIjsl7W43A" supplier="_sC3pwEr2EemMAIjsl7W43A" contract="_sC3pwEr2EemMAIjsl7W43A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sCvt8Er2EemMAIjsl7W43A" name="dbgProtocol">
        <ownedOperation xmi:id="_sDbDYEr2EemMAIjsl7W43A" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sCyxQEr2EemMAIjsl7W43A" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_sC3pwEr2EemMAIjsl7W43A" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_sC434Er2EemMAIjsl7W43A" client="_sCtRsEr2EemMAIjsl7W43A" supplier="_sCyxQEr2EemMAIjsl7W43A"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_sC77MEr2EemMAIjsl7W43A" client="_sCtRsEr2EemMAIjsl7W43A" supplier="_sC3pwEr2EemMAIjsl7W43A"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_sDhKAEr2EemMAIjsl7W43A" operation="_sDbDYEr2EemMAIjsl7W43A"/>
    </packagedElement>
    <profileApplication xmi:id="_nykGUML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_nyl7gML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dJfAML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dKtIML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dLUMML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dL7QML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_9cQyoML5EeaSH8bbL43htA" base_Class="_9X86YML5EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Gu9tEML6EeaSH8bbL43htA" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Iu5kgML6EeaSH8bbL43htA" base_Class="_IuNA8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_LOpkcML6EeaSH8bbL43htA" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_QrF_AML6EeaSH8bbL43htA" base_Package="_QrBtkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrOh4ML6EeaSH8bbL43htA" base_Interface="_QrKQcML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrWdsML6EeaSH8bbL43htA" base_Interface="_QrSzUML6EeaSH8bbL43htA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrckUML6EeaSH8bbL43htA" base_Interface="_QrZhAML6EeaSH8bbL43htA" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_QrgOsML6EeaSH8bbL43htA" base_Collaboration="_Qq5xwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_a5_b8ML6EeaSH8bbL43htA" base_Port="_a5ynoML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ej0CUML6EeaSH8bbL43htA" base_Port="_ejuiwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_gvt5MML6EeaSH8bbL43htA" base_Port="_gvpnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ieknsML6EeaSH8bbL43htA" base_Port="_ieg9UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_l2SKYML6EeaSH8bbL43htA" base_Port="_l2PuIML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_o94NcML6EeaSH8bbL43htA" base_Property="_o9z8AML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_sW7z8ML6EeaSH8bbL43htA" base_Property="_sW4woML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_uWJ5sML6EeaSH8bbL43htA" base_Property="_uWG2YML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_wXCMUML6EeaSH8bbL43htA" base_Property="_wW-h8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_zZAIgML6EeaSH8bbL43htA" base_Property="_zY9sQML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_9hs20cL6EeaSH8bbL43htA" base_Connector="_9hn-UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-P8c4sL6EeaSH8bbL43htA" base_Connector="_-P5ZkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-9SrEcL6EeaSH8bbL43htA" base_Connector="_-9PnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ihRg8ML7EeaSH8bbL43htA" isWired="false" base_Port="_ihPrwML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sgbRsML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_sggKMML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sglCsML7EeaSH8bbL43htA" base_Region="_sgSu0ML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_shjTEML7EeaSH8bbL43htA" base_StateMachine="_sgJk4ML7EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_TGQH8ML8EeaSH8bbL43htA" isWired="false" base_Port="_TGKoYML8EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_QkHBsMMEEeaSH8bbL43htA" isWired="false" base_Port="_QkCwQMMEEeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_P-0CoMMMEeaSH8bbL43htA" isWired="false" base_Port="_P-w_UMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SANSoMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_SAPH0MMMEeaSH8bbL43htA" base_State="_SAN5sMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_SAPu4MMMEeaSH8bbL43htA" base_Region="_SAKPUMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_SBGqkMMMEeaSH8bbL43htA" base_StateMachine="_SAHMAMMMEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_0KCXUsMPEeaSH8bbL43htA" base_Connector="_0KAiIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_02B6osMPEeaSH8bbL43htA" base_Connector="_02AFcMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_13cUUcMPEeaSH8bbL43htA" base_Connector="_13afIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_2pYHkMMPEeaSH8bbL43htA" base_Connector="_2pVrUMMPEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_bKtWgMMQEeaSH8bbL43htA" base_Property="_bKsIYMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_ex6GsMMQEeaSH8bbL43htA" base_Property="_ex4RgMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_gzrKIMMQEeaSH8bbL43htA" base_Property="_gzot4MMQEeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_j0w1YMM4EeahHehXumVB-w" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_p187wMM4EeahHehXumVB-w" base_Port="_p1u5UMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_sK-SYMM4EeahHehXumVB-w" base_Port="_sK7PEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_v-PIoMM4EeahHehXumVB-w" base_Port="_v-KQIMM4EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_wvSyIMM4EeahHehXumVB-w" base_Package="_wvPHwMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvY4wMM4EeahHehXumVB-w" base_Interface="_wvV1cMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wve_YMM4EeahHehXumVB-w" base_Interface="_wvcjIMM4EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvke8MM4EeahHehXumVB-w" base_Interface="_wviCsMM4EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_wvniQMM4EeahHehXumVB-w" base_Collaboration="_wvKPQMM4EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_AJ77MMM5EeahHehXumVB-w" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_CHYfUMM5EeahHehXumVB-w" base_Port="_CHUN4MM5EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_O_8GIMM5EeahHehXumVB-w" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_RDhugMM5EeahHehXumVB-w" base_Package="_RDfSQMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDkKwMM5EeahHehXumVB-w" base_Interface="_RDiVkMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDnOEMM5EeahHehXumVB-w" base_Interface="_RDlY4MM5EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDrfgMM5EeahHehXumVB-w" base_Interface="_RDpDQMM5EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_RDt7wMM5EeahHehXumVB-w" base_Collaboration="_RDbn4MM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_gMcOYMM5EeahHehXumVB-w" base_Port="_gMZLEMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_m5f8QMM5EeahHehXumVB-w" base_Port="_m5dgAMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_0csbgMM5EeahHehXumVB-w" base_Port="_0cp_QMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_3ton0MM5EeahHehXumVB-w" base_Port="_3tk9cMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_8dOjcMM5EeahHehXumVB-w" base_Property="_8dMHMMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_ANxc4MM6EeahHehXumVB-w" base_Property="_ANvnsMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_DptYQMM6EeahHehXumVB-w" base_Property="_Dpq8AMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_GmrfssM6EeahHehXumVB-w" base_Connector="_GmpDcMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_JFkkAsM6EeahHehXumVB-w" base_Connector="_JFiHwMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_KEoNQMM6EeahHehXumVB-w" base_Property="_KElJ8MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Ni31wsM6EeahHehXumVB-w" base_Connector="_Ni2AkMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Q2uzMMM6EeahHehXumVB-w" base_Connector="_Q2rv4MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_TMfwscM6EeahHehXumVB-w" base_Connector="_TMcGUMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_T-WEYcM6EeahHehXumVB-w" base_Connector="_T-SaAMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_VxL7AMM6EeahHehXumVB-w" base_Port="_VxKF0MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_fBwHcsM6EeahHehXumVB-w" base_Connector="_fBuSQMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_mXF9UMM6EeahHehXumVB-w" base_StateMachine="_mXBE0MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_mXGkYMM6EeahHehXumVB-w" base_Region="_mXBE0cM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mXHLcMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_mXHygMM6EeahHehXumVB-w" base_State="_mXBE2MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_IdGZUMM7EeahHehXumVB-w" base_StateMachine="_IdCu8MM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_IdHAYMM7EeahHehXumVB-w" base_Region="_IdCu8cM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_IdHncMM7EeahHehXumVB-w" base_Pseudostate="_IdDWBcM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_IdHnccM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yUREgMM7EeahHehXumVB-w" base_Pseudostate="_yUOoQMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_yUTgwMM7EeahHehXumVB-w" base_State="_yUSSoMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_yUUu4MM7EeahHehXumVB-w" base_Region="_yUMMAMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_yVXQsMM7EeahHehXumVB-w" base_StateMachine="_yUE3QMM7EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_uL4n8MM9EeahHehXumVB-w" isWired="false" base_Port="_uL2LsMM9EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_qxaXcMX2EeaYV5cb1Zesag" isWired="false" base_Port="_qxGOYMX2EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_x2xQkMX2EeaYV5cb1Zesag" isWired="false" base_Port="_x2tmMMX2EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_k2x6IMX4EeaYV5cb1Zesag" base_State="_k2uPwMX4EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_Wbb1cMX5EeaYV5cb1Zesag" isWired="false" base_Port="_WbYyIMX5EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aL1IcMX6EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_GOUpoMYlEeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_RQTwYMYlEeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_4c99IMYlEeaYV5cb1Zesag" isWired="false" base_Port="_4c8vAMYlEeaYV5cb1Zesag"/>
  <RTCppProperties:PassiveClassProperties xmi:id="_TuYcgN5nEeakB9CQglrL_g" headerPreface="" base_Class="_aEoEwML7EeaSH8bbL43htA" privateDeclarations="" publicDeclarations=""/>
  <UMLRealTime:Capsule xmi:id="_sCPXoEr2EemMAIjsl7W43A" base_Class="_sBwPcEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_sCjgsEr2EemMAIjsl7W43A" base_StateMachine="_sCP-sEr2EemMAIjsl7W43A"/>
  <UMLRealTime:ProtocolContainer xmi:id="_sCsqoEr2EemMAIjsl7W43A" base_Package="_sCkHwEr2EemMAIjsl7W43A"/>
  <UMLRealTime:Protocol xmi:id="_sCvG4Er2EemMAIjsl7W43A" base_Collaboration="_sCtRsEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTMessageSet xmi:id="_sDDP8Er2EemMAIjsl7W43A" base_Interface="_sCvt8Er2EemMAIjsl7W43A"/>
  <UMLRealTime:RTMessageSet xmi:id="_sDLy0Er2EemMAIjsl7W43A" base_Interface="_sCyxQEr2EemMAIjsl7W43A" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_sDOPEEr2EemMAIjsl7W43A" base_Interface="_sC3pwEr2EemMAIjsl7W43A" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_sDvzgEr2EemMAIjsl7W43A" base_Port="_sDi_MEr2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sG2K0Er2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_sBwPcEr2EemMAIjsl7W43A" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sHAi4Er2EemMAIjsl7W43A" base_Class="_sBwPcEr2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sH1pUEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sHttgEr2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sILAgEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sIH9MEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sIoTgEr2EemMAIjsl7W43A" base_Region="_sImeUEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sIwPUEr2EemMAIjsl7W43A" base_Pseudostate="_sIo6kEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTState xmi:id="_sI2V8Er2EemMAIjsl7W43A" base_State="_sIw2YEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sI8ckEr2EemMAIjsl7W43A" base_Pseudostate="_sI6nYEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sKOO8Er2EemMAIjsl7W43A" isWired="false" base_Port="_sKLysEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sNciEEr2EemMAIjsl7W43A" isPublish="true" isWired="false" base_Port="_sNY3sEr2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sNoIQEr2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_LOPUwML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sNtAwEr2EemMAIjsl7W43A" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_sOK60Er2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sOJssEr2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sOV58Er2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sOUEwEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sOyl4Er2EemMAIjsl7W43A" base_Pseudostate="_sOuUcEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sO1CIEr2EemMAIjsl7W43A" base_Pseudostate="_sOz0AEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sQIpsEr2EemMAIjsl7W43A" isWired="false" base_Port="_sQFmYEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sQP-cEr2EemMAIjsl7W43A" isPublish="true" isWired="false" base_Port="_sQNiMEr2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sQbkoEr2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_GuPUUML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sQiSUEr2EemMAIjsl7W43A" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_sRLLgEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sREd0Er2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sRWKoEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sRR5MEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sR154Er2EemMAIjsl7W43A" base_Pseudostate="_sR0rwEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTState xmi:id="_sR3vEEr2EemMAIjsl7W43A" base_State="_sR154Ur2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sR9OoEr2EemMAIjsl7W43A" base_Pseudostate="_sR6LUEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sSidcEr2EemMAIjsl7W43A" isWired="false" base_Port="_sSezEEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sSokEEr2EemMAIjsl7W43A" isPublish="true" isWired="false" base_Port="_sSmH0Er2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sSy8IEr2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_AJLGMMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sS0xUEr2EemMAIjsl7W43A" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_sTanMEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sTZZEEr2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sTjxIEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sTgGwEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sUMqUEr2EemMAIjsl7W43A" base_Pseudostate="_sUHx0Er2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTState xmi:id="_sUN4cEr2EemMAIjsl7W43A" base_State="_sUNRYEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sUsZkEr2EemMAIjsl7W43A" isWired="false" base_Port="_sUqkYEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sUu10Er2EemMAIjsl7W43A" isPublish="true" isWired="false" base_Port="_sUtAoEr2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sU508Er2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_jvOOEMM4EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sU-GYEr2EemMAIjsl7W43A" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_sVqC4Er2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sVpb0Er2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sVzM0Er2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sVx-sEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sWctEEr2EemMAIjsl7W43A" base_Pseudostate="_sWcGAEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sWeiQEr2EemMAIjsl7W43A" base_Pseudostate="_sWd7MEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sXsqQEr2EemMAIjsl7W43A" isWired="false" base_Port="_sXnKsEr2EemMAIjsl7W43A"/>
  <UMLRealTime:RTPort xmi:id="_sXt4YEr2EemMAIjsl7W43A" isPublish="true" isWired="false" base_Port="_sXtRUEr2EemMAIjsl7W43A"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sX5ekEr2EemMAIjsl7W43A" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_O_UbEMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_sX9I8Er2EemMAIjsl7W43A" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_sYZ04Er2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sYX_sUr2EemMAIjsl7W43A"/>
  <RTCppProperties:ParameterProperties xmi:id="_sYhwsEr2EemMAIjsl7W43A" type="pmd::Message" base_Parameter="_sYgikEr2EemMAIjsl7W43A"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sZMfEEr2EemMAIjsl7W43A" base_Pseudostate="_sZKp4Er2EemMAIjsl7W43A"/>
  <UMLRealTime:CapsulePart xmi:id="_sZyU8Er2EemMAIjsl7W43A" base_Property="_sZxt4Er2EemMAIjsl7W43A"/>
</xmi:XMI>

<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_nx1tkML5EeaSH8bbL43htA" name="RootElement">
    <eAnnotations xmi:id="_IbhgEML7EeaSH8bbL43htA" source="UMLRT_Default_top">
      <details xmi:id="_IbjVQML7EeaSH8bbL43htA" key="top_name" value="Parcer_Router"/>
    </eAnnotations>
    <eAnnotations xmi:id="_CvVv8EseEemkc5BAZA-jww" source="dummy"/>
    <eAnnotations xmi:id="_RtO7cEv2EemhTOJat3QOQw" source="dummy"/>
    <eAnnotations xmi:id="_7ZF0EEwuEemRrLQ_AmjKcw" source="dummy"/>
    <eAnnotations xmi:id="_gr7NEExeEem0h4L8xtbAhw" source="dummy"/>
    <eAnnotations xmi:id="_r_BAMEyFEemRWutalGXeSg" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_9X86YML5EeaSH8bbL43htA" name="Parcer_Router" isActive="true">
      <ownedAttribute xmi:id="_o9z8AML6EeaSH8bbL43htA" name="gen" visibility="protected" type="_GuPUUML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sW4woML6EeaSH8bbL43htA" name="top" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_uWG2YML6EeaSH8bbL43htA" name="right" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_wW-h8ML6EeaSH8bbL43htA" name="left" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_zY9sQML6EeaSH8bbL43htA" name="bin1" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YaaZIMMQEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YaWHsMMQEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bKsIYMMQEeaSH8bbL43htA" name="bin2" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ex4RgMMQEeaSH8bbL43htA" name="bin3" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_gzot4MMQEeaSH8bbL43htA" name="bin0" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_uxz8QEr2EemiLdgyAp5aUA" name="dbgAgent" type="_uZJkoEr2EemiLdgyAp5aUA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ux1KYEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ux1KYUr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_9hn-UML6EeaSH8bbL43htA" name="RTConnector1">
        <end xmi:id="_9hsPwML6EeaSH8bbL43htA" partWithPort="_o9z8AML6EeaSH8bbL43htA" role="_a5ynoML6EeaSH8bbL43htA"/>
        <end xmi:id="_9hs20ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-P5ZkML6EeaSH8bbL43htA" name="RTConnector2">
        <end xmi:id="_-P8c4ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_-P8c4cL6EeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-9PnwML6EeaSH8bbL43htA" name="RTConnector3">
        <end xmi:id="_-9SEAML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_-9SrEML6EeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_0KAiIMMPEeaSH8bbL43htA" name="RTConnector4">
        <end xmi:id="_0KCXUMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_0KCXUcMPEeaSH8bbL43htA" partWithPort="_ex4RgMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_02AFcMMPEeaSH8bbL43htA" name="RTConnector5">
        <end xmi:id="_02B6oMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_02B6ocMPEeaSH8bbL43htA" partWithPort="_bKsIYMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_13afIMMPEeaSH8bbL43htA" name="RTConnector6">
        <end xmi:id="_13btQMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_13cUUMMPEeaSH8bbL43htA" partWithPort="_zY9sQML6EeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_2pVrUMMPEeaSH8bbL43htA" name="RTConnector7">
        <end xmi:id="_2pXggMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_2pXggcMPEeaSH8bbL43htA" partWithPort="_gzot4MMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GuPUUML6EeaSH8bbL43htA" name="Gen" classifierBehavior="_sgJk4ML7EeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_a5ynoML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ihPrwML7EeaSH8bbL43htA" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_TGKoYML8EeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_37GIwML8EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_48hwkML8EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_48kM0ML8EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN4IcMYtEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9chtwMYtEeaYV5cb1Zesag" value="8"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BH5zUMYuEeaYV5cb1Zesag" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ukxl0Er2EemiLdgyAp5aUA" name="dbgPortForGen" visibility="protected" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ukyM4Er2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ukzbAEr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sgJk4ML7EeaSH8bbL43htA" name="GenStateMachine" isReentrant="false">
        <region xmi:id="_sgSu0ML7EeaSH8bbL43htA" name="Region">
          <transition xmi:id="_unEE0Er2EemiLdgyAp5aUA" name="Trans__Init__State__1213" source="_um_zYEr2EemiLdgyAp5aUA" target="_um2CYEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_unpToEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__12&quot;,&quot;New__State__11&quot;,&quot;To__New__State__11__18&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__12&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_unLZkEr2EemiLdgyAp5aUA" name="From__New__State__11__14" source="_um5FsEr2EemiLdgyAp5aUA" target="_um2CYEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_unwBUEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__11&quot;,&quot;New__State__11&quot;,&quot;To__New__State__11__18&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__11&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_unT8cEr2EemiLdgyAp5aUA" name="PME_Trig15" event="_OTwdgMOlEeaV4cHHWddkKg" port="_a5ynoML6EeaSH8bbL43htA"/>
            <trigger xmi:id="_unYN4Er2EemiLdgyAp5aUA" name="PME_Trig16" event="_uawHIEr2EemiLdgyAp5aUA" port="_ukxl0Er2EemiLdgyAp5aUA"/>
            <trigger xmi:id="_une7kEr2EemiLdgyAp5aUA" name="PME_Trig17" port="_ihPrwML7EeaSH8bbL43htA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_unm3YEr2EemiLdgyAp5aUA" name="To__New__State__11__18" guard="_unydkUr2EemiLdgyAp5aUA" source="_um2CYEr2EemiLdgyAp5aUA" target="_um5FsEr2EemiLdgyAp5aUA">
            <ownedRule xmi:id="_unydkUr2EemiLdgyAp5aUA" name="PME_checkDecesion19">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_unydkEr2EemiLdgyAp5aUA" name="PME_checkDecesion19">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__11__18&quot;,&quot;New__State__11&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_um2CYEr2EemiLdgyAp5aUA" name="DecesionPoint__10" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_um5FsEr2EemiLdgyAp5aUA" name="New__State__11"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_um_zYEr2EemiLdgyAp5aUA" name="Init__State__12"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ulbGEUr2EemiLdgyAp5aUA" name="loadHeap" specification="_ulbGEEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.delay&quot;,this->delay);
heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ulmsQUr2EemiLdgyAp5aUA" name="unLoadHeap" specification="_ulmsQEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ul5nMUr2EemiLdgyAp5aUA" name="sendMessage" specification="_ul5nMEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    enter.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_umEmUEr2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_umD_QEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_umljsUr2EemiLdgyAp5aUA" name="initForPMD" specification="_umljsEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Gen::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Gen::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ulbGEEr2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_ulbGEUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_ulmsQEr2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_ulmsQUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_ul5nMEr2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_ul5nMUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_ul7cYEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ul_t0Er2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_umD_QEr2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_umEmUEr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_umHCkEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_umHpoEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_umljsEr2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_umljsUr2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IuNA8ML6EeaSH8bbL43htA" name="Stage" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejuiwML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gvpnwML6EeaSH8bbL43htA" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ieg9UML6EeaSH8bbL43htA" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Ko_yUML9EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ko_yUcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ko_yUsL9EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_QkCwQMMEEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_8dMHMMM5EeahHehXumVB-w" name="chute1" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ANvnsMM6EeahHehXumVB-w" name="chute2" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Dpq8AMM6EeahHehXumVB-w" name="sensor" visibility="protected" type="_AJLGMMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_KElJ8MM6EeahHehXumVB-w" name="switcher" visibility="protected" type="_O_UbEMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:id="_GmpDcMM6EeahHehXumVB-w" name="RTConnector1">
        <end xmi:id="_GmrfsMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_v-KQIMM4EeahHehXumVB-w"/>
        <end xmi:id="_GmrfscM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_CHUN4MM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_JFiHwMM6EeahHehXumVB-w" name="RTConnector2">
        <end xmi:id="_JFkkAMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_JFkkAcM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Ni2AkMM6EeahHehXumVB-w" name="RTConnector3">
        <end xmi:id="_Ni31wMM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_m5dgAMM5EeahHehXumVB-w"/>
        <end xmi:id="_Ni31wcM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_gMZLEMM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Q2rv4MM6EeahHehXumVB-w" name="RTConnector4">
        <end xmi:id="_Q2uMIMM6EeahHehXumVB-w" role="_ejuiwML6EeaSH8bbL43htA"/>
        <end xmi:id="_Q2uMIcM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_TMcGUMM6EeahHehXumVB-w" name="RTConnector5">
        <end xmi:id="_TMfJoMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_0cp_QMM5EeahHehXumVB-w"/>
        <end xmi:id="_TMfwsMM6EeahHehXumVB-w" role="_gvpnwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_T-SaAMM6EeahHehXumVB-w" name="RTConnector6">
        <end xmi:id="_T-VdUMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_3tk9cMM5EeahHehXumVB-w"/>
        <end xmi:id="_T-WEYMM6EeahHehXumVB-w" role="_ieg9UML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_fBuSQMM6EeahHehXumVB-w" name="RTConnector7">
        <end xmi:id="_fBwHcMM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_fBwHccM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_VxKF0MM6EeahHehXumVB-w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LOPUwML6EeaSH8bbL43htA" name="Bin" classifierBehavior="_SAHMAMMMEeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_l2PuIML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K51lgMMPEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K5yiMMMPEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LhdrYML9EeaSH8bbL43htA" name="parcels" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LhdrYcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LhdrYsL9EeaSH8bbL43htA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_P-w_UMMMEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_udi8cEr2EemiLdgyAp5aUA" name="dbgPortForBin" visibility="protected" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_udl_wEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_udmm0Er2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_SAHMAMMMEeaSH8bbL43htA" name="BinStateMachine" isReentrant="false">
        <region xmi:id="_SAKPUMMMEeaSH8bbL43htA" name="Region">
          <transition xmi:id="_ujuc8Er2EemiLdgyAp5aUA" name="Trans__Pseudo14" source="_SAMEgMMMEeaSH8bbL43htA" target="_ujWpgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ukWvEEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo1&quot;,&quot;New__State__3&quot;,&quot;To__New__State__3__8&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo1&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uj1xsEr2EemiLdgyAp5aUA" name="From__New__State__3__5" source="_ujhooEr2EemiLdgyAp5aUA" target="_ujWpgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_ukhHIEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__3&quot;,&quot;New__State__3&quot;,&quot;To__New__State__3__8&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_uj-UkEr2EemiLdgyAp5aUA" name="PME_Trig6" event="_SR6HoMMBEeaSH8bbL43htA" port="_l2PuIML6EeaSH8bbL43htA"/>
            <trigger xmi:id="_ukB-8Er2EemiLdgyAp5aUA" name="PME_Trig7" event="_uawHIEr2EemiLdgyAp5aUA" port="_udi8cEr2EemiLdgyAp5aUA"/>
          </transition>
          <transition xmi:id="_ukIsoEr2EemiLdgyAp5aUA" name="To__New__State__3__8" guard="_uknNwUr2EemiLdgyAp5aUA" source="_ujWpgEr2EemiLdgyAp5aUA" target="_ujhooEr2EemiLdgyAp5aUA">
            <ownedRule xmi:id="_uknNwUr2EemiLdgyAp5aUA" name="PME_checkDecesion9">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_uknNwEr2EemiLdgyAp5aUA" name="PME_checkDecesion9">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__3__8&quot;,&quot;New__State__3&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_SAMEgMMMEeaSH8bbL43htA" name="Pseudo1"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ujWpgEr2EemiLdgyAp5aUA" name="DecesionPoint__2" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_ujhooEr2EemiLdgyAp5aUA" name="New__State__3"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ueZ4EUr2EemiLdgyAp5aUA" name="loadHeap" specification="_ueZ4EEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uekQIUr2EemiLdgyAp5aUA" name="unLoadHeap" specification="_uekQIEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ufNJUUr2EemiLdgyAp5aUA" name="sendMessage" specification="_ufNJUEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ufrDYEr2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_ufqcUEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ugeUoEr2EemiLdgyAp5aUA" name="initForPMD" specification="_ugdtkEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Bin::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Bin::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ueZ4EEr2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_ueZ4EUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uekQIEr2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_uekQIUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_ufNJUEr2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_ufNJUUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_ufQzsEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ufXhYEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ufqcUEr2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_ufrDYEr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_ufs4kEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ufv74Er2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ugdtkEr2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_ugeUoEr2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QrBtkML6EeaSH8bbL43htA" name="transmission">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_Qq5xwML6EeaSH8bbL43htA" name="transmission">
        <interfaceRealization xmi:id="_QrQXEML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrKQcML6EeaSH8bbL43htA" contract="_QrKQcML6EeaSH8bbL43htA"/>
        <interfaceRealization xmi:id="_QreZgML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA" contract="_QrZhAML6EeaSH8bbL43htA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrKQcML6EeaSH8bbL43htA" name="transmission">
        <ownedOperation xmi:id="_NmRscMOlEeaV4cHHWddkKg" name="setFree">
          <ownedParameter xmi:id="_2eSnwMOlEeaV4cHHWddkKg" name="free">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrSzUML6EeaSH8bbL43htA" name="transmission~">
        <ownedOperation xmi:id="_PIeRgMMBEeaSH8bbL43htA" name="transmit">
          <ownedParameter xmi:id="_QFxAMMMBEeaSH8bbL43htA" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrXr0ML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrSzUML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_QrY58ML6EeaSH8bbL43htA" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrZhAML6EeaSH8bbL43htA" name="transmissionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrfnoML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_SR6HoMMBEeaSH8bbL43htA" operation="_PIeRgMMBEeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_OTwdgMOlEeaV4cHHWddkKg" operation="_NmRscMOlEeaV4cHHWddkKg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aEoEwML7EeaSH8bbL43htA" name="Parcel">
      <ownedAttribute xmi:id="_cj_qMML7EeaSH8bbL43htA" name="number" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2upQ0MMJEeaSH8bbL43htA" name="level">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_wiSxYMMLEeaSH8bbL43htA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BxJI8N5pEeakB9CQglrL_g" name="stage" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jvOOEMM4EeahHehXumVB-w" name="Chute" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_p1u5UMM4EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sK7PEMM4EeahHehXumVB-w" name="exit" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_v-KQIMM4EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:id="_4iC8wMM4EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8_D6oMM4EeahHehXumVB-w" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8_HlAMM4EeahHehXumVB-w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_gQNcAMOlEeaV4cHHWddkKg" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_qxGOYMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WbYyIMX5EeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oc-oIMYhEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1Wbm0MYhEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_un0SwEr2EemiLdgyAp5aUA" name="dbgPortForChute" visibility="protected" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_un1g4Er2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_un2H8Er2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mXBE0MM6EeahHehXumVB-w" name="ChuteStateMachine" isReentrant="false">
        <region xmi:id="_mXBE0cM6EeahHehXumVB-w" name="Region">
          <transition xmi:id="_nnQiEMOlEeaV4cHHWddkKg" name="IDLE__IDLE__20" source="_mXBE2MM6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_AMB4YMOmEeaV4cHHWddkKg">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_8Oj9QMOlEeaV4cHHWddkKg" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_eK17sMX6EeaYV5cb1Zesag" name="jam ?__IDLE__21" guard="_pg8RQMX6EeaYV5cb1Zesag" source="_aLwP8MX6EeaYV5cb1Zesag" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_pg8RQMX6EeaYV5cb1Zesag">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_pg8RQcX6EeaYV5cb1Zesag">
                <language>C++</language>
                <body>return this->successorFree;</body>
              </specification>
            </ownedRule>
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_5gzAMMX6EeaYV5cb1Zesag">
              <language>C++</language>
              <body>	detection.detect(this->parcel).send();
	exit.transmit(this->parcel).send();
	this->successorFree = false;
log.show(&quot;Chute %s of stage %d is now free\n&quot;, this->getName(), this->parcel.stage);</body>
            </effect>
          </transition>
          <transition xmi:id="_up4vUEr2EemiLdgyAp5aUA" name="Trans__Init__State__2324" source="_up26IEr2EemiLdgyAp5aUA" target="_up1E8Er2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uqZssEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__23&quot;,&quot;IDLE&quot;,&quot;To__IDLE__30&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__23&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_up_dAEr2EemiLdgyAp5aUA" name="25" source="_aLwP8MX6EeaYV5cb1Zesag" target="_up1E8Er2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uqUNIEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;jam ?&quot;,&quot;IDLE&quot;,&quot;To__IDLE__30&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;jam ?&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uqAEEEr2EemiLdgyAp5aUA" name="From__IDLE__26" source="_mXBE2MM6EeahHehXumVB-w" target="_up1E8Er2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uqWCUEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__30&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_uqB5QEr2EemiLdgyAp5aUA" name="PME_Trig27" event="_uawHIEr2EemiLdgyAp5aUA" port="_un0SwEr2EemiLdgyAp5aUA"/>
            <trigger xmi:id="_uqE8kEr2EemiLdgyAp5aUA" name="PME_Trig28" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
            <trigger xmi:id="_uqKcIEr2EemiLdgyAp5aUA" name="PME_Trig29" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_uqMRUEr2EemiLdgyAp5aUA" name="To__IDLE__30" guard="_uqfMQUr2EemiLdgyAp5aUA" source="_up1E8Er2EemiLdgyAp5aUA" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_uqfMQUr2EemiLdgyAp5aUA" name="PME_checkDecesion31">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_uqfMQEr2EemiLdgyAp5aUA" name="PME_checkDecesion31">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__30&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_mXBE2MM6EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_t4ekIMX4EeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_aLwP8MX6EeaYV5cb1Zesag" name="jam ?" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_up1E8Er2EemiLdgyAp5aUA" name="DecesionPoint__22" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_up26IEr2EemiLdgyAp5aUA" name="Init__State__23"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uoSM0Ur2EemiLdgyAp5aUA" name="loadHeap" specification="_uoSM0Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uobWwUr2EemiLdgyAp5aUA" name="unLoadHeap" specification="_uobWwEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uo5Q0Ur2EemiLdgyAp5aUA" name="sendMessage" specification="_uo5Q0Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;exit&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    exit.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;detect&quot;) {
   if(message.payload.size()==1){
    detection.detect( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_upDB0Ur2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_upDB0Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_upl0YUr2EemiLdgyAp5aUA" name="initForPMD" specification="_upl0YEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Chute::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Chute::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addOutPutMessages(&quot;exit&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;exit&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForChute&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_uoSM0Er2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_uoSM0Ur2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uobWwEr2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_uobWwUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uo5Q0Er2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_uo5Q0Ur2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uo6e8Er2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_uo7GAEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_upDB0Er2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_upDB0Ur2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_upEP8Er2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_upE3AEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_upl0YEr2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_upl0YUr2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wvPHwMM4EeahHehXumVB-w" name="detection">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_wvKPQMM4EeahHehXumVB-w" name="detection">
        <interfaceRealization xmi:id="_wvat8MM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvV1cMM4EeahHehXumVB-w" contract="_wvV1cMM4EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_wvltEMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w" contract="_wviCsMM4EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvV1cMM4EeahHehXumVB-w" name="detection"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvcjIMM4EeahHehXumVB-w" name="detection~">
        <ownedOperation xmi:id="_F05S4MM5EeahHehXumVB-w" name="detect">
          <ownedParameter xmi:id="_G2MX0MM5EeahHehXumVB-w" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvgNgMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvcjIMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_wvhboMM4EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wviCsMM4EeahHehXumVB-w" name="detectionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvmUIMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Mh59cMM5EeahHehXumVB-w" operation="_F05S4MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AJLGMMM5EeahHehXumVB-w" name="Sensor" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_CHUN4MM5EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_m5dgAMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uL2LsMM9EeahHehXumVB-w" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uwNZwEr2EemiLdgyAp5aUA" name="dbgPortForSensor" visibility="protected" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uwOA0Er2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_uwOA0Ur2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_IdCu8MM7EeahHehXumVB-w" name="SensorStateMachine" isReentrant="false">
        <region xmi:id="_IdCu8cM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_uxZFgEr2EemiLdgyAp5aUA" name="Trans__Pseudo5558" source="_IdDWBcM7EeahHehXumVB-w" target="_uxP7kEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uxqyUEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo55&quot;,&quot;New__State__57&quot;,&quot;To__New__State__57__62&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo55&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uxfMIEr2EemiLdgyAp5aUA" name="From__New__State__57__59" source="_uxU0EEr2EemiLdgyAp5aUA" target="_uxP7kEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uxvq0Er2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__57&quot;,&quot;New__State__57&quot;,&quot;To__New__State__57__62&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__57&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_uxfzMEr2EemiLdgyAp5aUA" name="PME_Trig60" event="_uawHIEr2EemiLdgyAp5aUA" port="_uwNZwEr2EemiLdgyAp5aUA"/>
            <trigger xmi:id="_uxi2gEr2EemiLdgyAp5aUA" name="PME_Trig61" event="_Mh59cMM5EeahHehXumVB-w" port="_CHUN4MM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_uxo9IEr2EemiLdgyAp5aUA" name="To__New__State__57__62" guard="_uxyuIUr2EemiLdgyAp5aUA" source="_uxP7kEr2EemiLdgyAp5aUA" target="_uxU0EEr2EemiLdgyAp5aUA">
            <ownedRule xmi:id="_uxyuIUr2EemiLdgyAp5aUA" name="PME_checkDecesion63">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_uxyuIEr2EemiLdgyAp5aUA" name="PME_checkDecesion63">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__57__62&quot;,&quot;New__State__57&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_IdDWBcM7EeahHehXumVB-w" name="Pseudo55"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_uxP7kEr2EemiLdgyAp5aUA" name="DecesionPoint__56" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_uxU0EEr2EemiLdgyAp5aUA" name="New__State__57"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uwiJ4Er2EemiLdgyAp5aUA" name="loadHeap" specification="_uwhi0Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uwiw8Ur2EemiLdgyAp5aUA" name="unLoadHeap" specification="_uwiw8Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uwsh8Ur2EemiLdgyAp5aUA" name="sendMessage" specification="_uwsh8Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;switchProtocol&quot;) {
  if(message.signal==&quot;setSwitch&quot;) {
   if(message.payload.size()==1){
    switchProtocol.setSwitch( boost::any_cast&lt;int>(message.payload[&quot;c&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uw1r4Ur2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_uw1r4Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uxJ08Ur2EemiLdgyAp5aUA" name="initForPMD" specification="_uxJ08Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Sensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Sensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForSensor&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_uwhi0Er2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_uwiJ4Er2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uwiw8Er2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_uwiw8Ur2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uwsh8Er2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_uwsh8Ur2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uwtJAEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_uwvlQEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uw1r4Er2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_uw1r4Ur2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uw2S8Er2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_uw26AEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uxJ08Er2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_uxJ08Ur2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O_UbEMM5EeahHehXumVB-w" name="Switcher" classifierBehavior="_yUE3QMM7EeahHehXumVB-w" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gMZLEMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0cp_QMM5EeahHehXumVB-w" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_3tk9cMM5EeahHehXumVB-w" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_VxKF0MM6EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:id="_tx4ecMM7EeahHehXumVB-w" name="choice">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Yk87wMM9EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA"/>
      <ownedAttribute xmi:id="_GGZlEMOmEeaV4cHHWddkKg" name="leftSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J43KEMOmEeaV4cHHWddkKg" name="rightSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_x2tmMMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_b1lNUMYiEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_eEeGwMYiEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_4c8vAMYlEeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_utgEAEr2EemiLdgyAp5aUA" name="dbgPortForSwitcher" visibility="protected" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_utgrEEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_utgrEUr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_yUE3QMM7EeahHehXumVB-w" name="SwitcherStateMachine" isReentrant="false">
        <region xmi:id="_yUMMAMM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_uvfoEEr2EemiLdgyAp5aUA" name="Trans__Pseudo4043" source="_yUOoQMM7EeahHehXumVB-w" target="_uvaIgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uwCaoEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo40&quot;,&quot;New__State__42&quot;,&quot;To__New__State__42__53&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo40&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uvg2MEr2EemiLdgyAp5aUA" name="Trans__Jam ?44" source="_RQRUIMYlEeaYV5cb1Zesag" target="_uvaIgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uwDowEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Jam ?&quot;,&quot;New__State__42&quot;,&quot;To__New__State__42__53&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Jam ?&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uvlHoEr2EemiLdgyAp5aUA" name="45" source="_RQRUIMYlEeaYV5cb1Zesag" target="_uvaIgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uwE24Er2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Jam ?&quot;,&quot;New__State__42&quot;,&quot;To__New__State__42__53&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Jam ?&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_uvlusEr2EemiLdgyAp5aUA" name="From__New__State__42__46" source="_uvbWoEr2EemiLdgyAp5aUA" target="_uvaIgEr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_uwGsEEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__42&quot;,&quot;New__State__42&quot;,&quot;To__New__State__42__53&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__42&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_uvm80Er2EemiLdgyAp5aUA" name="PME_Trig47" event="_cjDs4MM5EeahHehXumVB-w" port="_gMZLEMM5EeahHehXumVB-w"/>
            <trigger xmi:id="_uvtqgEr2EemiLdgyAp5aUA" name="PME_Trig48" event="_OTwdgMOlEeaV4cHHWddkKg" port="_3tk9cMM5EeahHehXumVB-w"/>
            <trigger xmi:id="_uvvfsEr2EemiLdgyAp5aUA" name="PME_Trig49" event="_uawHIEr2EemiLdgyAp5aUA" port="_utgEAEr2EemiLdgyAp5aUA"/>
            <trigger xmi:id="_uvx78Er2EemiLdgyAp5aUA" name="PME_Trig50" event="_SR6HoMMBEeaSH8bbL43htA" port="_VxKF0MM6EeahHehXumVB-w"/>
            <trigger xmi:id="_uv0_QEr2EemiLdgyAp5aUA" name="PME_Trig51" port="_4c8vAMYlEeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
            <trigger xmi:id="_uv53wEr2EemiLdgyAp5aUA" name="PME_Trig52" event="_OTwdgMOlEeaV4cHHWddkKg" port="_0cp_QMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_uv7s8Er2EemiLdgyAp5aUA" name="To__New__State__42__53" guard="_uwIhQUr2EemiLdgyAp5aUA" source="_uvaIgEr2EemiLdgyAp5aUA" target="_uvbWoEr2EemiLdgyAp5aUA">
            <ownedRule xmi:id="_uwIhQUr2EemiLdgyAp5aUA" name="PME_checkDecesion54">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_uwIhQEr2EemiLdgyAp5aUA" name="PME_checkDecesion54">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__42__53&quot;,&quot;New__State__42&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yUOoQMM7EeahHehXumVB-w" name="Pseudo40"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_RQRUIMYlEeaYV5cb1Zesag" name="Jam ?" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_uvaIgEr2EemiLdgyAp5aUA" name="DecesionPoint__41" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_uvbWoEr2EemiLdgyAp5aUA" name="New__State__42"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ut3QYUr2EemiLdgyAp5aUA" name="loadHeap" specification="_ut3QYEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.choice&quot;,this->choice);
heap.setVarValue(&quot;this.leftSuccessorFree&quot;,this->leftSuccessorFree);
heap.setVarValue(&quot;this.rightSuccessorFree&quot;,this->rightSuccessorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ut_MMUr2EemiLdgyAp5aUA" name="unLoadHeap" specification="_ut_MMEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.choice&quot;,&amp;this->choice);
heap.loadVarFromHeap(&quot;this.leftSuccessorFree&quot;,&amp;this->leftSuccessorFree);
heap.loadVarFromHeap(&quot;this.rightSuccessorFree&quot;,&amp;this->rightSuccessorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uufigUr2EemiLdgyAp5aUA" name="sendMessage" specification="_uufigEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;right&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    right.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;left&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    left.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uupTgUr2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_uupTgEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uvK38Ur2EemiLdgyAp5aUA" name="initForPMD" specification="_uvK38Er2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Switcher::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Switcher::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;right&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;left&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;right&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;left&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForSwitcher&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ut3QYEr2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_ut3QYUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_ut_MMEr2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_ut_MMUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uufigEr2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_uufigUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uuh-wEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_uum3QEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uupTgEr2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_uupTgUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uup6kEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_uusW0Er2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uvK38Er2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_uvK38Ur2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RDfSQMM5EeahHehXumVB-w" name="switchProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_RDbn4MM5EeahHehXumVB-w" name="switchProtocol">
        <interfaceRealization xmi:id="_RDkx0MM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDiVkMM5EeahHehXumVB-w" contract="_RDiVkMM5EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_RDsGkMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w" contract="_RDpDQMM5EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDiVkMM5EeahHehXumVB-w" name="switchProtocol"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDlY4MM5EeahHehXumVB-w" name="switchProtocol~">
        <ownedOperation xmi:id="_XR2R8MM5EeahHehXumVB-w" name="setSwitch">
          <ownedParameter xmi:id="_YFqUgMM5EeahHehXumVB-w" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDn1IMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDlY4MM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_RDocMMM5EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDpDQMM5EeahHehXumVB-w" name="switchProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDtUsMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_cjDs4MM5EeahHehXumVB-w" operation="_XR2R8MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uZJkoEr2EemiLdgyAp5aUA" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ua0YkEr2EemiLdgyAp5aUA" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ua4qAEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_ua54IEr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uduioEr2EemiLdgyAp5aUA" name="dbgPortForBin" visibility="public" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_udw-4Er2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_udw-4Ur2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uk7W0Er2EemiLdgyAp5aUA" name="dbgPortForGen" visibility="public" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uk794Er2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_uk794Ur2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_un8OkEr2EemiLdgyAp5aUA" name="dbgPortForChute" visibility="public" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_un81oEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_un9csEr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_utigQEr2EemiLdgyAp5aUA" name="dbgPortForSwitcher" visibility="public" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_utjHUEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_utjHUUr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uwPO8Er2EemiLdgyAp5aUA" name="dbgPortForSensor" visibility="public" type="_uZ5LgEr2EemiLdgyAp5aUA" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_uwP2AEr2EemiLdgyAp5aUA" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_uwP2AUr2EemiLdgyAp5aUA" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_uZpT4Er2EemiLdgyAp5aUA" name="dbgAgent StateMachine">
        <region xmi:id="_usbtAEr2EemiLdgyAp5aUA" name="mainRegion">
          <transition xmi:id="_us3K0Er2EemiLdgyAp5aUA" name="Trans__Init__State__3435" source="_ustZ0Er2EemiLdgyAp5aUA" target="_usjBwUr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_utQzcEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__34&quot;,&quot;New__State__33&quot;,&quot;To__New__State__33__38&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__34&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_us6OIEr2EemiLdgyAp5aUA" name="From__New__State__33__36" source="_usmFEEr2EemiLdgyAp5aUA" target="_usjBwUr2EemiLdgyAp5aUA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_utW6EEr2EemiLdgyAp5aUA">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__33&quot;,&quot;New__State__33&quot;,&quot;To__New__State__33__38&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__33&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_utCJ8Er2EemiLdgyAp5aUA" name="PME_Trig37" port="_ua0YkEr2EemiLdgyAp5aUA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_utL68Er2EemiLdgyAp5aUA" name="To__New__State__33__38" guard="_utYIMUr2EemiLdgyAp5aUA" source="_usjBwUr2EemiLdgyAp5aUA" target="_usmFEEr2EemiLdgyAp5aUA">
            <ownedRule xmi:id="_utYIMUr2EemiLdgyAp5aUA" name="PME_checkDecesion39">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_utYIMEr2EemiLdgyAp5aUA" name="PME_checkDecesion39">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__33__38&quot;,&quot;New__State__33&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_usjBwUr2EemiLdgyAp5aUA" name="DecesionPoint__32" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_usmFEEr2EemiLdgyAp5aUA" name="New__State__33">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_ux2_kEr2EemiLdgyAp5aUA" name="New__State__33">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_ustZ0Er2EemiLdgyAp5aUA" name="Init__State__34"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uq0jcUr2EemiLdgyAp5aUA" name="loadHeap" specification="_uq0jcEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_uq9GUUr2EemiLdgyAp5aUA" name="unLoadHeap" specification="_uq9GUEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_urUSsUr2EemiLdgyAp5aUA" name="sendMessage" specification="_urUSsEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;dbgPortForBin&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForBin.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForGen&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForGen.dbg().sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;dbgPortForChute&quot;) {
  if(message.signal==&quot;dbg&quot;) {
   if(message.payload.size()==0){
    dbgPortForChute.dbg().sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_urmmkUr2EemiLdgyAp5aUA" name="sendInternalMessage" specification="_urmmkEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_usNqkEr2EemiLdgyAp5aUA" name="initForPMD" specification="_usNDgEr2EemiLdgyAp5aUA">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
this->execContext.addOutPutMessages(&quot;dbgPortForChute&quot;,&quot;dbg&quot;,{});
 this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_uq0jcEr2EemiLdgyAp5aUA" name="loadHeap" visibility="private" method="_uq0jcUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_uq9GUEr2EemiLdgyAp5aUA" name="unLoadHeap" visibility="private" method="_uq9GUUr2EemiLdgyAp5aUA"/>
      <ownedOperation xmi:id="_urUSsEr2EemiLdgyAp5aUA" name="sendMessage" visibility="private" method="_urUSsUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_uraZUEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_urcOgEr2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_urmmkEr2EemiLdgyAp5aUA" name="sendInternalMessage" visibility="private" method="_urmmkUr2EemiLdgyAp5aUA">
        <ownedParameter xmi:id="_urn0sEr2EemiLdgyAp5aUA" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_urqQ8Er2EemiLdgyAp5aUA" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_usNDgEr2EemiLdgyAp5aUA" name="initForPMD" visibility="private" method="_usNqkEr2EemiLdgyAp5aUA"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_uZzE4Er2EemiLdgyAp5aUA" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_uZ5LgEr2EemiLdgyAp5aUA" name="dbgProtocol">
        <interfaceRealization xmi:id="_uagPgEr2EemiLdgyAp5aUA" client="_uZ5LgEr2EemiLdgyAp5aUA" supplier="_uZ-EAEr2EemiLdgyAp5aUA" contract="_uZ-EAEr2EemiLdgyAp5aUA"/>
        <interfaceRealization xmi:id="_uaj54Er2EemiLdgyAp5aUA" client="_uZ5LgEr2EemiLdgyAp5aUA" supplier="_uaExsEr2EemiLdgyAp5aUA" contract="_uaExsEr2EemiLdgyAp5aUA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_uZ-EAEr2EemiLdgyAp5aUA" name="dbgProtocol">
        <ownedOperation xmi:id="_uar1sEr2EemiLdgyAp5aUA" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_uZ_5MEr2EemiLdgyAp5aUA" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_uaExsEr2EemiLdgyAp5aUA" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_uaHN8Er2EemiLdgyAp5aUA" client="_uZ5LgEr2EemiLdgyAp5aUA" supplier="_uZ_5MEr2EemiLdgyAp5aUA"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_uaJDIEr2EemiLdgyAp5aUA" client="_uZ5LgEr2EemiLdgyAp5aUA" supplier="_uaExsEr2EemiLdgyAp5aUA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_uawHIEr2EemiLdgyAp5aUA" operation="_uar1sEr2EemiLdgyAp5aUA"/>
    </packagedElement>
    <profileApplication xmi:id="_nykGUML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_nyl7gML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dJfAML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dKtIML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dLUMML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dL7QML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_9cQyoML5EeaSH8bbL43htA" base_Class="_9X86YML5EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Gu9tEML6EeaSH8bbL43htA" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Iu5kgML6EeaSH8bbL43htA" base_Class="_IuNA8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_LOpkcML6EeaSH8bbL43htA" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_QrF_AML6EeaSH8bbL43htA" base_Package="_QrBtkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrOh4ML6EeaSH8bbL43htA" base_Interface="_QrKQcML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrWdsML6EeaSH8bbL43htA" base_Interface="_QrSzUML6EeaSH8bbL43htA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrckUML6EeaSH8bbL43htA" base_Interface="_QrZhAML6EeaSH8bbL43htA" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_QrgOsML6EeaSH8bbL43htA" base_Collaboration="_Qq5xwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_a5_b8ML6EeaSH8bbL43htA" base_Port="_a5ynoML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ej0CUML6EeaSH8bbL43htA" base_Port="_ejuiwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_gvt5MML6EeaSH8bbL43htA" base_Port="_gvpnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ieknsML6EeaSH8bbL43htA" base_Port="_ieg9UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_l2SKYML6EeaSH8bbL43htA" base_Port="_l2PuIML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_o94NcML6EeaSH8bbL43htA" base_Property="_o9z8AML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_sW7z8ML6EeaSH8bbL43htA" base_Property="_sW4woML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_uWJ5sML6EeaSH8bbL43htA" base_Property="_uWG2YML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_wXCMUML6EeaSH8bbL43htA" base_Property="_wW-h8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_zZAIgML6EeaSH8bbL43htA" base_Property="_zY9sQML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_9hs20cL6EeaSH8bbL43htA" base_Connector="_9hn-UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-P8c4sL6EeaSH8bbL43htA" base_Connector="_-P5ZkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-9SrEcL6EeaSH8bbL43htA" base_Connector="_-9PnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ihRg8ML7EeaSH8bbL43htA" isWired="false" base_Port="_ihPrwML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sgbRsML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_sggKMML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sglCsML7EeaSH8bbL43htA" base_Region="_sgSu0ML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_shjTEML7EeaSH8bbL43htA" base_StateMachine="_sgJk4ML7EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_TGQH8ML8EeaSH8bbL43htA" isWired="false" base_Port="_TGKoYML8EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_QkHBsMMEEeaSH8bbL43htA" isWired="false" base_Port="_QkCwQMMEEeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_P-0CoMMMEeaSH8bbL43htA" isWired="false" base_Port="_P-w_UMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SANSoMMMEeaSH8bbL43htA" base_Pseudostate="_SAMEgMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_SAPH0MMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_SAPu4MMMEeaSH8bbL43htA" base_Region="_SAKPUMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_SBGqkMMMEeaSH8bbL43htA" base_StateMachine="_SAHMAMMMEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_0KCXUsMPEeaSH8bbL43htA" base_Connector="_0KAiIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_02B6osMPEeaSH8bbL43htA" base_Connector="_02AFcMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_13cUUcMPEeaSH8bbL43htA" base_Connector="_13afIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_2pYHkMMPEeaSH8bbL43htA" base_Connector="_2pVrUMMPEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_bKtWgMMQEeaSH8bbL43htA" base_Property="_bKsIYMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_ex6GsMMQEeaSH8bbL43htA" base_Property="_ex4RgMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_gzrKIMMQEeaSH8bbL43htA" base_Property="_gzot4MMQEeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_j0w1YMM4EeahHehXumVB-w" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_p187wMM4EeahHehXumVB-w" base_Port="_p1u5UMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_sK-SYMM4EeahHehXumVB-w" base_Port="_sK7PEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_v-PIoMM4EeahHehXumVB-w" base_Port="_v-KQIMM4EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_wvSyIMM4EeahHehXumVB-w" base_Package="_wvPHwMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvY4wMM4EeahHehXumVB-w" base_Interface="_wvV1cMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wve_YMM4EeahHehXumVB-w" base_Interface="_wvcjIMM4EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvke8MM4EeahHehXumVB-w" base_Interface="_wviCsMM4EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_wvniQMM4EeahHehXumVB-w" base_Collaboration="_wvKPQMM4EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_AJ77MMM5EeahHehXumVB-w" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_CHYfUMM5EeahHehXumVB-w" base_Port="_CHUN4MM5EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_O_8GIMM5EeahHehXumVB-w" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_RDhugMM5EeahHehXumVB-w" base_Package="_RDfSQMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDkKwMM5EeahHehXumVB-w" base_Interface="_RDiVkMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDnOEMM5EeahHehXumVB-w" base_Interface="_RDlY4MM5EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDrfgMM5EeahHehXumVB-w" base_Interface="_RDpDQMM5EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_RDt7wMM5EeahHehXumVB-w" base_Collaboration="_RDbn4MM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_gMcOYMM5EeahHehXumVB-w" base_Port="_gMZLEMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_m5f8QMM5EeahHehXumVB-w" base_Port="_m5dgAMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_0csbgMM5EeahHehXumVB-w" base_Port="_0cp_QMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_3ton0MM5EeahHehXumVB-w" base_Port="_3tk9cMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_8dOjcMM5EeahHehXumVB-w" base_Property="_8dMHMMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_ANxc4MM6EeahHehXumVB-w" base_Property="_ANvnsMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_DptYQMM6EeahHehXumVB-w" base_Property="_Dpq8AMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_GmrfssM6EeahHehXumVB-w" base_Connector="_GmpDcMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_JFkkAsM6EeahHehXumVB-w" base_Connector="_JFiHwMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_KEoNQMM6EeahHehXumVB-w" base_Property="_KElJ8MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Ni31wsM6EeahHehXumVB-w" base_Connector="_Ni2AkMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Q2uzMMM6EeahHehXumVB-w" base_Connector="_Q2rv4MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_TMfwscM6EeahHehXumVB-w" base_Connector="_TMcGUMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_T-WEYcM6EeahHehXumVB-w" base_Connector="_T-SaAMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_VxL7AMM6EeahHehXumVB-w" base_Port="_VxKF0MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_fBwHcsM6EeahHehXumVB-w" base_Connector="_fBuSQMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_mXF9UMM6EeahHehXumVB-w" base_StateMachine="_mXBE0MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_mXGkYMM6EeahHehXumVB-w" base_Region="_mXBE0cM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mXHLcMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_mXHygMM6EeahHehXumVB-w" base_State="_mXBE2MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_IdGZUMM7EeahHehXumVB-w" base_StateMachine="_IdCu8MM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_IdHAYMM7EeahHehXumVB-w" base_Region="_IdCu8cM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_IdHncMM7EeahHehXumVB-w" base_Pseudostate="_IdDWBcM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_IdHnccM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yUREgMM7EeahHehXumVB-w" base_Pseudostate="_yUOoQMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_yUTgwMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_yUUu4MM7EeahHehXumVB-w" base_Region="_yUMMAMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_yVXQsMM7EeahHehXumVB-w" base_StateMachine="_yUE3QMM7EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_uL4n8MM9EeahHehXumVB-w" isWired="false" base_Port="_uL2LsMM9EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_qxaXcMX2EeaYV5cb1Zesag" isWired="false" base_Port="_qxGOYMX2EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_x2xQkMX2EeaYV5cb1Zesag" isWired="false" base_Port="_x2tmMMX2EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_k2x6IMX4EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_Wbb1cMX5EeaYV5cb1Zesag" isWired="false" base_Port="_WbYyIMX5EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aL1IcMX6EeaYV5cb1Zesag" base_Pseudostate="_aLwP8MX6EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_GOUpoMYlEeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_RQTwYMYlEeaYV5cb1Zesag" base_Pseudostate="_RQRUIMYlEeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_4c99IMYlEeaYV5cb1Zesag" isWired="false" base_Port="_4c8vAMYlEeaYV5cb1Zesag"/>
  <RTCppProperties:PassiveClassProperties xmi:id="_TuYcgN5nEeakB9CQglrL_g" headerPreface="" base_Class="_aEoEwML7EeaSH8bbL43htA" privateDeclarations="" publicDeclarations=""/>
  <UMLRealTime:Capsule xmi:id="_uZos0Er2EemiLdgyAp5aUA" base_Class="_uZJkoEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_uZyd0Er2EemiLdgyAp5aUA" base_StateMachine="_uZpT4Er2EemiLdgyAp5aUA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_uZ3WUEr2EemiLdgyAp5aUA" base_Package="_uZzE4Er2EemiLdgyAp5aUA"/>
  <UMLRealTime:Protocol xmi:id="_uZ9c8Er2EemiLdgyAp5aUA" base_Collaboration="_uZ5LgEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTMessageSet xmi:id="_uaRmAEr2EemiLdgyAp5aUA" base_Interface="_uZ-EAEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTMessageSet xmi:id="_uabXAEr2EemiLdgyAp5aUA" base_Interface="_uZ_5MEr2EemiLdgyAp5aUA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_uaeaUEr2EemiLdgyAp5aUA" base_Interface="_uaExsEr2EemiLdgyAp5aUA" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_ubDpIEr2EemiLdgyAp5aUA" base_Port="_ua0YkEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_udn08Er2EemiLdgyAp5aUA" isWired="false" base_Port="_udi8cEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_udy0EEr2EemiLdgyAp5aUA" isPublish="true" isWired="false" base_Port="_uduioEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ueFvAEr2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_LOPUwML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ueQuIEr2EemiLdgyAp5aUA" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_ufgrUEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_ufXhYEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_uf4ewEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_ufv74Er2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_ujgagEr2EemiLdgyAp5aUA" base_Pseudostate="_ujWpgEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTState xmi:id="_ujqLgEr2EemiLdgyAp5aUA" base_State="_ujhooEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uk13QEr2EemiLdgyAp5aUA" isWired="false" base_Port="_ukxl0Er2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uk-aIEr2EemiLdgyAp5aUA" isPublish="true" isWired="false" base_Port="_uk7W0Er2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ulMckEr2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_GuPUUML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ulQuAEr2EemiLdgyAp5aUA" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_umCxIEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_ul_t0Er2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_umMiIEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_umHpoEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_um33kEr2EemiLdgyAp5aUA" base_Pseudostate="_um2CYEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTState xmi:id="_um-lQEr2EemiLdgyAp5aUA" base_State="_um5FsEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_unBBgEr2EemiLdgyAp5aUA" base_Pseudostate="_um_zYEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_un6ZYEr2EemiLdgyAp5aUA" isWired="false" base_Port="_un0SwEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uoAgAEr2EemiLdgyAp5aUA" isPublish="true" isWired="false" base_Port="_un8OkEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uoJC4Er2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_jvOOEMM4EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uoQXoEr2EemiLdgyAp5aUA" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_uo-JUEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_uo7GAEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_upGsMEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_upE3AEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_up1sAEr2EemiLdgyAp5aUA" base_Pseudostate="_up1E8Er2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_up3hMEr2EemiLdgyAp5aUA" base_Pseudostate="_up26IEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uqqLYEr2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_uZJkoEr2EemiLdgyAp5aUA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uqvD4Er2EemiLdgyAp5aUA" base_Class="_uZJkoEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_urf44Er2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_urcOgEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_uryMwEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_urqQ8Er2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_usjBwEr2EemiLdgyAp5aUA" base_Region="_usbtAEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_usk28Er2EemiLdgyAp5aUA" base_Pseudostate="_usjBwUr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTState xmi:id="_ussLsEr2EemiLdgyAp5aUA" base_State="_usmFEEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_usun8Er2EemiLdgyAp5aUA" base_Pseudostate="_ustZ0Er2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uthSIEr2EemiLdgyAp5aUA" isWired="false" base_Port="_utgEAEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_utk8gEr2EemiLdgyAp5aUA" isPublish="true" isWired="false" base_Port="_utigQEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_utsRQEr2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_O_UbEMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_ut1bMEr2EemiLdgyAp5aUA" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_uuoFYEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_uum3QEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_uuxPUEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_uusW0Er2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_uvavkEr2EemiLdgyAp5aUA" base_Pseudostate="_uvaIgEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTState xmi:id="_uvb9sEr2EemiLdgyAp5aUA" base_State="_uvbWoEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uwOn4Er2EemiLdgyAp5aUA" isWired="false" base_Port="_uwNZwEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:RTPort xmi:id="_uwQdEEr2EemiLdgyAp5aUA" isPublish="true" isWired="false" base_Port="_uwPO8Er2EemiLdgyAp5aUA"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uwZnAEr2EemiLdgyAp5aUA" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_AJLGMMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_uwgUsEr2EemiLdgyAp5aUA" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_uw0dwEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_uwvlQEr2EemiLdgyAp5aUA"/>
  <RTCppProperties:ParameterProperties xmi:id="_uw4IIEr2EemiLdgyAp5aUA" type="pmd::Message" base_Parameter="_uw26AEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_uxUNAEr2EemiLdgyAp5aUA" base_Pseudostate="_uxP7kEr2EemiLdgyAp5aUA"/>
  <UMLRTStateMachines:RTState xmi:id="_uxWpQEr2EemiLdgyAp5aUA" base_State="_uxU0EEr2EemiLdgyAp5aUA"/>
  <UMLRealTime:CapsulePart xmi:id="_ux0jUEr2EemiLdgyAp5aUA" base_Property="_uxz8QEr2EemiLdgyAp5aUA"/>
</xmi:XMI>

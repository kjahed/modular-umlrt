<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:RTCppProperties="http://www.eclipse.org/papyrus/umlrt/cppproperties" xmlns:UMLRTStateMachines="http://www.eclipse.org/papyrus/umlrt/statemachine" xmlns:UMLRealTime="http://www.eclipse.org/papyrus/umlrt" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_nx1tkML5EeaSH8bbL43htA" name="RootElement">
    <eAnnotations xmi:id="_IbhgEML7EeaSH8bbL43htA" source="UMLRT_Default_top">
      <details xmi:id="_IbjVQML7EeaSH8bbL43htA" key="top_name" value="Parcer_Router"/>
    </eAnnotations>
    <eAnnotations xmi:id="_87PDUEsdEemoCNjoBI2HyQ" source="dummy"/>
    <eAnnotations xmi:id="_J2sdAEv2EemUx9I5HpqrnA" source="dummy"/>
    <eAnnotations xmi:id="_NIgSkEwjEemShMKMcvK8Iw" source="dummy"/>
    <eAnnotations xmi:id="_OnPfoExeEemMN9ovoLMeoA" source="dummy"/>
    <eAnnotations xmi:id="_mij-kEyFEemMrIRi9b_1sQ" source="dummy"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_9X86YML5EeaSH8bbL43htA" name="Parcer_Router" isActive="true">
      <ownedAttribute xmi:id="_o9z8AML6EeaSH8bbL43htA" name="gen" visibility="protected" type="_GuPUUML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_sW4woML6EeaSH8bbL43htA" name="top" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_uWG2YML6EeaSH8bbL43htA" name="right" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_wW-h8ML6EeaSH8bbL43htA" name="left" visibility="protected" type="_IuNA8ML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_zY9sQML6EeaSH8bbL43htA" name="bin1" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_YaaZIMMQEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YaWHsMMQEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_bKsIYMMQEeaSH8bbL43htA" name="bin2" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ex4RgMMQEeaSH8bbL43htA" name="bin3" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_gzot4MMQEeaSH8bbL43htA" name="bin0" visibility="protected" type="_LOPUwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_n2csoEr2EemMKs_nCnj9ZQ" name="dbgAgent" type="_nd7e8Er2EemMKs_nCnj9ZQ">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_n2eh0Er2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_n2eh0Ur2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedConnector xmi:id="_9hn-UML6EeaSH8bbL43htA" name="RTConnector1">
        <end xmi:id="_9hsPwML6EeaSH8bbL43htA" partWithPort="_o9z8AML6EeaSH8bbL43htA" role="_a5ynoML6EeaSH8bbL43htA"/>
        <end xmi:id="_9hs20ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-P5ZkML6EeaSH8bbL43htA" name="RTConnector2">
        <end xmi:id="_-P8c4ML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_-P8c4cL6EeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_-9PnwML6EeaSH8bbL43htA" name="RTConnector3">
        <end xmi:id="_-9SEAML6EeaSH8bbL43htA" partWithPort="_sW4woML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_-9SrEML6EeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ejuiwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_0KAiIMMPEeaSH8bbL43htA" name="RTConnector4">
        <end xmi:id="_0KCXUMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_0KCXUcMPEeaSH8bbL43htA" partWithPort="_ex4RgMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_02AFcMMPEeaSH8bbL43htA" name="RTConnector5">
        <end xmi:id="_02B6oMMPEeaSH8bbL43htA" partWithPort="_uWG2YML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_02B6ocMPEeaSH8bbL43htA" partWithPort="_bKsIYMMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_13afIMMPEeaSH8bbL43htA" name="RTConnector6">
        <end xmi:id="_13btQMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_gvpnwML6EeaSH8bbL43htA"/>
        <end xmi:id="_13cUUMMPEeaSH8bbL43htA" partWithPort="_zY9sQML6EeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_2pVrUMMPEeaSH8bbL43htA" name="RTConnector7">
        <end xmi:id="_2pXggMMPEeaSH8bbL43htA" partWithPort="_wW-h8ML6EeaSH8bbL43htA" role="_ieg9UML6EeaSH8bbL43htA"/>
        <end xmi:id="_2pXggcMPEeaSH8bbL43htA" partWithPort="_gzot4MMQEeaSH8bbL43htA" role="_l2PuIML6EeaSH8bbL43htA"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GuPUUML6EeaSH8bbL43htA" name="Gen" classifierBehavior="_sgJk4ML7EeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_a5ynoML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ihPrwML7EeaSH8bbL43htA" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_TGKoYML8EeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_37GIwML8EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_48hwkML8EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_48kM0ML8EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_zN4IcMYtEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_9chtwMYtEeaYV5cb1Zesag" value="8"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BH5zUMYuEeaYV5cb1Zesag" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nr8s0Er2EemMKs_nCnj9ZQ" name="dbgPortForGen" visibility="protected" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nr9T4Er2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nr968Er2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_sgJk4ML7EeaSH8bbL43htA" name="GenStateMachine" isReentrant="false">
        <region xmi:id="_sgSu0ML7EeaSH8bbL43htA" name="Region">
          <transition xmi:id="_yYjisML7EeaSH8bbL43htA" name="GENERATING__GENERATING__19" source="_sgeVAML7EeaSH8bbL43htA" target="_sgeVAML7EeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_I7aroML8EeaSH8bbL43htA" name="generation">
              <language>C++</language>
              <body>if (!this->successorFree) {
	log.show(&quot;impossible to generate a new parcel: the first chute is obfuscated\n&quot;);
}
  else {  
    int random = rand() % 4;
    parcel = Parcel();
    parcel.number = random;
    parcel.stage = 0; // 0 for &quot;top&quot;, 1 for &quot;left&quot;, 2 for &quot;right&quot;
    parcel.level = 2;
    enter.transmit(parcel).send();
    log.show(&quot;generating a parcel %d on stage %d\n&quot;, random, parcel.stage);
    this->successorFree = false;
}</body>
            </effect>
            <trigger xmi:id="_1e0JAML7EeaSH8bbL43htA" port="_ihPrwML7EeaSH8bbL43htA">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_mEQaEMYdEeaYV5cb1Zesag" name="GENERATING__GENERATING__18" source="_sgeVAML7EeaSH8bbL43htA" target="_sgeVAML7EeaSH8bbL43htA">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_GNInwMYuEeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_rdPQ8MYdEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_a5ynoML6EeaSH8bbL43htA"/>
          </transition>
          <transition xmi:id="_nuC-kEr2EemMKs_nCnj9ZQ" name="Trans__Init__State__2122" source="_nt_7QEr2EemMKs_nCnj9ZQ" target="_nt4mgEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nufDcEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__21&quot;,&quot;GENERATING&quot;,&quot;To__GENERATING__25&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__21&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_nuLhcEr2EemMKs_nCnj9ZQ" name="From__GENERATING__23" source="_sgeVAML7EeaSH8bbL43htA" target="_nt4mgEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nug4oEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;GENERATING&quot;,&quot;GENERATING&quot;,&quot;To__GENERATING__25&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;GENERATING&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_nuRBAEr2EemMKs_nCnj9ZQ" name="PME_Trig24" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nr8s0Er2EemMKs_nCnj9ZQ"/>
          </transition>
          <transition xmi:id="_nuWgkEr2EemMKs_nCnj9ZQ" name="To__GENERATING__25" guard="_nuhfsUr2EemMKs_nCnj9ZQ" source="_nt4mgEr2EemMKs_nCnj9ZQ" target="_sgeVAML7EeaSH8bbL43htA">
            <ownedRule xmi:id="_nuhfsUr2EemMKs_nCnj9ZQ" name="PME_checkDecesion26">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_nuhfsEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion26">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__GENERATING__25&quot;,&quot;GENERATING&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_sgeVAML7EeaSH8bbL43htA" name="GENERATING"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nt4mgEr2EemMKs_nCnj9ZQ" name="DecesionPoint__20" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nt_7QEr2EemMKs_nCnj9ZQ" name="Init__State__21"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nslmAUr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_nslmAEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.delay&quot;,this->delay);
heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nsuI4Ur2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_nsuI4Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ns_1sEr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_ns_OoEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    enter.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ntOfMUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_ntOfMEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nttAUUr2EemMKs_nCnj9ZQ" name="initForPMD" specification="_nttAUEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Gen::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Gen::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForGen&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_nslmAEr2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_nslmAUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nsuI4Er2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_nsuI4Ur2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_ns_OoEr2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_ns_1sEr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_ntBD0Er2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ntMqAEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ntOfMEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_ntOfMUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_ntQ7cEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_ntXpIEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nttAUEr2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_nttAUUr2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IuNA8ML6EeaSH8bbL43htA" name="Stage" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ejuiwML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gvpnwML6EeaSH8bbL43htA" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_ieg9UML6EeaSH8bbL43htA" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Ko_yUML9EeaSH8bbL43htA" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ko_yUcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ko_yUsL9EeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_QkCwQMMEEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_8dMHMMM5EeahHehXumVB-w" name="chute1" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_ANvnsMM6EeahHehXumVB-w" name="chute2" visibility="protected" type="_jvOOEMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_Dpq8AMM6EeahHehXumVB-w" name="sensor" visibility="protected" type="_AJLGMMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedAttribute xmi:id="_KElJ8MM6EeahHehXumVB-w" name="switcher" visibility="protected" type="_O_UbEMM5EeahHehXumVB-w" isOrdered="true" aggregation="composite"/>
      <ownedConnector xmi:id="_GmpDcMM6EeahHehXumVB-w" name="RTConnector1">
        <end xmi:id="_GmrfsMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_v-KQIMM4EeahHehXumVB-w"/>
        <end xmi:id="_GmrfscM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_CHUN4MM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_JFiHwMM6EeahHehXumVB-w" name="RTConnector2">
        <end xmi:id="_JFkkAMM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_JFkkAcM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Ni2AkMM6EeahHehXumVB-w" name="RTConnector3">
        <end xmi:id="_Ni31wMM6EeahHehXumVB-w" partWithPort="_Dpq8AMM6EeahHehXumVB-w" role="_m5dgAMM5EeahHehXumVB-w"/>
        <end xmi:id="_Ni31wcM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_gMZLEMM5EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_Q2rv4MM6EeahHehXumVB-w" name="RTConnector4">
        <end xmi:id="_Q2uMIMM6EeahHehXumVB-w" role="_ejuiwML6EeaSH8bbL43htA"/>
        <end xmi:id="_Q2uMIcM6EeahHehXumVB-w" partWithPort="_8dMHMMM5EeahHehXumVB-w" role="_p1u5UMM4EeahHehXumVB-w"/>
      </ownedConnector>
      <ownedConnector xmi:id="_TMcGUMM6EeahHehXumVB-w" name="RTConnector5">
        <end xmi:id="_TMfJoMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_0cp_QMM5EeahHehXumVB-w"/>
        <end xmi:id="_TMfwsMM6EeahHehXumVB-w" role="_gvpnwML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_T-SaAMM6EeahHehXumVB-w" name="RTConnector6">
        <end xmi:id="_T-VdUMM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_3tk9cMM5EeahHehXumVB-w"/>
        <end xmi:id="_T-WEYMM6EeahHehXumVB-w" role="_ieg9UML6EeaSH8bbL43htA"/>
      </ownedConnector>
      <ownedConnector xmi:id="_fBuSQMM6EeahHehXumVB-w" name="RTConnector7">
        <end xmi:id="_fBwHcMM6EeahHehXumVB-w" partWithPort="_ANvnsMM6EeahHehXumVB-w" role="_sK7PEMM4EeahHehXumVB-w"/>
        <end xmi:id="_fBwHccM6EeahHehXumVB-w" partWithPort="_KElJ8MM6EeahHehXumVB-w" role="_VxKF0MM6EeahHehXumVB-w"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LOPUwML6EeaSH8bbL43htA" name="Bin" classifierBehavior="_SAHMAMMMEeaSH8bbL43htA" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_l2PuIML6EeaSH8bbL43htA" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_K51lgMMPEeaSH8bbL43htA" value="1"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K5yiMMMPEeaSH8bbL43htA" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_LhdrYML9EeaSH8bbL43htA" name="parcels" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_LhdrYcL9EeaSH8bbL43htA" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_LhdrYsL9EeaSH8bbL43htA" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_P-w_UMMMEeaSH8bbL43htA" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nmPGYEr2EemMKs_nCnj9ZQ" name="dbgPortForBin" visibility="protected" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nmPtcEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nmPtcUr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_SAHMAMMMEeaSH8bbL43htA" name="BinStateMachine" isReentrant="false">
        <region xmi:id="_SAKPUMMMEeaSH8bbL43htA" name="Region">
          <transition xmi:id="_nrG_UEr2EemMKs_nCnj9ZQ" name="Trans__Pseudo912" source="_SAMEgMMMEeaSH8bbL43htA" target="_nq9OUEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nrmHgEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo9&quot;,&quot;New__State__11&quot;,&quot;To__New__State__11__16&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo9&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_nrKCoEr2EemMKs_nCnj9ZQ" name="From__New__State__11__13" source="_nq_qkEr2EemMKs_nCnj9ZQ" target="_nq9OUEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nry70Er2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__11&quot;,&quot;New__State__11&quot;,&quot;To__New__State__11__16&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__11&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_nrOUEEr2EemMKs_nCnj9ZQ" name="PME_Trig14" event="_SR6HoMMBEeaSH8bbL43htA" port="_l2PuIML6EeaSH8bbL43htA"/>
            <trigger xmi:id="_nrRXYEr2EemMKs_nCnj9ZQ" name="PME_Trig15" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nmPGYEr2EemMKs_nCnj9ZQ"/>
          </transition>
          <transition xmi:id="_nrjEMEr2EemMKs_nCnj9ZQ" name="To__New__State__11__16" guard="_nr0xAEr2EemMKs_nCnj9ZQ" source="_nq9OUEr2EemMKs_nCnj9ZQ" target="_nq_qkEr2EemMKs_nCnj9ZQ">
            <ownedRule xmi:id="_nr0xAEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion17">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_nr0J8Er2EemMKs_nCnj9ZQ" name="PME_checkDecesion17">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__11__16&quot;,&quot;New__State__11&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_SAMEgMMMEeaSH8bbL43htA" name="Pseudo9"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nq9OUEr2EemMKs_nCnj9ZQ" name="DecesionPoint__10" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_nq_qkEr2EemMKs_nCnj9ZQ" name="New__State__11"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_np10AEr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_np1M8Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_np4QQUr2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_np4QQEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nqJWAEr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_nqIu8Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nqVjQUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_nqVjQEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nqvy8Er2EemMKs_nCnj9ZQ" name="initForPMD" specification="_nqtWsEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Bin::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Bin::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForBin&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_np1M8Er2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_np10AEr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_np4QQEr2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_np4QQUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nqIu8Er2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_nqJWAEr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nqMZUEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nqOOgEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nqVjQEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_nqVjQUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nqWxYEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nqYmkEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nqtWsEr2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_nqvy8Er2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_QrBtkML6EeaSH8bbL43htA" name="transmission">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_Qq5xwML6EeaSH8bbL43htA" name="transmission">
        <interfaceRealization xmi:id="_QrQXEML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrKQcML6EeaSH8bbL43htA" contract="_QrKQcML6EeaSH8bbL43htA"/>
        <interfaceRealization xmi:id="_QreZgML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA" contract="_QrZhAML6EeaSH8bbL43htA"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrKQcML6EeaSH8bbL43htA" name="transmission">
        <ownedOperation xmi:id="_NmRscMOlEeaV4cHHWddkKg" name="setFree">
          <ownedParameter xmi:id="_2eSnwMOlEeaV4cHHWddkKg" name="free">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrSzUML6EeaSH8bbL43htA" name="transmission~">
        <ownedOperation xmi:id="_PIeRgMMBEeaSH8bbL43htA" name="transmit">
          <ownedParameter xmi:id="_QFxAMMMBEeaSH8bbL43htA" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrXr0ML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrSzUML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_QrY58ML6EeaSH8bbL43htA" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_QrZhAML6EeaSH8bbL43htA" name="transmissionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_QrfnoML6EeaSH8bbL43htA" client="_Qq5xwML6EeaSH8bbL43htA" supplier="_QrZhAML6EeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_SR6HoMMBEeaSH8bbL43htA" operation="_PIeRgMMBEeaSH8bbL43htA"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_OTwdgMOlEeaV4cHHWddkKg" operation="_NmRscMOlEeaV4cHHWddkKg"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aEoEwML7EeaSH8bbL43htA" name="Parcel">
      <ownedAttribute xmi:id="_cj_qMML7EeaSH8bbL43htA" name="number" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_2upQ0MMJEeaSH8bbL43htA" name="level">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_wiSxYMMLEeaSH8bbL43htA" value="2"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_BxJI8N5pEeakB9CQglrL_g" name="stage" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jvOOEMM4EeahHehXumVB-w" name="Chute" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_p1u5UMM4EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_sK7PEMM4EeahHehXumVB-w" name="exit" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_v-KQIMM4EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:id="_4iC8wMM4EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8_D6oMM4EeahHehXumVB-w" value="0"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8_HlAMM4EeahHehXumVB-w" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_gQNcAMOlEeaV4cHHWddkKg" name="successorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_qxGOYMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_WbYyIMX5EeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_oc-oIMYhEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_1Wbm0MYhEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nzbN0Er2EemMKs_nCnj9ZQ" name="dbgPortForChute" visibility="protected" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nzb04Er2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nzb04Ur2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_mXBE0MM6EeahHehXumVB-w" name="ChuteStateMachine" isReentrant="false">
        <region xmi:id="_mXBE0cM6EeahHehXumVB-w" name="Region">
          <transition xmi:id="_mXBE0sM6EeahHehXumVB-w" name="Initial" source="_mXBE18M6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_n2cFkEr2EemMKs_nCnj9ZQ" name="Initial__62">
              <language>C++</language>
              <body>initForPMD();
</body>
            </effect>
          </transition>
          <transition xmi:id="_mXBE1MM6EeahHehXumVB-w" name="reception" source="_mXBE2MM6EeahHehXumVB-w" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_mXBE1cM6EeahHehXumVB-w">
              <language>C++</language>
              <body>this->parcel = Parcel();
this->parcel.number = p.number;
this->parcel.level =p.level;
this->parcel.stage = p.stage;

log.show(&quot;Chute %s of stage %d becomes occupied\n&quot;, this->getName(), p.stage);
timer.informIn(UMLRTTimespec(this->delay,0));</body>
            </effect>
            <trigger xmi:id="_mXBE1sM6EeahHehXumVB-w" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_nnQiEMOlEeaV4cHHWddkKg" name="IDLE__IDLE__48" source="_mXBE2MM6EeahHehXumVB-w" target="_mXBE2MM6EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_AMB4YMOmEeaV4cHHWddkKg">
              <language>C++</language>
              <body>this->successorFree = free;</body>
            </effect>
            <trigger xmi:id="_8Oj9QMOlEeaV4cHHWddkKg" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_DR_fYMX5EeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__49" source="_k2uPwMX4EeaYV5cb1Zesag" target="_k2uPwMX4EeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_LH2oYMX5EeaYV5cb1Zesag">
              <language>C++</language>
              <body>this->successorFree =free;</body>
            </effect>
            <trigger xmi:id="_I-QeoMX5EeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_sK7PEMM4EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_n1fDUEr2EemMKs_nCnj9ZQ" name="From__IDLE__51" source="_mXBE2MM6EeahHehXumVB-w" target="_n1UrQEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_n2S7oEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__59&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__58&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_n1j70Er2EemMKs_nCnj9ZQ" name="PME_Trig52" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nzbN0Er2EemMKs_nCnj9ZQ"/>
            <trigger xmi:id="_n1m_IEr2EemMKs_nCnj9ZQ" name="PME_Trig53" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_n1wJEEr2EemMKs_nCnj9ZQ" name="From__OCCUPIED__54" source="_k2uPwMX4EeaYV5cb1Zesag" target="_n1UrQEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_n2RGcEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__59&quot;,msg->getSignalName());
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;IDLE&quot;,&quot;To__IDLE__58&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;OCCUPIED&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_n1zMYEr2EemMKs_nCnj9ZQ" name="PME_Trig55" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nzbN0Er2EemMKs_nCnj9ZQ"/>
            <trigger xmi:id="_n10agEr2EemMKs_nCnj9ZQ" name="PME_Trig56" event="_SR6HoMMBEeaSH8bbL43htA" port="_p1u5UMM4EeahHehXumVB-w"/>
            <trigger xmi:id="_n189YEr2EemMKs_nCnj9ZQ" name="PME_Trig57" port="_WbYyIMX5EeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_n2GuYEr2EemMKs_nCnj9ZQ" name="To__IDLE__58" guard="_n2aQYUr2EemMKs_nCnj9ZQ" source="_n1UrQEr2EemMKs_nCnj9ZQ" target="_mXBE2MM6EeahHehXumVB-w">
            <ownedRule xmi:id="_n2aQYUr2EemMKs_nCnj9ZQ" name="PME_checkDecesion61">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2aQYEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion61">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__58&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <transition xmi:id="_n2HVcEr2EemMKs_nCnj9ZQ" name="To__OCCUPIED__59" guard="_n2Uw0Er2EemMKs_nCnj9ZQ" source="_n1UrQEr2EemMKs_nCnj9ZQ" target="_k2uPwMX4EeaYV5cb1Zesag">
            <ownedRule xmi:id="_n2Uw0Er2EemMKs_nCnj9ZQ" name="PME_checkDecesion60">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2UJwEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion60">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__OCCUPIED__59&quot;,&quot;OCCUPIED&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_mXBE18M6EeahHehXumVB-w" name="Pseudo47"/>
          <subvertex xmi:type="uml:State" xmi:id="_mXBE2MM6EeahHehXumVB-w" name="IDLE">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_t4ekIMX4EeaYV5cb1Zesag" name="setFree">
              <language>C++</language>
              <body>enter.setFree(true).send();</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:State" xmi:id="_k2uPwMX4EeaYV5cb1Zesag" name="OCCUPIED"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_n1UrQEr2EemMKs_nCnj9ZQ" name="DecesionPoint__50" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nz69EUr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_nz69EEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.successorFree&quot;,this->successorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n0CR0Ur2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_n0CR0Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.successorFree&quot;,&amp;this->successorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n0YQEEr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_n0XpAEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;exit&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    exit.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;detection&quot;) {
  if(message.signal==&quot;detect&quot;) {
   if(message.payload.size()==1){
    detection.detect( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n0haAUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_n0haAEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n1EzoUr2EemMKs_nCnj9ZQ" name="initForPMD" specification="_n1EzoEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Chute::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Chute::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addOutPutMessages(&quot;exit&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
 this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;exit&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForChute&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_nz69EEr2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_nz69EUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_n0CR0Er2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_n0CR0Ur2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_n0XpAEr2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_n0YQEEr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_n0Y3IEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_n0gL4Er2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n0haAEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_n0haAUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_n0ioIEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_n0qj8Er2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n1EzoEr2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_n1EzoUr2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_wvPHwMM4EeahHehXumVB-w" name="detection">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_wvKPQMM4EeahHehXumVB-w" name="detection">
        <interfaceRealization xmi:id="_wvat8MM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvV1cMM4EeahHehXumVB-w" contract="_wvV1cMM4EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_wvltEMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w" contract="_wviCsMM4EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvV1cMM4EeahHehXumVB-w" name="detection"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wvcjIMM4EeahHehXumVB-w" name="detection~">
        <ownedOperation xmi:id="_F05S4MM5EeahHehXumVB-w" name="detect">
          <ownedParameter xmi:id="_G2MX0MM5EeahHehXumVB-w" name="p" type="_aEoEwML7EeaSH8bbL43htA"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvgNgMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wvcjIMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_wvhboMM4EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_wviCsMM4EeahHehXumVB-w" name="detectionIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_wvmUIMM4EeahHehXumVB-w" client="_wvKPQMM4EeahHehXumVB-w" supplier="_wviCsMM4EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_Mh59cMM5EeahHehXumVB-w" operation="_F05S4MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_AJLGMMM5EeahHehXumVB-w" name="Sensor" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_CHUN4MM5EeahHehXumVB-w" name="detection" visibility="public" type="_wvKPQMM4EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_m5dgAMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_uL2LsMM9EeahHehXumVB-w" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nurQsEr2EemMKs_nCnj9ZQ" name="dbgPortForSensor" visibility="protected" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nuu7EEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nuxXUEr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_IdCu8MM7EeahHehXumVB-w" name="SensorStateMachine" isReentrant="false">
        <region xmi:id="_IdCu8cM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_IdDWAsM7EeahHehXumVB-w" name="IDLE__IDLE__27" source="_IdDWBsM7EeahHehXumVB-w" target="_IdDWBsM7EeahHehXumVB-w">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_IdDWA8M7EeahHehXumVB-w">
              <language>C++</language>
              <body>    int reducedNumber = p.number/p.level; 
    int isPair = reducedNumber % 2;
    if (isPair == 0) {
    log.show(&quot;At stage %s (%d), turn left.\n&quot;, getName(), p.level);
    switchProtocol.setSwitch(0).send();
    }
    else {
    log.show(&quot;At stage %s (%d), turn right.\n&quot;, getName(), p.level);
    switchProtocol.setSwitch(1).send();
    }</body>
            </effect>
            <trigger xmi:id="_PGM0QMM7EeahHehXumVB-w" event="_Mh59cMM5EeahHehXumVB-w" port="_CHUN4MM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_nwa9IEr2EemMKs_nCnj9ZQ" name="Trans__Init__State__2930" source="_nwYg4Er2EemMKs_nCnj9ZQ" target="_nwTBUEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nwz-sEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__29&quot;,&quot;IDLE&quot;,&quot;To__IDLE__33&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__29&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_nwi48Er2EemMKs_nCnj9ZQ" name="From__IDLE__31" source="_IdDWBsM7EeahHehXumVB-w" target="_nwTBUEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nwvGMEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;IDLE&quot;,&quot;IDLE&quot;,&quot;To__IDLE__33&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;IDLE&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_nwkHEEr2EemMKs_nCnj9ZQ" name="PME_Trig32" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nurQsEr2EemMKs_nCnj9ZQ"/>
          </transition>
          <transition xmi:id="_nwsp8Er2EemMKs_nCnj9ZQ" name="To__IDLE__33" guard="_nw3CAUr2EemMKs_nCnj9ZQ" source="_nwTBUEr2EemMKs_nCnj9ZQ" target="_IdDWBsM7EeahHehXumVB-w">
            <ownedRule xmi:id="_nw3CAUr2EemMKs_nCnj9ZQ" name="PME_checkDecesion34">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_nw3CAEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion34">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__IDLE__33&quot;,&quot;IDLE&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:State" xmi:id="_IdDWBsM7EeahHehXumVB-w" name="IDLE"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nwTBUEr2EemMKs_nCnj9ZQ" name="DecesionPoint__28" kind="choice"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nwYg4Er2EemMKs_nCnj9ZQ" name="Init__State__29"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nvH8oUr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_nvH8oEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nvKY4Er2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_nvJx0Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nvcFsUr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_nvcFsEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;switchProtocol&quot;) {
  if(message.signal==&quot;setSwitch&quot;) {
   if(message.payload.size()==1){
    switchProtocol.setSwitch( boost::any_cast&lt;int>(message.payload[&quot;c&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nvl2sUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_nvl2sEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nwE-4Ur2EemMKs_nCnj9ZQ" name="initForPMD" specification="_nwE-4Er2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Sensor::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Sensor::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
 this->execContext.addInputMessages(&quot;detection&quot;,&quot;detect&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;dbgPortForSensor&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_nvH8oEr2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_nvH8oUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nvJx0Er2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_nvKY4Er2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nvcFsEr2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_nvcFsUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nvdT0Er2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nvkokEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nvl2sEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_nvl2sUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nvnE0Er2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nvo6AEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nwE-4Er2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_nwE-4Ur2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O_UbEMM5EeahHehXumVB-w" name="Switcher" classifierBehavior="_yUE3QMM7EeahHehXumVB-w" isActive="true">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_gMZLEMM5EeahHehXumVB-w" name="switchProtocol" visibility="public" type="_RDbn4MM5EeahHehXumVB-w" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_0cp_QMM5EeahHehXumVB-w" name="right" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_3tk9cMM5EeahHehXumVB-w" name="left" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true"/>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_VxKF0MM6EeahHehXumVB-w" name="enter" visibility="public" type="_Qq5xwML6EeaSH8bbL43htA" isOrdered="true" aggregation="composite" isBehavior="true" isConjugated="true"/>
      <ownedAttribute xmi:id="_tx4ecMM7EeahHehXumVB-w" name="choice">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_Yk87wMM9EeahHehXumVB-w" name="parcel" type="_aEoEwML7EeaSH8bbL43htA"/>
      <ownedAttribute xmi:id="_GGZlEMOmEeaV4cHHWddkKg" name="leftSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_J43KEMOmEeaV4cHHWddkKg" name="rightSuccessorFree">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_x2tmMMX2EeaYV5cb1Zesag" name="log" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_6kIb0IeXEeSVyrlWP4nYew"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="_b1lNUMYiEeaYV5cb1Zesag" name="delay">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        <defaultValue xmi:type="uml:LiteralInteger" xmi:id="_eEeGwMYiEeaYV5cb1Zesag" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_4c8vAMYlEeaYV5cb1Zesag" name="timer" visibility="protected" isOrdered="true" aggregation="composite" isBehavior="true" isService="false">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nw5eQEr2EemMKs_nCnj9ZQ" name="dbgPortForSwitcher" visibility="protected" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isService="false">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nw5eQUr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nw6FUEr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_yUE3QMM7EeahHehXumVB-w" name="SwitcherStateMachine" isReentrant="false">
        <region xmi:id="_yUMMAMM7EeahHehXumVB-w" name="Region">
          <transition xmi:id="_AAZAYMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__38" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_IFuv0MYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;right successor of switcher becomes free\n&quot;);
this->rightSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_D_7YEMYoEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_0cp_QMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_LJ32QMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__36" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_R25H4MYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>//log.show(&quot;left successor of switcher becomes free\n&quot;);
this->leftSuccessorFree = free;</body>
            </effect>
            <trigger xmi:id="_PMRUsMYoEeaYV5cb1Zesag" event="_OTwdgMOlEeaV4cHHWddkKg" port="_3tk9cMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_i9e1YMYoEeaYV5cb1Zesag" name="OCCUPIED__OCCUPIED__37" source="_GOTbgMYlEeaYV5cb1Zesag" target="_GOTbgMYlEeaYV5cb1Zesag">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_yidmMMYoEeaYV5cb1Zesag">
              <language>C++</language>
              <body>log.show(&quot;Impossible to activate the switch of %s: the switch gate is obstructed by a parcel\n&quot;, this->getName());</body>
            </effect>
            <trigger xmi:id="_oHSAwMYoEeaYV5cb1Zesag" event="_cjDs4MM5EeahHehXumVB-w" port="_gMZLEMM5EeahHehXumVB-w"/>
          </transition>
          <transition xmi:id="_nys1EEr2EemMKs_nCnj9ZQ" name="Trans__Pseudo3540" source="_yUOoQMM7EeahHehXumVB-w" target="_nykSMEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nzRc0Er2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Pseudo35&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__45&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Pseudo35&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_nywfcEr2EemMKs_nCnj9ZQ" name="From__OCCUPIED__41" source="_GOTbgMYlEeaYV5cb1Zesag" target="_nykSMEr2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nzPnoEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;OCCUPIED&quot;,&quot;OCCUPIED&quot;,&quot;To__OCCUPIED__45&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;OCCUPIED&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_ny8ssEr2EemMKs_nCnj9ZQ" name="PME_Trig42" event="_nfhaYEr2EemMKs_nCnj9ZQ" port="_nw5eQEr2EemMKs_nCnj9ZQ"/>
            <trigger xmi:id="_nzEogEr2EemMKs_nCnj9ZQ" name="PME_Trig43" event="_SR6HoMMBEeaSH8bbL43htA" port="_VxKF0MM6EeahHehXumVB-w"/>
            <trigger xmi:id="_nzGdsEr2EemMKs_nCnj9ZQ" name="PME_Trig44" port="_4c8vAMYlEeaYV5cb1Zesag">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_nzMkUEr2EemMKs_nCnj9ZQ" name="To__OCCUPIED__45" guard="_nzSD4Ur2EemMKs_nCnj9ZQ" source="_nykSMEr2EemMKs_nCnj9ZQ" target="_GOTbgMYlEeaYV5cb1Zesag">
            <ownedRule xmi:id="_nzSD4Ur2EemMKs_nCnj9ZQ" name="PME_checkDecesion46">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzSD4Er2EemMKs_nCnj9ZQ" name="PME_checkDecesion46">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__OCCUPIED__45&quot;,&quot;OCCUPIED&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_yUOoQMM7EeahHehXumVB-w" name="Pseudo35"/>
          <subvertex xmi:type="uml:State" xmi:id="_GOTbgMYlEeaYV5cb1Zesag" name="OCCUPIED"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nykSMEr2EemMKs_nCnj9ZQ" name="DecesionPoint__39" kind="choice"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nxVjIUr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_nxVjIEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.setVarValue(&quot;this.choice&quot;,this->choice);
heap.setVarValue(&quot;this.leftSuccessorFree&quot;,this->leftSuccessorFree);
heap.setVarValue(&quot;this.rightSuccessorFree&quot;,this->rightSuccessorFree);
heap.setVarValue(&quot;this.delay&quot;,this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nxX_YUr2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_nxX_YEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>heap.loadVarFromHeap(&quot;this.choice&quot;,&amp;this->choice);
heap.loadVarFromHeap(&quot;this.leftSuccessorFree&quot;,&amp;this->leftSuccessorFree);
heap.loadVarFromHeap(&quot;this.rightSuccessorFree&quot;,&amp;this->rightSuccessorFree);
heap.loadVarFromHeap(&quot;this.delay&quot;,&amp;this->delay);
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nxy2IUr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_nxy2IEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
 if(message.portName==&quot;right&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    right.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;left&quot;) {
  if(message.signal==&quot;transmit&quot;) {
   if(message.payload.size()==1){
    left.transmit( boost::any_cast&lt;>(message.payload[&quot;p&quot;])).sendAt(message.index);
result=1;
}
  }
 }
 else if(message.portName==&quot;enter&quot;) {
  if(message.signal==&quot;setFree&quot;) {
   if(message.payload.size()==1){
    enter.setFree( boost::any_cast&lt;bool>(message.payload[&quot;free&quot;])).sendAt(message.index);
result=1;
}
  }
 }
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nx15cUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_nx15cEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nyRXQUr2EemMKs_nCnj9ZQ" name="initForPMD" specification="_nyRXQEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_Switcher::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_Switcher::sendInternalMessage,this,std::placeholders::_1));
 this->execContext.addOutPutMessages(&quot;right&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;left&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addOutPutMessages(&quot;enter&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
 this->execContext.addInputMessages(&quot;switchProtocol&quot;,&quot;setSwitch&quot;,{ {&quot;c&quot;,&quot;Integer&quot;}});
this->execContext.addInputMessages(&quot;right&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;left&quot;,&quot;setFree&quot;,{ {&quot;free&quot;,&quot;Boolean&quot;}});
this->execContext.addInputMessages(&quot;enter&quot;,&quot;transmit&quot;,{ {&quot;p&quot;,&quot;Parcel&quot;}});
this->execContext.addInputMessages(&quot;timer&quot;,&quot;timeout&quot;,{});
this->execContext.addInputMessages(&quot;dbgPortForSwitcher&quot;,&quot;dbg&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_nxVjIEr2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_nxVjIUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nxX_YEr2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_nxX_YUr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_nxy2IEr2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_nxy2IUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nxzdMEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nx1SYEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nx15cEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_nx15cUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nx3HkEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nx91QEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nyRXQEr2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_nyRXQUr2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_RDfSQMM5EeahHehXumVB-w" name="switchProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_RDbn4MM5EeahHehXumVB-w" name="switchProtocol">
        <interfaceRealization xmi:id="_RDkx0MM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDiVkMM5EeahHehXumVB-w" contract="_RDiVkMM5EeahHehXumVB-w"/>
        <interfaceRealization xmi:id="_RDsGkMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w" contract="_RDpDQMM5EeahHehXumVB-w"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDiVkMM5EeahHehXumVB-w" name="switchProtocol"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDlY4MM5EeahHehXumVB-w" name="switchProtocol~">
        <ownedOperation xmi:id="_XR2R8MM5EeahHehXumVB-w" name="setSwitch">
          <ownedParameter xmi:id="_YFqUgMM5EeahHehXumVB-w" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDn1IMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDlY4MM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:AnyReceiveEvent" xmi:id="_RDocMMM5EeahHehXumVB-w" name="*"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_RDpDQMM5EeahHehXumVB-w" name="switchProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_RDtUsMM5EeahHehXumVB-w" client="_RDbn4MM5EeahHehXumVB-w" supplier="_RDpDQMM5EeahHehXumVB-w"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_cjDs4MM5EeahHehXumVB-w" operation="_XR2R8MM5EeahHehXumVB-w"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nd7e8Er2EemMKs_nCnj9ZQ" name="dbgAgent">
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nfj2oEr2EemMKs_nCnj9ZQ" name="timing" visibility="protected">
        <type xmi:type="uml:Collaboration" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_MxQZgGXsEeS_4daqvwyFrg"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nflEwEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nfoIEEr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_npPXEEr2EemMKs_nCnj9ZQ" name="dbgPortForBin" visibility="public" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_npQlMEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_npRMQEr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nsGd0Er2EemMKs_nCnj9ZQ" name="dbgPortForGen" visibility="public" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nsHE4Er2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nsHE4Ur2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nuzzkEr2EemMKs_nCnj9ZQ" name="dbgPortForSensor" visibility="public" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nu0aoEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nu0aoUr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nxAzAEr2EemMKs_nCnj9ZQ" name="dbgPortForSwitcher" visibility="public" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nxBaEEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nxBaEUr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Port" xmi:id="_nzh7gEr2EemMKs_nCnj9ZQ" name="dbgPortForChute" visibility="public" type="_nexzgEr2EemMKs_nCnj9ZQ" isBehavior="true" isConjugated="true">
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_nzjwsEr2EemMKs_nCnj9ZQ" value="1"/>
        <upperValue xmi:type="uml:LiteralInteger" xmi:id="_nzkXwEr2EemMKs_nCnj9ZQ" value="1"/>
      </ownedAttribute>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_neaAEUr2EemMKs_nCnj9ZQ" name="dbgAgent StateMachine">
        <region xmi:id="_nkVo8Er2EemMKs_nCnj9ZQ" name="mainRegion">
          <transition xmi:id="_nk8s8Er2EemMKs_nCnj9ZQ" name="Trans__Init__State__34" source="_nkyU4Er2EemMKs_nCnj9ZQ" target="_nkeL0Er2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nluwEEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>initForPMD();
this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;Init__State__3&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;Init__State__3&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
          </transition>
          <transition xmi:id="_nlHsEEr2EemMKs_nCnj9ZQ" name="From__New__State__2__5" source="_nkn80Er2EemMKs_nCnj9ZQ" target="_nkeL0Er2EemMKs_nCnj9ZQ">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_nl5IIEr2EemMKs_nCnj9ZQ">
              <language>C++</language>
              <body>this->loadHeap();
this->execContext.clearPossibleExecPath();
this->execContext.addPossibleExecPath(&quot;New__State__2&quot;,&quot;New__State__2&quot;,&quot;To__New__State__2__7&quot;,msg->getSignalName());
this->execContext.setlastMsg(msg);
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC,&quot;New__State__2&quot;);
this->execContext.setPartialityPattern(pmd::PartialityPattern::NOTRIGER);
execHelper.getUserDecesion(&amp;execContext);
this->unLoadHeap();
</body>
            </effect>
            <trigger xmi:id="_nlQ2AEr2EemMKs_nCnj9ZQ" name="PME_Trig6" port="_nfj2oEr2EemMKs_nCnj9ZQ">
              <event xmi:type="uml:CallEvent" href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.common.rts.library_1.0.0.201707181445.jar!/libraries/UMLRT-RTS.uml#_IaEO8HDxEeSwWKwNKw1iAA"/>
            </trigger>
          </transition>
          <transition xmi:id="_nljw8Er2EemMKs_nCnj9ZQ" name="To__New__State__2__7" guard="_nl8ygEr2EemMKs_nCnj9ZQ" source="_nkeL0Er2EemMKs_nCnj9ZQ" target="_nkn80Er2EemMKs_nCnj9ZQ">
            <ownedRule xmi:id="_nl8ygEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion8">
              <specification xmi:type="uml:OpaqueExpression" xmi:id="_nl69UEr2EemMKs_nCnj9ZQ" name="PME_checkDecesion8">
                <language>C++</language>
                <body>return execContext.checkUserDecesion({&quot;To__New__State__2__7&quot;,&quot;New__State__2&quot;, execContext.getExecLocation().locName});
</body>
              </specification>
            </ownedRule>
          </transition>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nkeL0Er2EemMKs_nCnj9ZQ" name="DecesionPoint__1" kind="choice"/>
          <subvertex xmi:type="uml:State" xmi:id="_nkn80Er2EemMKs_nCnj9ZQ" name="New__State__2">
            <entry xmi:type="uml:OpaqueBehavior" xmi:id="_n2g-EEr2EemMKs_nCnj9ZQ" name="New__State__2">
              <language>C++</language>
              <body>timing.informIn(UMLRTTimespec(1,0));
</body>
            </entry>
          </subvertex>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_nkyU4Er2EemMKs_nCnj9ZQ" name="Init__State__3"/>
        </region>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ni3CQEr2EemMKs_nCnj9ZQ" name="loadHeap" specification="_ni1NEEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ni--EEr2EemMKs_nCnj9ZQ" name="unLoadHeap" specification="_ni-XAEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body></body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_njNAgUr2EemMKs_nCnj9ZQ" name="sendMessage" specification="_njNAgEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>int result=-1;
return result;
</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_njsIsUr2EemMKs_nCnj9ZQ" name="sendInternalMessage" specification="_njsIsEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>// will do it as next work</body>
      </ownedBehavior>
      <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_nkKCwEr2EemMKs_nCnj9ZQ" name="initForPMD" specification="_nkJbsEr2EemMKs_nCnj9ZQ">
        <language>C++</language>
        <body>execHelper.readExecConfig();
//this->execHelper.loadExecRules();
this->execContext.setCapsuleHeap(&amp;this->heap);
this->execContext.setCapsuleType(this->getTypeName());
this->execContext.setCapsuleInstanceID(this->getIndex());
this->execContext.setExecLocation(pmd::ExecLocationType::STATELOC, this->getCurrentStateString());
this->execContext.setCallBackMethodSendMessage(std::bind(&amp;Capsule_dbgAgent::sendMessage, this,std::placeholders::_1));
this->execContext.setCallBackMethodSendInternalMessage(std::bind(&amp;Capsule_dbgAgent::sendInternalMessage,this,std::placeholders::_1));
  this->execContext.addInputMessages(&quot;timing&quot;,&quot;timeout&quot;,{});
</body>
      </ownedBehavior>
      <ownedOperation xmi:id="_ni1NEEr2EemMKs_nCnj9ZQ" name="loadHeap" visibility="private" method="_ni3CQEr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_ni-XAEr2EemMKs_nCnj9ZQ" name="unLoadHeap" visibility="private" method="_ni--EEr2EemMKs_nCnj9ZQ"/>
      <ownedOperation xmi:id="_njNAgEr2EemMKs_nCnj9ZQ" name="sendMessage" visibility="private" method="_njNAgUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_njVjYEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_njhwoEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_njsIsEr2EemMKs_nCnj9ZQ" name="sendInternalMessage" visibility="private" method="_njsIsUr2EemMKs_nCnj9ZQ">
        <ownedParameter xmi:id="_nj0EgEr2EemMKs_nCnj9ZQ" name="message">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
        <ownedParameter xmi:id="_nj2gwEr2EemMKs_nCnj9ZQ" name="result" direction="return">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nkJbsEr2EemMKs_nCnj9ZQ" name="initForPMD" visibility="private" method="_nkKCwEr2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_neuwMEr2EemMKs_nCnj9ZQ" name="dbgProtocol">
      <packagedElement xmi:type="uml:Collaboration" xmi:id="_nexzgEr2EemMKs_nCnj9ZQ" name="dbgProtocol">
        <interfaceRealization xmi:id="_nfXCUEr2EemMKs_nCnj9ZQ" client="_nexzgEr2EemMKs_nCnj9ZQ" supplier="_ne4hMEr2EemMKs_nCnj9ZQ" contract="_ne4hMEr2EemMKs_nCnj9ZQ"/>
        <interfaceRealization xmi:id="_nfY3gEr2EemMKs_nCnj9ZQ" client="_nexzgEr2EemMKs_nCnj9ZQ" supplier="_ne6WYEr2EemMKs_nCnj9ZQ" contract="_ne6WYEr2EemMKs_nCnj9ZQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ne4hMEr2EemMKs_nCnj9ZQ" name="dbgProtocol">
        <ownedOperation xmi:id="_nfassEr2EemMKs_nCnj9ZQ" name="dbg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ne5vUEr2EemMKs_nCnj9ZQ" name="dbgProtocol~"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_ne6WYEr2EemMKs_nCnj9ZQ" name="dbgProtocolIO"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_ne7kgEr2EemMKs_nCnj9ZQ" client="_nexzgEr2EemMKs_nCnj9ZQ" supplier="_ne5vUEr2EemMKs_nCnj9ZQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_nfC5QEr2EemMKs_nCnj9ZQ" client="_nexzgEr2EemMKs_nCnj9ZQ" supplier="_ne6WYEr2EemMKs_nCnj9ZQ"/>
      <packagedElement xmi:type="uml:CallEvent" xmi:id="_nfhaYEr2EemMKs_nCnj9ZQ" operation="_nfassEr2EemMKs_nCnj9ZQ"/>
    </packagedElement>
    <profileApplication xmi:id="_nykGUML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_nyl7gML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.umlrt.profile_1.0.0.201707181432.jar!/umlProfile/uml-rt.profile.uml#_1h74oEeVEeO0lv5O1DTHOQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dJfAML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dKtIML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/cppproperties#/"/>
      </eAnnotations>
      <appliedProfile href="jar:file:///Users/mojtababagherzadeh/Desktop/Papyrus-RT.app/Contents/Eclipse/plugins/org.eclipse.papyrusrt.codegen.cpp.profile_1.0.0.201707181457.jar!/profiles/RTCppProperties.profile.uml#_vl5LALs8EeSTjNEQkASznQ"/>
    </profileApplication>
    <profileApplication xmi:id="_8dLUMML5EeaSH8bbL43htA">
      <eAnnotations xmi:id="_8dL7QML5EeaSH8bbL43htA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/umlrt/statemachine#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_RT_PROFILE/UMLRealTimeSM-addendum.profile.uml#_KLcn0FDtEeOA4ecmvfqvaw"/>
    </profileApplication>
  </uml:Model>
  <UMLRealTime:Capsule xmi:id="_9cQyoML5EeaSH8bbL43htA" base_Class="_9X86YML5EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Gu9tEML6EeaSH8bbL43htA" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_Iu5kgML6EeaSH8bbL43htA" base_Class="_IuNA8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_LOpkcML6EeaSH8bbL43htA" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <UMLRealTime:ProtocolContainer xmi:id="_QrF_AML6EeaSH8bbL43htA" base_Package="_QrBtkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrOh4ML6EeaSH8bbL43htA" base_Interface="_QrKQcML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrWdsML6EeaSH8bbL43htA" base_Interface="_QrSzUML6EeaSH8bbL43htA" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_QrckUML6EeaSH8bbL43htA" base_Interface="_QrZhAML6EeaSH8bbL43htA" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_QrgOsML6EeaSH8bbL43htA" base_Collaboration="_Qq5xwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_a5_b8ML6EeaSH8bbL43htA" base_Port="_a5ynoML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ej0CUML6EeaSH8bbL43htA" base_Port="_ejuiwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_gvt5MML6EeaSH8bbL43htA" base_Port="_gvpnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ieknsML6EeaSH8bbL43htA" base_Port="_ieg9UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_l2SKYML6EeaSH8bbL43htA" base_Port="_l2PuIML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_o94NcML6EeaSH8bbL43htA" base_Property="_o9z8AML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_sW7z8ML6EeaSH8bbL43htA" base_Property="_sW4woML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_uWJ5sML6EeaSH8bbL43htA" base_Property="_uWG2YML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_wXCMUML6EeaSH8bbL43htA" base_Property="_wW-h8ML6EeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_zZAIgML6EeaSH8bbL43htA" base_Property="_zY9sQML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_9hs20cL6EeaSH8bbL43htA" base_Connector="_9hn-UML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-P8c4sL6EeaSH8bbL43htA" base_Connector="_-P5ZkML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_-9SrEcL6EeaSH8bbL43htA" base_Connector="_-9PnwML6EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_ihRg8ML7EeaSH8bbL43htA" isWired="false" base_Port="_ihPrwML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_sgbRsML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_sggKMML7EeaSH8bbL43htA" base_State="_sgeVAML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_sglCsML7EeaSH8bbL43htA" base_Region="_sgSu0ML7EeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_shjTEML7EeaSH8bbL43htA" base_StateMachine="_sgJk4ML7EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_TGQH8ML8EeaSH8bbL43htA" isWired="false" base_Port="_TGKoYML8EeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_QkHBsMMEEeaSH8bbL43htA" isWired="false" base_Port="_QkCwQMMEEeaSH8bbL43htA"/>
  <UMLRealTime:RTPort xmi:id="_P-0CoMMMEeaSH8bbL43htA" isWired="false" base_Port="_P-w_UMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_SANSoMMMEeaSH8bbL43htA" base_Pseudostate="_SAMEgMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTState xmi:id="_SAPH0MMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTRegion xmi:id="_SAPu4MMMEeaSH8bbL43htA" base_Region="_SAKPUMMMEeaSH8bbL43htA"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_SBGqkMMMEeaSH8bbL43htA" base_StateMachine="_SAHMAMMMEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_0KCXUsMPEeaSH8bbL43htA" base_Connector="_0KAiIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_02B6osMPEeaSH8bbL43htA" base_Connector="_02AFcMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_13cUUcMPEeaSH8bbL43htA" base_Connector="_13afIMMPEeaSH8bbL43htA"/>
  <UMLRealTime:RTConnector xmi:id="_2pYHkMMPEeaSH8bbL43htA" base_Connector="_2pVrUMMPEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_bKtWgMMQEeaSH8bbL43htA" base_Property="_bKsIYMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_ex6GsMMQEeaSH8bbL43htA" base_Property="_ex4RgMMQEeaSH8bbL43htA"/>
  <UMLRealTime:CapsulePart xmi:id="_gzrKIMMQEeaSH8bbL43htA" base_Property="_gzot4MMQEeaSH8bbL43htA"/>
  <UMLRealTime:Capsule xmi:id="_j0w1YMM4EeahHehXumVB-w" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_p187wMM4EeahHehXumVB-w" base_Port="_p1u5UMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_sK-SYMM4EeahHehXumVB-w" base_Port="_sK7PEMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_v-PIoMM4EeahHehXumVB-w" base_Port="_v-KQIMM4EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_wvSyIMM4EeahHehXumVB-w" base_Package="_wvPHwMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvY4wMM4EeahHehXumVB-w" base_Interface="_wvV1cMM4EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_wve_YMM4EeahHehXumVB-w" base_Interface="_wvcjIMM4EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_wvke8MM4EeahHehXumVB-w" base_Interface="_wviCsMM4EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_wvniQMM4EeahHehXumVB-w" base_Collaboration="_wvKPQMM4EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_AJ77MMM5EeahHehXumVB-w" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_CHYfUMM5EeahHehXumVB-w" base_Port="_CHUN4MM5EeahHehXumVB-w"/>
  <UMLRealTime:Capsule xmi:id="_O_8GIMM5EeahHehXumVB-w" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <UMLRealTime:ProtocolContainer xmi:id="_RDhugMM5EeahHehXumVB-w" base_Package="_RDfSQMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDkKwMM5EeahHehXumVB-w" base_Interface="_RDiVkMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDnOEMM5EeahHehXumVB-w" base_Interface="_RDlY4MM5EeahHehXumVB-w" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_RDrfgMM5EeahHehXumVB-w" base_Interface="_RDpDQMM5EeahHehXumVB-w" rtMsgKind="inOut"/>
  <UMLRealTime:Protocol xmi:id="_RDt7wMM5EeahHehXumVB-w" base_Collaboration="_RDbn4MM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_gMcOYMM5EeahHehXumVB-w" base_Port="_gMZLEMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_m5f8QMM5EeahHehXumVB-w" base_Port="_m5dgAMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_0csbgMM5EeahHehXumVB-w" base_Port="_0cp_QMM5EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_3ton0MM5EeahHehXumVB-w" base_Port="_3tk9cMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_8dOjcMM5EeahHehXumVB-w" base_Property="_8dMHMMM5EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_ANxc4MM6EeahHehXumVB-w" base_Property="_ANvnsMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_DptYQMM6EeahHehXumVB-w" base_Property="_Dpq8AMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_GmrfssM6EeahHehXumVB-w" base_Connector="_GmpDcMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_JFkkAsM6EeahHehXumVB-w" base_Connector="_JFiHwMM6EeahHehXumVB-w"/>
  <UMLRealTime:CapsulePart xmi:id="_KEoNQMM6EeahHehXumVB-w" base_Property="_KElJ8MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Ni31wsM6EeahHehXumVB-w" base_Connector="_Ni2AkMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_Q2uzMMM6EeahHehXumVB-w" base_Connector="_Q2rv4MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_TMfwscM6EeahHehXumVB-w" base_Connector="_TMcGUMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_T-WEYcM6EeahHehXumVB-w" base_Connector="_T-SaAMM6EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_VxL7AMM6EeahHehXumVB-w" base_Port="_VxKF0MM6EeahHehXumVB-w"/>
  <UMLRealTime:RTConnector xmi:id="_fBwHcsM6EeahHehXumVB-w" base_Connector="_fBuSQMM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_mXF9UMM6EeahHehXumVB-w" base_StateMachine="_mXBE0MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_mXGkYMM6EeahHehXumVB-w" base_Region="_mXBE0cM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_mXHLcMM6EeahHehXumVB-w" base_Pseudostate="_mXBE18M6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_mXHygMM6EeahHehXumVB-w" base_State="_mXBE2MM6EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_IdGZUMM7EeahHehXumVB-w" base_StateMachine="_IdCu8MM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_IdHAYMM7EeahHehXumVB-w" base_Region="_IdCu8cM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_IdHncMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_IdHnccM7EeahHehXumVB-w" base_State="_IdDWBsM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_yUREgMM7EeahHehXumVB-w" base_Pseudostate="_yUOoQMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTState xmi:id="_yUTgwMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTRegion xmi:id="_yUUu4MM7EeahHehXumVB-w" base_Region="_yUMMAMM7EeahHehXumVB-w"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_yVXQsMM7EeahHehXumVB-w" base_StateMachine="_yUE3QMM7EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_uL4n8MM9EeahHehXumVB-w" isWired="false" base_Port="_uL2LsMM9EeahHehXumVB-w"/>
  <UMLRealTime:RTPort xmi:id="_qxaXcMX2EeaYV5cb1Zesag" isWired="false" base_Port="_qxGOYMX2EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_x2xQkMX2EeaYV5cb1Zesag" isWired="false" base_Port="_x2tmMMX2EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_k2x6IMX4EeaYV5cb1Zesag" base_State="_k2uPwMX4EeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_Wbb1cMX5EeaYV5cb1Zesag" isWired="false" base_Port="_WbYyIMX5EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_aL1IcMX6EeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTState xmi:id="_GOUpoMYlEeaYV5cb1Zesag" base_State="_GOTbgMYlEeaYV5cb1Zesag"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_RQTwYMYlEeaYV5cb1Zesag"/>
  <UMLRealTime:RTPort xmi:id="_4c99IMYlEeaYV5cb1Zesag" isWired="false" base_Port="_4c8vAMYlEeaYV5cb1Zesag"/>
  <RTCppProperties:PassiveClassProperties xmi:id="_TuYcgN5nEeakB9CQglrL_g" headerPreface="" base_Class="_aEoEwML7EeaSH8bbL43htA" privateDeclarations="" publicDeclarations=""/>
  <UMLRealTime:Capsule xmi:id="_neaAEEr2EemMKs_nCnj9ZQ" base_Class="_nd7e8Er2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTStateMachine xmi:id="_neuJIEr2EemMKs_nCnj9ZQ" base_StateMachine="_neaAEUr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:ProtocolContainer xmi:id="_nexMcEr2EemMKs_nCnj9ZQ" base_Package="_neuwMEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:Protocol xmi:id="_ne36IEr2EemMKs_nCnj9ZQ" base_Collaboration="_nexzgEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_nfF8kEr2EemMKs_nCnj9ZQ" base_Interface="_ne4hMEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTMessageSet xmi:id="_nfPGgEr2EemMKs_nCnj9ZQ" base_Interface="_ne5vUEr2EemMKs_nCnj9ZQ" rtMsgKind="out"/>
  <UMLRealTime:RTMessageSet xmi:id="_nfUmEEr2EemMKs_nCnj9ZQ" base_Interface="_ne6WYEr2EemMKs_nCnj9ZQ" rtMsgKind="inOut"/>
  <UMLRealTime:RTPort xmi:id="_nf2xkEr2EemMKs_nCnj9ZQ" base_Port="_nfj2oEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_niiSIEr2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_nd7e8Er2EemMKs_nCnj9ZQ" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nit4UEr2EemMKs_nCnj9ZQ" base_Class="_nd7e8Er2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_njbqAEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_njVjYEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_nj1SoEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nj0EgEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTRegion xmi:id="_nkdkwEr2EemMKs_nCnj9ZQ" base_Region="_nkVo8Er2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nkmusEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nkeL0Er2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nkxGwEr2EemMKs_nCnj9ZQ" base_State="_nkn80Er2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nk0xIEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nkyU4Er2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_npB7sEr2EemMKs_nCnj9ZQ" isWired="false" base_Port="_nmPGYEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_npYhAEr2EemMKs_nCnj9ZQ" isPublish="true" isWired="false" base_Port="_npPXEEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_npkHMEr2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_LOPUwML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nptRIEr2EemMKs_nCnj9ZQ" base_Class="_LOPUwML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_nqNncEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nqMZUEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_nqX_gEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nqWxYEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nq_DgEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nq9OUEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTState xmi:id="_nrARoEr2EemMKs_nCnj9ZQ" base_State="_nq_qkEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nsEooEr2EemMKs_nCnj9ZQ" isWired="false" base_Port="_nr8s0Er2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nsITAEr2EemMKs_nCnj9ZQ" isPublish="true" isWired="false" base_Port="_nsGd0Er2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nsZ_0Er2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_GuPUUML6EeaSH8bbL43htA" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nsccEEr2EemMKs_nCnj9ZQ" base_Class="_GuPUUML6EeaSH8bbL43htA"/>
  <RTCppProperties:ParameterProperties xmi:id="_ntHxgEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_ntBD0Er2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_ntXCEEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_ntQ7cEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nt7p0Er2EemMKs_nCnj9ZQ" base_Pseudostate="_nt4mgEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nuAiUEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nt_7QEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nuzMgEr2EemMKs_nCnj9ZQ" isWired="false" base_Port="_nurQsEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nu2P0Er2EemMKs_nCnj9ZQ" isPublish="true" isWired="false" base_Port="_nuzzkEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nvAA0Er2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_AJLGMMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nvGugEr2EemMKs_nCnj9ZQ" base_Class="_AJLGMMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_nviMUEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nvdT0Er2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_nvnr4Er2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nvnE0Er2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nwX50Er2EemMKs_nCnj9ZQ" base_Pseudostate="_nwTBUEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nwZvAEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nwYg4Er2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nw8hkEr2EemMKs_nCnj9ZQ" isWired="false" base_Port="_nw5eQEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nxCBIEr2EemMKs_nCnj9ZQ" isPublish="true" isWired="false" base_Port="_nxAzAEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nxLyIEr2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_O_UbEMM5EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nxNnUEr2EemMKs_nCnj9ZQ" base_Class="_O_UbEMM5EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_nx0rUEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nxzdMEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_nx6x8Er2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_nx3HkEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_nyn8kEr2EemMKs_nCnj9ZQ" base_Pseudostate="_nykSMEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nzdqEEr2EemMKs_nCnj9ZQ" isWired="false" base_Port="_nzbN0Er2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:RTPort xmi:id="_nzk-0Er2EemMKs_nCnj9ZQ" isPublish="true" isWired="false" base_Port="_nzh7gEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nzzBQEr2EemMKs_nCnj9ZQ" headerPreface="#include &quot;ExecContext.hpp&quot; &#xA;#include &quot;PMDTypes.hpp&quot;&#xA;#include &quot;Config.hpp&quot;&#xA;#include &quot;Heap.hpp&quot;&#xA;#include &lt;iostream>&#xA;#include &lt;map>&#xA;#include &lt;functional>&#xA;#include &quot;ExecHelper.hpp&quot;&#xA;#include &lt;boost/any.hpp>&#xA;" base_Class="_jvOOEMM4EeahHehXumVB-w" privateDeclarations="pmd::Heap  heap;&#xA;pmd::ExecHelper execHelper;&#xA;Config config;&#xA;UMLRTMessage currentMessage;&#xA;bool runStateCode;&#xA;pmd::ExecContextOfCapsule execContext;&#xA;"/>
  <RTCppProperties:CapsuleProperties xmi:id="_nz5H4Er2EemMKs_nCnj9ZQ" base_Class="_jvOOEMM4EeahHehXumVB-w"/>
  <RTCppProperties:ParameterProperties xmi:id="_n0e9wEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_n0Y3IEr2EemMKs_nCnj9ZQ"/>
  <RTCppProperties:ParameterProperties xmi:id="_n0ngoEr2EemMKs_nCnj9ZQ" type="pmd::Message" base_Parameter="_n0ioIEr2EemMKs_nCnj9ZQ"/>
  <UMLRTStateMachines:RTPseudostate xmi:id="_n1V5YEr2EemMKs_nCnj9ZQ" base_Pseudostate="_n1UrQEr2EemMKs_nCnj9ZQ"/>
  <UMLRealTime:CapsulePart xmi:id="_n2d6wEr2EemMKs_nCnj9ZQ" base_Property="_n2csoEr2EemMKs_nCnj9ZQ"/>
</xmi:XMI>
